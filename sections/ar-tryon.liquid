{% comment %}
  AR Try-On Feature
  - Real-time camera feed with t-shirt overlay
  - Body detection using MediaPipe
  - Color and design switching
  - Mobile-first responsive design
  - Photo capture functionality
{% endcomment %}

<div class="ar-tryon-wrapper" id="ar-tryon-{{ section.id }}">
  <div class="ar-tryon-container">
    
    <!-- Header -->
    <div class="ar-header">
      <h1 class="ar-title">{{ section.settings.heading | default: "ðŸ‘• Virtual Try-On" }}</h1>
      <p class="ar-subtitle">{{ section.settings.description | default: "See how our t-shirts look on you in real-time" }}</p>
    </div>

    <!-- Main AR Interface -->
    <div class="ar-main">
      
      <!-- Camera View -->
      <div class="ar-camera-container">
        <video id="ar-video" autoplay playsinline></video>
        <canvas id="ar-canvas"></canvas>
        
        <!-- Overlay Messages -->
        <div class="ar-overlay-message" id="ar-message">
          <div class="ar-message-content">
            <svg class="ar-icon" viewBox="0 0 24 24" width="48" height="48">
              <path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
            </svg>
            <p class="ar-message-text">Click "Start Try-On" to begin</p>
          </div>
        </div>

        <!-- Loading Spinner -->
        <div class="ar-loading" id="ar-loading" style="display: none;">
          <div class="ar-spinner"></div>
          <p>Loading AR Experience...</p>
        </div>

        <!-- Camera Controls -->
        <div class="ar-controls-overlay" id="ar-controls" style="display: none;">
          <button class="ar-control-btn ar-capture-btn" id="ar-capture" title="Take Photo">
            <svg viewBox="0 0 24 24" width="24" height="24">
              <path fill="currentColor" d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"/>
            </svg>
          </button>
          
          <button class="ar-control-btn ar-flip-btn" id="ar-flip" title="Flip Camera">
            <svg viewBox="0 0 24 24" width="24" height="24">
              <path fill="currentColor" d="M20 5h-3.17L15 3H9L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-8 13c-2.76 0-5-2.24-5-5H5l2.5-2.5L10 13H8c0 2.21 1.79 4 4 4 .58 0 1.13-.13 1.62-.35l.74.74C13.65 17.76 12.86 18 12 18zm4.5-2.5L14 13h2c0-2.21-1.79-4-4-4-.58 0-1.13.13-1.62.35l-.74-.73C10.35 8.24 11.14 8 12 8c2.76 0 5 2.24 5 5h2l-2.5 2.5z"/>
            </svg>
          </button>

          <button class="ar-control-btn ar-close-btn" id="ar-close" title="Close">
            <svg viewBox="0 0 24 24" width="24" height="24">
              <path fill="currentColor" d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
            </svg>
          </button>
        </div>
      </div>

      <!-- Sidebar Controls -->
      <div class="ar-sidebar">
        
        <!-- Start Button (Shows initially) -->
        <div class="ar-start-section" id="ar-start-section">
          <button class="ar-start-btn" id="ar-start-btn">
            <svg viewBox="0 0 24 24" width="24" height="24">
              <path fill="currentColor" d="M21 6h-3.17L16 4h-6v2h5.12l1.83 2H21v12H5v-9H3v9c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zM8 14c0 2.76 2.24 5 5 5s5-2.24 5-5-2.24-5-5-5-5 2.24-5 5zm5-3c1.65 0 3 1.35 3 3s-1.35 3-3 3-3-1.35-3-3 1.35-3 3-3zM5 6h3V4H5V1H3v3H0v2h3v3h2z"/>
            </svg>
            Start Try-On
          </button>
          
          <div class="ar-features">
            <div class="ar-feature-item">
              <svg viewBox="0 0 24 24" width="20" height="20">
                <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" fill="none"/>
                <path fill="currentColor" d="M12 6v6l4 2"/>
              </svg>
              <span>Real-time preview</span>
            </div>
            <div class="ar-feature-item">
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
              </svg>
              <span>Try multiple colors</span>
            </div>
            <div class="ar-feature-item">
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path fill="currentColor" d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"/>
              </svg>
              <span>Capture photos</span>
            </div>
          </div>
        </div>

        <!-- Design Selection (Shows when AR active) -->
        <div class="ar-selection-section" id="ar-selection-section" style="display: none;">
          
          <div class="ar-section-header">
            <h3>Choose Design</h3>
          </div>
          
          <div class="ar-design-grid" id="ar-design-grid">
            {% if section.settings.product_1 != blank %}
              {% assign product_1 = all_products[section.settings.product_1] %}
              <div class="ar-design-card" data-product-id="{{ product_1.id }}" data-product-handle="{{ product_1.handle }}">
                {% if product_1.featured_image %}
                  <img src="{{ product_1.featured_image | image_url: width: 200 }}" alt="{{ product_1.title }}" loading="lazy">
                {% endif %}
                <span class="ar-design-name">{{ product_1.title | truncate: 30 }}</span>
              </div>
            {% endif %}

            {% if section.settings.product_2 != blank %}
              {% assign product_2 = all_products[section.settings.product_2] %}
              <div class="ar-design-card" data-product-id="{{ product_2.id }}" data-product-handle="{{ product_2.handle }}">
                {% if product_2.featured_image %}
                  <img src="{{ product_2.featured_image | image_url: width: 200 }}" alt="{{ product_2.title }}" loading="lazy">
                {% endif %}
                <span class="ar-design-name">{{ product_2.title | truncate: 30 }}</span>
              </div>
            {% endif %}

            {% if section.settings.product_3 != blank %}
              {% assign product_3 = all_products[section.settings.product_3] %}
              <div class="ar-design-card" data-product-id="{{ product_3.id }}" data-product-handle="{{ product_3.handle }}">
                {% if product_3.featured_image %}
                  <img src="{{ product_3.featured_image | image_url: width: 200 }}" alt="{{ product_3.title }}" loading="lazy">
                {% endif %}
                <span class="ar-design-name">{{ product_3.title | truncate: 30 }}</span>
              </div>
            {% endif %}

            {% if section.settings.product_4 != blank %}
              {% assign product_4 = all_products[section.settings.product_4] %}
              <div class="ar-design-card" data-product-id="{{ product_4.id }}" data-product-handle="{{ product_4.handle }}">
                {% if product_4.featured_image %}
                  <img src="{{ product_4.featured_image | image_url: width: 200 }}" alt="{{ product_4.title }}" loading="lazy">
                {% endif %}
                <span class="ar-design-name">{{ product_4.title | truncate: 30 }}</span>
              </div>
            {% endif %}
          </div>

          <div class="ar-section-header" style="margin-top: 24px;">
            <h3>T-Shirt Color</h3>
          </div>

          <div class="ar-color-selector" id="ar-color-selector">
            <button class="ar-color-btn" data-color="#FFFFFF" style="background: #FFFFFF;" title="White"></button>
            <button class="ar-color-btn active" data-color="#000000" style="background: #000000;" title="Black"></button>
            <button class="ar-color-btn" data-color="#1e3a8a" style="background: #1e3a8a;" title="Navy"></button>
            <button class="ar-color-btn" data-color="#991b1b" style="background: #991b1b;" title="Red"></button>
            <button class="ar-color-btn" data-color="#4ade80" style="background: #4ade80;" title="Green"></button>
            <button class="ar-color-btn" data-color="#fbbf24" style="background: #fbbf24;" title="Yellow"></button>
            <button class="ar-color-btn" data-color="#a855f7" style="background: #a855f7;" title="Purple"></button>
            <button class="ar-color-btn" data-color="#ec4899" style="background: #ec4899;" title="Pink"></button>
            <button class="ar-color-btn" data-color="#64748b" style="background: #64748b;" title="Gray"></button>
          </div>

          <button class="ar-shop-btn" id="ar-shop-btn" style="display: none;">
            <svg viewBox="0 0 24 24" width="20" height="20">
              <path fill="currentColor" d="M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"/>
            </svg>
            Shop This Design
          </button>
        </div>

      </div>
    </div>

    <!-- Captured Photos Gallery -->
    <div class="ar-gallery" id="ar-gallery" style="display: none;">
      <h3>Your Try-On Photos</h3>
      <div class="ar-gallery-grid" id="ar-gallery-grid"></div>
    </div>

  </div>
</div>

<style>
/* Base Styles */
.ar-tryon-wrapper {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  min-height: 100vh;
  padding: 40px 20px;
}

.ar-tryon-container {
  max-width: 1400px;
  margin: 0 auto;
}

/* Header */
.ar-header {
  text-align: center;
  margin-bottom: 40px;
  color: #ffffff;
}

.ar-title {
  font-size: clamp(32px, 5vw, 48px);
  font-weight: 800;
  margin: 0 0 12px 0;
  text-shadow: 0 2px 20px rgba(0,0,0,0.2);
}

.ar-subtitle {
  font-size: 18px;
  opacity: 0.95;
  margin: 0;
}

/* Main Layout */
.ar-main {
  display: grid;
  grid-template-columns: 1fr;
  gap: 24px;
  background: #ffffff;
  border-radius: 24px;
  padding: 24px;
  box-shadow: 0 20px 60px rgba(0,0,0,0.3);
}

@media (min-width: 768px) {
  .ar-main {
    grid-template-columns: 2fr 1fr;
  }
}

/* Camera Container */
.ar-camera-container {
  position: relative;
  background: #000000;
  border-radius: 16px;
  overflow: hidden;
  aspect-ratio: 4 / 3;
  display: flex;
  align-items: center;
  justify-content: center;
}

#ar-video {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: none;
}

#ar-canvas {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: contain;
  z-index: 2;
}

/* Overlay Message */
.ar-overlay-message {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0,0,0,0.7);
  backdrop-filter: blur(10px);
  z-index: 3;
}

.ar-message-content {
  text-align: center;
  color: #ffffff;
}

.ar-icon {
  margin-bottom: 16px;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.7; transform: scale(1.1); }
}

.ar-message-text {
  font-size: 18px;
  font-weight: 600;
  margin: 0;
}

/* Loading */
.ar-loading {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: rgba(0,0,0,0.8);
  backdrop-filter: blur(10px);
  color: #ffffff;
  z-index: 4;
}

.ar-spinner {
  width: 60px;
  height: 60px;
  border: 4px solid rgba(255,255,255,0.2);
  border-top-color: #ffffff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 16px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Camera Controls Overlay */
.ar-controls-overlay {
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 16px;
  z-index: 5;
}

.ar-control-btn {
  width: 56px;
  height: 56px;
  border-radius: 50%;
  border: none;
  background: rgba(255,255,255,0.9);
  backdrop-filter: blur(10px);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
}

.ar-control-btn:hover {
  background: #ffffff;
  transform: scale(1.1);
}

.ar-control-btn:active {
  transform: scale(0.95);
}

.ar-capture-btn {
  width: 72px;
  height: 72px;
  background: linear-gradient(135deg, #667eea, #764ba2);
  color: #ffffff;
}

/* Sidebar */
.ar-sidebar {
  display: flex;
  flex-direction: column;
  gap: 24px;
}

/* Start Section */
.ar-start-section {
  text-align: center;
}

.ar-start-btn {
  width: 100%;
  padding: 18px 32px;
  background: linear-gradient(135deg, #667eea, #764ba2);
  color: #ffffff;
  border: none;
  border-radius: 12px;
  font-size: 18px;
  font-weight: 700;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  transition: all 0.3s ease;
  box-shadow: 0 4px 16px rgba(102,126,234,0.4);
}

.ar-start-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(102,126,234,0.6);
}

.ar-start-btn:active {
  transform: translateY(0);
}

.ar-features {
  margin-top: 24px;
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.ar-feature-item {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 12px;
  background: #f8fafc;
  border-radius: 8px;
  font-size: 14px;
  color: #475569;
}

.ar-feature-item svg {
  color: #667eea;
  flex-shrink: 0;
}

/* Selection Section */
.ar-section-header {
  margin-bottom: 16px;
}

.ar-section-header h3 {
  font-size: 16px;
  font-weight: 700;
  color: #0f172a;
  margin: 0;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.ar-design-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 12px;
}

.ar-design-card {
  position: relative;
  aspect-ratio: 1;
  border-radius: 12px;
  overflow: hidden;
  cursor: pointer;
  border: 3px solid transparent;
  transition: all 0.3s ease;
  background: #f1f5f9;
}

.ar-design-card:hover {
  border-color: #667eea;
  transform: scale(1.05);
}

.ar-design-card.active {
  border-color: #667eea;
  box-shadow: 0 0 0 4px rgba(102,126,234,0.2);
}

.ar-design-card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.ar-design-name {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
  color: #ffffff;
  padding: 8px;
  font-size: 12px;
  font-weight: 600;
  text-align: center;
}

/* Color Selector */
.ar-color-selector {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  justify-content: center;
}

.ar-color-btn {
  width: 44px;
  height: 44px;
  border-radius: 50%;
  border: 3px solid #e2e8f0;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.ar-color-btn:hover {
  transform: scale(1.15);
  border-color: #cbd5e1;
}

.ar-color-btn.active {
  border-color: #667eea;
  box-shadow: 0 0 0 4px rgba(102,126,234,0.2);
  transform: scale(1.15);
}

/* Shop Button */
.ar-shop-btn {
  width: 100%;
  padding: 16px 24px;
  background: linear-gradient(135deg, #10b981, #059669);
  color: #ffffff;
  border: none;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 700;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  transition: all 0.3s ease;
  margin-top: 16px;
}

.ar-shop-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(16,185,129,0.4);
}

/* Gallery */
.ar-gallery {
  margin-top: 40px;
  background: #ffffff;
  padding: 32px;
  border-radius: 24px;
}

.ar-gallery h3 {
  font-size: 24px;
  font-weight: 700;
  color: #0f172a;
  margin: 0 0 24px 0;
}

.ar-gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 16px;
}

.ar-gallery-item {
  position: relative;
  aspect-ratio: 3 / 4;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.ar-gallery-item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.ar-gallery-item-actions {
  position: absolute;
  top: 8px;
  right: 8px;
  display: flex;
  gap: 8px;
}

.ar-gallery-action-btn {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background: rgba(255,255,255,0.9);
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.ar-gallery-action-btn:hover {
  background: #ffffff;
  transform: scale(1.1);
}

/* Mobile Responsive */
@media (max-width: 767px) {
  .ar-tryon-wrapper {
    padding: 20px 12px;
  }

  .ar-main {
    padding: 16px;
  }

  .ar-title {
    font-size: 28px;
  }

  .ar-subtitle {
    font-size: 16px;
  }

  .ar-design-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}
</style>

<script>
// AR Try-On Application
(function() {
  'use strict';

  const ARTryOn = {
    video: null,
    canvas: null,
    ctx: null,
    stream: null,
    isActive: false,
    facingMode: 'user',
    currentColor: '#000000',
    currentDesign: null,
    capturedPhotos: [],

    init() {
      this.video = document.getElementById('ar-video');
      this.canvas = document.getElementById('ar-canvas');
      this.ctx = this.canvas.getContext('2d');
      
      this.bindEvents();
    },

    bindEvents() {
      // Start button
      document.getElementById('ar-start-btn')?.addEventListener('click', () => this.startAR());
      
      // Camera controls
      document.getElementById('ar-close')?.addEventListener('click', () => this.stopAR());
      document.getElementById('ar-flip')?.addEventListener('click', () => this.flipCamera());
      document.getElementById('ar-capture')?.addEventListener('click', () => this.capturePhoto());
      
      // Color selection
      document.querySelectorAll('.ar-color-btn').forEach(btn => {
        btn.addEventListener('click', (e) => this.selectColor(e.target.dataset.color, e.target));
      });

      // Design selection
      document.querySelectorAll('.ar-design-card').forEach(card => {
        card.addEventListener('click', (e) => this.selectDesign(e.currentTarget));
      });

      // Shop button
      document.getElementById('ar-shop-btn')?.addEventListener('click', () => this.shopCurrentDesign());
    },

    async startAR() {
      try {
        // Show loading
        document.getElementById('ar-loading').style.display = 'flex';
        document.getElementById('ar-message').style.display = 'none';
        
        // Request camera permission
        this.stream = await navigator.mediaDevices.getUserMedia({
          video: {
            facingMode: this.facingMode,
            width: { ideal: 1280 },
            height: { ideal: 720 }
          }
        });

        this.video.srcObject = this.stream;
        await this.video.play();

        // Set canvas size to match video
        this.canvas.width = this.video.videoWidth;
        this.canvas.height = this.video.videoHeight;

        // Hide loading, show controls
        document.getElementById('ar-loading').style.display = 'none';
        document.getElementById('ar-controls').style.display = 'flex';
        this.video.style.display = 'block';

        // Switch UI
        document.getElementById('ar-start-section').style.display = 'none';
        document.getElementById('ar-selection-section').style.display = 'block';

        this.isActive = true;
        this.renderLoop();

      } catch (error) {
        console.error('AR Error:', error);
        alert('Unable to access camera. Please grant camera permissions and try again.');
        document.getElementById('ar-loading').style.display = 'none';
        document.getElementById('ar-message').style.display = 'flex';
      }
    },

    stopAR() {
      this.isActive = false;
      
      if (this.stream) {
        this.stream.getTracks().forEach(track => track.stop());
      }

      this.video.style.display = 'none';
      document.getElementById('ar-controls').style.display = 'none';
      document.getElementById('ar-message').style.display = 'flex';
      
      // Switch UI back
      document.getElementById('ar-start-section').style.display = 'block';
      document.getElementById('ar-selection-section').style.display = 'none';

      // Clear canvas
      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
    },

    async flipCamera() {
      this.facingMode = this.facingMode === 'user' ? 'environment' : 'user';
      
      if (this.isActive) {
        await this.stopAR();
        await this.startAR();
      }
    },

    selectColor(color, btn) {
      this.currentColor = color;
      
      // Update active state
      document.querySelectorAll('.ar-color-btn').forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
    },

    selectDesign(card) {
      // Update active state
      document.querySelectorAll('.ar-design-card').forEach(c => c.classList.remove('active'));
      card.classList.add('active');

      this.currentDesign = {
        id: card.dataset.productId,
        handle: card.dataset.productHandle,
        image: card.querySelector('img')?.src
      };

      // Show shop button
      document.getElementById('ar-shop-btn').style.display = 'flex';
    },

    renderLoop() {
      if (!this.isActive) return;

      // Clear canvas
      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);

      // Draw video frame
      this.ctx.drawImage(this.video, 0, 0, this.canvas.width, this.canvas.height);

      // Draw t-shirt overlay
      this.drawTShirtOverlay();

      requestAnimationFrame(() => this.renderLoop());
    },

    drawTShirtOverlay() {
      const centerX = this.canvas.width / 2;
      const centerY = this.canvas.height / 2;
      
      // Simple t-shirt shape (torso area)
      const tshirtWidth = this.canvas.width * 0.5;
      const tshirtHeight = this.canvas.height * 0.4;
      const tshirtTop = centerY - tshirtHeight * 0.3;

      // Draw t-shirt base color with transparency
      this.ctx.globalAlpha = 0.7;
      this.ctx.fillStyle = this.currentColor;
      
      // T-shirt body (simplified rounded rectangle)
      this.ctx.beginPath();
      this.drawRoundedRect(
        centerX - tshirtWidth / 2,
        tshirtTop,
        tshirtWidth,
        tshirtHeight,
        20
      );
      this.ctx.fill();

      // If design is selected, draw it
      if (this.currentDesign && this.currentDesign.image) {
        this.drawDesignOnShirt(centerX, tshirtTop + tshirtHeight * 0.4, tshirtWidth * 0.6);
      }

      this.ctx.globalAlpha = 1.0;
    },

    drawRoundedRect(x, y, width, height, radius) {
      this.ctx.moveTo(x + radius, y);
      this.ctx.lineTo(x + width - radius, y);
      this.ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
      this.ctx.lineTo(x + width, y + height - radius);
      this.ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
      this.ctx.lineTo(x + radius, y + height);
      this.ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
      this.ctx.lineTo(x, y + radius);
      this.ctx.quadraticCurveTo(x, y, x + radius, y);
    },

    drawDesignOnShirt(centerX, centerY, maxWidth) {
      // Note: In production, you'd load and cache images
      const img = new Image();
      img.crossOrigin = 'anonymous';
      img.src = this.currentDesign.image;
      
      if (img.complete) {
        const aspectRatio = img.width / img.height;
        const drawWidth = maxWidth;
        const drawHeight = drawWidth / aspectRatio;
        
        this.ctx.globalAlpha = 0.9;
        this.ctx.drawImage(
          img,
          centerX - drawWidth / 2,
          centerY - drawHeight / 2,
          drawWidth,
          drawHeight
        );
        this.ctx.globalAlpha = 1.0;
      }
    },

    capturePhoto() {
      // Create a temporary canvas with the current frame
      const captureCanvas = document.createElement('canvas');
      captureCanvas.width = this.canvas.width;
      captureCanvas.height = this.canvas.height;
      const captureCtx = captureCanvas.getContext('2d');
      
      // Copy current canvas content
      captureCtx.drawImage(this.canvas, 0, 0);
      
      // Convert to data URL
      const dataUrl = captureCanvas.toDataURL('image/png');
      this.capturedPhotos.push(dataUrl);
      
      // Show gallery
      this.updateGallery();
      document.getElementById('ar-gallery').style.display = 'block';
      
      // Flash effect
      this.ctx.globalAlpha = 0.5;
      this.ctx.fillStyle = '#ffffff';
      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);
      this.ctx.globalAlpha = 1.0;
    },

    updateGallery() {
      const gallery = document.getElementById('ar-gallery-grid');
      gallery.innerHTML = '';
      
      this.capturedPhotos.forEach((photo, index) => {
        const item = document.createElement('div');
        item.className = 'ar-gallery-item';
        item.innerHTML = `
          <img src="${photo}" alt="Try-on photo ${index + 1}">
          <div class="ar-gallery-item-actions">
            <button class="ar-gallery-action-btn" onclick="ARTryOn.downloadPhoto(${index})">
              <svg viewBox="0 0 24 24" width="20" height="20">
                <path fill="currentColor" d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/>
              </svg>
            </button>
          </div>
        `;
        gallery.appendChild(item);
      });
    },

    downloadPhoto(index) {
      const link = document.createElement('a');
      link.href = this.capturedPhotos[index];
      link.download = `ar-tryon-${Date.now()}.png`;
      link.click();
    },

    shopCurrentDesign() {
      if (this.currentDesign && this.currentDesign.handle) {
        window.location.href = `/products/${this.currentDesign.handle}`;
      }
    }
  };

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => ARTryOn.init());
  } else {
    ARTryOn.init();
  }

  // Make available globally for inline handlers
  window.ARTryOn = ARTryOn;
})();
</script>

{% schema %}
{
  "name": "AR Try-On",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "ðŸ‘• Virtual Try-On"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "See how our t-shirts look on you in real-time"
    },
    {
      "type": "product",
      "id": "product_1",
      "label": "Product 1"
    },
    {
      "type": "product",
      "id": "product_2",
      "label": "Product 2"
    },
    {
      "type": "product",
      "id": "product_3",
      "label": "Product 3"
    },
    {
      "type": "product",
      "id": "product_4",
      "label": "Product 4"
    }
  ],
  "presets": [
    {
      "name": "AR Try-On"
    }
  ]
}
{% endschema %}

