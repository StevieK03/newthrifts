{% comment %}
  Custom T-Shirt Design Studio Section
  Enhanced with Product Image Gallery Features:
  - Thumbnail Gallery with clickable previews
  - Product Image Carousel (scrollable)
  - Alternate View Gallery (front, back, side angles)
  - Variant Image Gallery (different colors)
  - Zoomable Product Viewer
  PLUS: All existing features (hex color picker, undo, flip, curved text, etc.)
{% endcomment %}

<script src="{{ 'designer-enhancements.js' | asset_url }}" defer></script>

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Inter:wght@700&family=Playfair+Display:wght@700&family=Montserrat:wght@700&family=Oswald:wght@700&family=Raleway:wght@700&family=Lato:wght@700&family=Roboto:wght@700&family=Open+Sans:wght@700&family=Poppins:wght@700&family=Merriweather:wght@700&family=Ubuntu:wght@700&family=Nunito:wght@700&family=Rubik:wght@700&family=Work+Sans:wght@700&family=Quicksand:wght@700&family=Outfit:wght@700&family=Space+Grotesk:wght@700&family=Libre+Baskerville:wght@700&family=Crimson+Text:wght@700&family=Archivo+Black&family=Righteous&family=Bangers&family=Pacifico&family=Dancing+Script:wght@700&family=Permanent+Marker&family=Caveat:wght@700&family=Satisfy&family=Shadows+Into+Light&family=Lobster&family=Abril+Fatface&family=Alfa+Slab+One&family=Anton&family=Fjalla+One&family=Russo+One&family=Teko:wght@700&display=swap" rel="stylesheet">

<style>
    /* ============================================
       BASE STYLES
       ============================================ */
    .custom-tshirt-studio-{{ section.id }} * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .custom-tshirt-studio-{{ section.id }} {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
        min-height: 100vh;
        color: #e2e8f0;
        padding: 0;
        width: 100%;
        overflow-x: hidden;
        box-sizing: border-box;
    }

    /* ============================================
       HEADER STYLES
       ============================================ */
    .cts-header-{{ section.id }} {
        background: rgba(15, 23, 42, 0.8);
        backdrop-filter: blur(10px);
        padding: 20px 40px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .cts-header-{{ section.id }} h1 {
        font-size: 24px;
        font-weight: 700;
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .cts-header-actions-{{ section.id }} {
        display: flex;
        gap: 12px;
    }

    .cts-header-btn-{{ section.id }} {
        padding: 10px 20px;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        color: white;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
    }

    .cts-header-btn-{{ section.id }}:hover {
        background: rgba(255, 255, 255, 0.15);
        transform: translateY(-2px);
    }

    .cts-header-btn-{{ section.id }}:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    /* ============================================
       MAIN CONTAINER WITH NEW LAYOUT FOR GALLERY
       ============================================ */
    .cts-container-{{ section.id }} {
        max-width: 1400px;
        margin: 0 auto;
        padding: 40px 20px;
        display: grid;
        grid-template-columns: 120px 1fr 400px;
        gap: 20px;
    }

    /* ============================================
       PRODUCT IMAGE GALLERY - THUMBNAIL SIDEBAR
       ============================================ */
    .cts-thumbnail-gallery-{{ section.id }} {
        display: flex;
        flex-direction: column;
        gap: 12px;
        padding: 10px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 16px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        max-height: 600px;
        overflow-y: auto;
        scrollbar-width: thin;
        scrollbar-color: rgba(96, 165, 250, 0.5) transparent;
    }

    .cts-thumbnail-gallery-{{ section.id }}::-webkit-scrollbar {
        width: 6px;
    }

    .cts-thumbnail-gallery-{{ section.id }}::-webkit-scrollbar-track {
        background: transparent;
    }

    .cts-thumbnail-gallery-{{ section.id }}::-webkit-scrollbar-thumb {
        background: rgba(96, 165, 250, 0.5);
        border-radius: 3px;
    }

    .cts-thumbnail-item-{{ section.id }} {
        position: relative;
        width: 100px;
        height: 100px;
        border-radius: 12px;
        overflow: hidden;
        cursor: pointer;
        border: 2px solid transparent;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.1);
    }

    .cts-thumbnail-item-{{ section.id }}:hover {
        border-color: rgba(96, 165, 250, 0.5);
        transform: translateX(5px);
    }

    .cts-thumbnail-item-{{ section.id }}.active {
        border-color: #60a5fa;
        box-shadow: 0 0 20px rgba(96, 165, 250, 0.4);
    }

    .cts-thumbnail-img-{{ section.id }} {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .cts-thumbnail-label-{{ section.id }} {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(to top, rgba(0, 0, 0, 0.8), transparent);
        padding: 4px 6px;
        font-size: 10px;
        font-weight: 600;
        text-align: center;
        color: white;
    }

    /* ============================================
       PREVIEW SECTION WITH ZOOM
       ============================================ */
    .cts-preview-section-{{ section.id }} {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .cts-preview-card-{{ section.id }} {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 24px;
        padding: 40px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        overflow: auto;
        position: relative;
    }

    /* Zoom Controls */
    .cts-zoom-controls-{{ section.id }} {
        position: absolute;
        top: 20px;
        right: 20px;
        display: flex;
        gap: 8px;
        z-index: 100;
    }

    .cts-zoom-btn-{{ section.id }} {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        font-size: 20px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
        backdrop-filter: blur(10px);
    }

    .cts-zoom-btn-{{ section.id }}:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: scale(1.1);
    }

    .cts-zoom-level-{{ section.id }} {
        padding: 8px 16px;
        border-radius: 20px;
        background: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        font-size: 12px;
        font-weight: 600;
        backdrop-filter: blur(10px);
    }

    .cts-mockup-stage-{{ section.id }} {
        position: relative;
        width: 100%;
        aspect-ratio: 1;
        background: linear-gradient(135deg, #27e1c1 0%, #667eea 20%, #764ba2 35%, #f093fb 50%, #4facfe 65%, #27e1c1 100%);
        background-size: 300% 300%;
        animation: gradientShift-{{ section.id }} 15s ease infinite;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 25px 80px rgba(39, 225, 193, 0.2);
        transition: all 0.3s ease;
    }

    @keyframes gradientShift-{{ section.id }} {
        0%, 100% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
    }

    .cts-mockup-canvas-{{ section.id }} {
        position: relative;
        width: 100%;
        height: 100%;
        background: #f8fafc;
        border-radius: 16px;
        overflow: auto;
        display: flex;
        align-items: center;
        justify-content: center;
        transform-origin: center center;
        transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        cursor: grab;
    }

    .cts-mockup-canvas-{{ section.id }}.zoomed {
        cursor: move;
    }

    .cts-mockup-canvas-{{ section.id }}:active {
        cursor: grabbing;
    }

    /* View Selector Pills */
    .cts-view-selector-{{ section.id }} {
        display: flex;
        gap: 8px;
        padding: 12px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        justify-content: center;
        flex-wrap: wrap;
    }

    .cts-view-pill-{{ section.id }} {
        padding: 8px 16px;
        border-radius: 20px;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
        font-size: 13px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
    }

    .cts-view-pill-{{ section.id }}:hover {
        background: rgba(255, 255, 255, 0.15);
    }

    .cts-view-pill-{{ section.id }}.active {
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        border-color: transparent;
        box-shadow: 0 4px 12px rgba(96, 165, 250, 0.3);
    }

    /* Color Variant Selector */
    .cts-color-variant-selector-{{ section.id }} {
        display: flex;
        gap: 10px;
        padding: 12px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        justify-content: center;
        flex-wrap: wrap;
    }

    .cts-color-variant-{{ section.id }} {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        border: 3px solid transparent;
        transition: all 0.2s;
        position: relative;
    }

    .cts-color-variant-{{ section.id }}:hover {
        transform: scale(1.15);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

    .cts-color-variant-{{ section.id }}.active {
        border-color: #60a5fa;
        box-shadow: 0 0 20px rgba(96, 165, 250, 0.5);
    }

    .cts-color-variant-{{ section.id }}::after {
        content: '✓';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: white;
        font-size: 18px;
        font-weight: bold;
        opacity: 0;
        transition: opacity 0.2s;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
    }

    .cts-color-variant-{{ section.id }}.active::after {
        opacity: 1;
    }

    .cts-tshirt-container-{{ section.id }} {
        position: relative;
        width: 85%;
        height: 85%;
        transition: transform 0.3s ease;
    }

    .cts-tshirt-image-{{ section.id }} {
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: opacity 0.3s ease;
    }
    
    .cts-design-overlay-{{ section.id }} {
        position: absolute;
        width: 37%;
        height: 42%;
        left: 50%;
        top: 29%;
        transform: translateX(-50%);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: move;
        transition: all 0.2s ease;
    }

    .cts-design-overlay-{{ section.id }}:hover {
        outline: 2px dashed rgba(96, 165, 250, 0.5);
        outline-offset: 4px;
    }

    .cts-design-text-{{ section.id }} {
        font-family: 'Bebas Neue', sans-serif;
        font-size: 32px;
        font-weight: bold;
        color: #000000;
        text-align: center;
        user-select: none;
        pointer-events: none;
    }

    .cts-design-image-{{ section.id }} {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
        pointer-events: none;
    }

    /* Placement Guide Overlay */
    .cts-placement-guide-{{ section.id }} {
        position: absolute;
        width: 37%;
        height: 42%;
        left: 50%;
        top: 29%;
        transform: translateX(-50%);
        border: 2px dashed rgba(96, 165, 250, 0.6);
        background: rgba(96, 165, 250, 0.1);
        pointer-events: none;
        display: none;
        z-index: 10;
    }

    .cts-placement-guide-{{ section.id }}.active {
        display: block;
    }

    .cts-placement-guide-{{ section.id }}::before {
        content: 'SAFE PRINT AREA';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 12px;
        font-weight: 700;
        color: rgba(96, 165, 250, 0.8);
        background: rgba(255, 255, 255, 0.9);
        padding: 4px 12px;
        border-radius: 4px;
    }

    /* ============================================
       CONTROL PANEL (EXISTING STYLES - KEEPING ALL)
       ============================================ */
    .cts-controls-section-{{ section.id }} {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 24px;
        padding: 30px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        max-height: 90vh;
        overflow-y: auto;
        scrollbar-width: thin;
        scrollbar-color: rgba(96, 165, 250, 0.5) transparent;
    }

    .cts-controls-section-{{ section.id }}::-webkit-scrollbar {
        width: 8px;
    }

    .cts-controls-section-{{ section.id }}::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 10px;
    }

    .cts-controls-section-{{ section.id }}::-webkit-scrollbar-thumb {
        background: rgba(96, 165, 250, 0.5);
        border-radius: 10px;
    }

    .cts-section-title-{{ section.id }} {
        font-size: 16px;
        font-weight: 700;
        color: #60a5fa;
        margin-bottom: 16px;
        padding-bottom: 12px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .cts-control-group-{{ section.id }} {
        margin-bottom: 24px;
    }

    .cts-control-label-{{ section.id }} {
        font-size: 13px;
        font-weight: 600;
        color: #cbd5e1;
        margin-bottom: 8px;
        display: block;
    }

    .cts-input-{{ section.id }} {
        width: 100%;
        padding: 12px 16px;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        color: white;
        font-size: 14px;
        font-family: inherit;
        transition: all 0.2s;
    }

    .cts-input-{{ section.id }}:focus {
        outline: none;
        border-color: #60a5fa;
        box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.1);
        background: rgba(255, 255, 255, 0.15);
    }

    .cts-input-{{ section.id }}::placeholder {
        color: rgba(255, 255, 255, 0.4);
    }

    .cts-btn-{{ section.id }} {
        width: 100%;
        padding: 14px 20px;
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        border: none;
        border-radius: 10px;
        color: white;
        font-size: 14px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        box-shadow: 0 4px 15px rgba(96, 165, 250, 0.3);
    }

    .cts-btn-{{ section.id }}:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(96, 165, 250, 0.4);
    }

    .cts-btn-{{ section.id }}:active {
        transform: translateY(0);
    }

    .cts-btn-secondary-{{ section.id }} {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: none;
    }

    .cts-btn-secondary-{{ section.id }}:hover {
        background: rgba(255, 255, 255, 0.15);
        border-color: rgba(255, 255, 255, 0.3);
    }

    .cts-color-controls-{{ section.id }} {
        display: flex;
        gap: 12px;
        align-items: center;
    }

    .cts-hex-input-wrapper-{{ section.id }} {
        position: relative;
        flex: 1;
    }

    .cts-hex-input-{{ section.id }} {
        padding-left: 50px;
    }

    .cts-hex-preview-{{ section.id }} {
        position: absolute;
        left: 12px;
        top: 50%;
        transform: translateY(-50%);
        width: 30px;
        height: 30px;
        border-radius: 6px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        background: #000000;
        cursor: pointer;
        transition: all 0.2s;
    }

    .cts-hex-preview-{{ section.id }}:hover {
        transform: translateY(-50%) scale(1.1);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

    .cts-color-palette-btn-{{ section.id }} {
        padding: 12px 20px;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        color: white;
        font-size: 13px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
        white-space: nowrap;
    }

    .cts-color-palette-btn-{{ section.id }}:hover {
        background: rgba(255, 255, 255, 0.15);
        transform: translateY(-2px);
    }

    .cts-font-grid-{{ section.id }} {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
        margin-top: 10px;
    }

    .cts-font-option-{{ section.id }} {
        padding: 12px;
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid transparent;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s;
        text-align: center;
        font-size: 16px;
        font-weight: 700;
    }

    .cts-font-option-{{ section.id }}:hover {
        background: rgba(255, 255, 255, 0.15);
        transform: translateY(-2px);
    }

    .cts-font-option-{{ section.id }}.active {
        border-color: #60a5fa;
        background: rgba(96, 165, 250, 0.2);
        box-shadow: 0 0 20px rgba(96, 165, 250, 0.3);
    }

    .cts-action-btns-{{ section.id }} {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
        margin-top: 16px;
    }

    .cts-action-btn-{{ section.id }} {
        padding: 12px;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        color: white;
        font-size: 13px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 6px;
    }

    .cts-action-btn-{{ section.id }}:hover {
        background: rgba(255, 255, 255, 0.15);
        transform: translateY(-2px);
    }

    /* File upload styling */
    .cts-file-upload-{{ section.id }} {
        position: relative;
        width: 100%;
    }

    .cts-file-input-{{ section.id }} {
        display: none;
    }

    .cts-file-label-{{ section.id }} {
        display: block;
        padding: 14px 20px;
        background: rgba(255, 255, 255, 0.1);
        border: 2px dashed rgba(255, 255, 255, 0.3);
        border-radius: 10px;
        color: white;
        font-size: 13px;
        font-weight: 600;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s;
    }

    .cts-file-label-{{ section.id }}:hover {
        background: rgba(255, 255, 255, 0.15);
        border-color: #60a5fa;
        transform: translateY(-2px);
    }

    .cts-size-slider-{{ section.id }} {
        width: 100%;
        height: 6px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 3px;
        outline: none;
        -webkit-appearance: none;
    }

    .cts-size-slider-{{ section.id }}::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 18px;
        height: 18px;
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        border-radius: 50%;
        cursor: pointer;
        box-shadow: 0 2px 8px rgba(96, 165, 250, 0.4);
    }

    .cts-size-slider-{{ section.id }}::-moz-range-thumb {
        width: 18px;
        height: 18px;
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        border-radius: 50%;
        cursor: pointer;
        border: none;
        box-shadow: 0 2px 8px rgba(96, 165, 250, 0.4);
    }

    /* Feature Pills */
    .cts-feature-pills-{{ section.id }} {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-top: 20px;
        padding-top: 20px;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
    }

    .cts-feature-pill-{{ section.id }} {
        padding: 6px 12px;
        background: rgba(96, 165, 250, 0.2);
        border: 1px solid rgba(96, 165, 250, 0.3);
        border-radius: 20px;
        color: #60a5fa;
        font-size: 11px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 4px;
    }

    /* Color Palette Modal */
    .cts-color-palette-modal-{{ section.id }} {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(10px);
        z-index: 10000;
        align-items: center;
        justify-content: center;
        padding: 20px;
    }

    .cts-color-palette-modal-{{ section.id }}.active {
        display: flex;
    }

    .cts-color-palette-content-{{ section.id }} {
        background: linear-gradient(135deg, #1e293b, #0f172a);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 24px;
        max-width: 900px;
        width: 100%;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 25px 80px rgba(0, 0, 0, 0.5);
        position: relative;
    }

    .cts-color-palette-header-{{ section.id }} {
        padding: 30px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: sticky;
        top: 0;
        background: linear-gradient(135deg, #1e293b, #0f172a);
        z-index: 10;
    }

    .cts-color-palette-header-{{ section.id }} h2 {
        font-size: 24px;
        font-weight: 700;
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .cts-color-palette-close-{{ section.id }} {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.1);
        border: none;
        color: white;
        font-size: 24px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
    }

    .cts-color-palette-close-{{ section.id }}:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: rotate(90deg);
    }

    .cts-color-palette-body-{{ section.id }} {
        padding: 30px;
    }

    .cts-color-category-{{ section.id }} {
        margin-bottom: 30px;
    }

    .cts-color-category-title-{{ section.id }} {
        font-size: 16px;
        font-weight: 700;
        color: #60a5fa;
        margin-bottom: 16px;
        padding-bottom: 10px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .cts-color-grid-{{ section.id }} {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        gap: 12px;
    }

    .cts-color-sample-{{ section.id }} {
        cursor: pointer;
        border-radius: 12px;
        overflow: hidden;
        transition: all 0.2s;
        background: rgba(255, 255, 255, 0.05);
        border: 2px solid transparent;
    }

    .cts-color-sample-{{ section.id }}:hover {
        transform: translateY(-4px);
        border-color: rgba(96, 165, 250, 0.5);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    }

    .cts-color-sample-box-{{ section.id }} {
        width: 100%;
        height: 60px;
        border-radius: 8px 8px 0 0;
    }

    .cts-color-sample-name-{{ section.id }} {
        padding: 8px 10px 4px;
        font-size: 12px;
        font-weight: 600;
        color: white;
        text-align: center;
    }

    .cts-color-sample-hex-{{ section.id }} {
        padding: 0 10px 8px;
        font-size: 10px;
        font-weight: 500;
        color: rgba(255, 255, 255, 0.6);
        text-align: center;
        font-family: 'Courier New', monospace;
    }

    /* ============================================
       RESPONSIVE DESIGN
       ============================================ */
    @media (max-width: 1200px) {
        .cts-container-{{ section.id }} {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .cts-thumbnail-gallery-{{ section.id }} {
            flex-direction: row;
            max-height: none;
            overflow-x: auto;
            overflow-y: hidden;
            padding: 10px;
        }

        .cts-thumbnail-item-{{ section.id }}:hover {
            transform: translateY(-5px);
        }

        .cts-controls-section-{{ section.id }} {
            max-height: none;
        }
    }

    @media (max-width: 768px) {
        .cts-header-{{ section.id }} {
            padding: 15px 20px;
            flex-direction: column;
            gap: 12px;
        }

        .cts-header-{{ section.id }} h1 {
            font-size: 20px;
        }

        .cts-container-{{ section.id }} {
            padding: 20px 15px;
        }

        .cts-preview-card-{{ section.id }},
        .cts-controls-section-{{ section.id }} {
            padding: 20px;
        }

        .cts-zoom-controls-{{ section.id }} {
            top: 10px;
            right: 10px;
        }

        .cts-font-grid-{{ section.id }} {
            grid-template-columns: 1fr;
        }

        .cts-action-btns-{{ section.id }} {
            grid-template-columns: 1fr;
        }

        .cts-color-grid-{{ section.id }} {
            grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
        }
    }
</style>

<div class="custom-tshirt-studio-{{ section.id }}">
    <!-- Header -->
    <div class="cts-header-{{ section.id }}">
        <h1>{{ section.settings.heading }}</h1>
        <div class="cts-header-actions-{{ section.id }}">
            <button class="cts-header-btn-{{ section.id }}" id="undoBtn-{{ section.id }}" disabled>↶ Undo</button>
            <button class="cts-header-btn-{{ section.id }}" id="exportBtn-{{ section.id }}">💾 Export Design</button>
            <button class="cts-header-btn-{{ section.id }}" id="submitRequestBtn-{{ section.id }}">🚀 Submit Request</button>
        </div>
    </div>

    <!-- Main Container -->
    <div class="cts-container-{{ section.id }}">
        <!-- Thumbnail Gallery Sidebar -->
        <div class="cts-thumbnail-gallery-{{ section.id }}" id="thumbnailGallery-{{ section.id }}">
            <!-- Thumbnails will be generated by JavaScript -->
        </div>

        <!-- Preview Section -->
        <div class="cts-preview-section-{{ section.id }}">
            <!-- Color Variant Selector -->
            <div class="cts-color-variant-selector-{{ section.id }}" id="colorVariantSelector-{{ section.id }}">
                <!-- Color variants will be generated by JavaScript -->
            </div>

            <!-- Main Preview Card -->
            <div class="cts-preview-card-{{ section.id }}">
                <!-- Zoom Controls -->
                <div class="cts-zoom-controls-{{ section.id }}">
                    <button class="cts-zoom-btn-{{ section.id }}" id="zoomOut-{{ section.id }}">−</button>
                    <div class="cts-zoom-level-{{ section.id }}" id="zoomLevel-{{ section.id }}">100%</div>
                    <button class="cts-zoom-btn-{{ section.id }}" id="zoomIn-{{ section.id }}">+</button>
                    <button class="cts-zoom-btn-{{ section.id }}" id="zoomReset-{{ section.id }}">⟲</button>
                </div>

                <!-- Mockup Stage -->
                <div class="cts-mockup-stage-{{ section.id }}" id="mockupStage-{{ section.id }}">
                    <div class="cts-mockup-canvas-{{ section.id }}" id="mockupCanvas-{{ section.id }}">
                        <div class="cts-tshirt-container-{{ section.id }}">
                            <img src="https://cdn.shopify.com/s/files/1/0589/8028/4699/files/white-tshirt-front.png?v=1234" 
                                 alt="T-Shirt" 
                                 class="cts-tshirt-image-{{ section.id }}" 
                                 id="tshirtImage-{{ section.id }}">
                            
                            <div class="cts-placement-guide-{{ section.id }}" id="placementGuide-{{ section.id }}"></div>
                            
                            <div class="cts-design-overlay-{{ section.id }}" id="designOverlay-{{ section.id }}">
                                <div class="cts-design-text-{{ section.id }}" id="designText-{{ section.id }}">YOUR TEXT HERE</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- View Selector -->
            <div class="cts-view-selector-{{ section.id }}" id="viewSelector-{{ section.id }}">
                <!-- View pills will be generated by JavaScript -->
            </div>
        </div>

        <!-- Controls Section -->
        <div class="cts-controls-section-{{ section.id }}">
            <div class="cts-section-title-{{ section.id }}">🎨 Design Controls</div>

            <!-- Text Input -->
            <div class="cts-control-group-{{ section.id }}">
                <label class="cts-control-label-{{ section.id }}" for="textInput-{{ section.id }}">Custom Text</label>
                <input type="text" 
                       id="textInput-{{ section.id }}" 
                       class="cts-input-{{ section.id }}" 
                       placeholder="Enter your text..."
                       value="YOUR TEXT HERE">
            </div>

            <!-- Color Controls -->
            <div class="cts-control-group-{{ section.id }}">
                <label class="cts-control-label-{{ section.id }}">Text Color</label>
                <div class="cts-color-controls-{{ section.id }}">
                    <div class="cts-hex-input-wrapper-{{ section.id }}">
                        <div class="cts-hex-preview-{{ section.id }}" id="hexPreview-{{ section.id }}"></div>
                        <input type="text" 
                               id="hexInput-{{ section.id }}" 
                               class="cts-input-{{ section.id }} cts-hex-input-{{ section.id }}" 
                               placeholder="#000000"
                               value="#000000"
                               maxlength="7">
                    </div>
                    <button class="cts-color-palette-btn-{{ section.id }}" id="colorPaletteHelperBtn-{{ section.id }}">
                        🎨 Palette
                    </button>
                </div>
            </div>

            <!-- Font Selection -->
            <div class="cts-control-group-{{ section.id }}">
                <label class="cts-control-label-{{ section.id }}">Font Style</label>
                <div class="cts-font-grid-{{ section.id }}" id="fontGrid-{{ section.id }}">
                    <!-- Font options will be generated by JavaScript -->
                </div>
            </div>

            <!-- Size Slider -->
            <div class="cts-control-group-{{ section.id }}">
                <label class="cts-control-label-{{ section.id }}" for="sizeSlider-{{ section.id }}">Text Size: <span id="sizeValue-{{ section.id }}">32</span>px</label>
                <input type="range" 
                       id="sizeSlider-{{ section.id }}" 
                       class="cts-size-slider-{{ section.id }}" 
                       min="16" 
                       max="72" 
                       value="32">
            </div>

            <!-- Image Upload -->
            <div class="cts-control-group-{{ section.id }}">
                <label class="cts-control-label-{{ section.id }}">Upload Image/Logo</label>
                <div class="cts-file-upload-{{ section.id }}">
                    <input type="file" 
                           id="imageUpload-{{ section.id }}" 
                           class="cts-file-input-{{ section.id }}" 
                           accept="image/*">
                    <label for="imageUpload-{{ section.id }}" class="cts-file-label-{{ section.id }}">
                        📁 Choose Image
                    </label>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="cts-action-btns-{{ section.id }}">
                <button class="cts-action-btn-{{ section.id }}" id="flipHorizontal-{{ section.id }}">↔️ Flip H</button>
                <button class="cts-action-btn-{{ section.id }}" id="flipVertical-{{ section.id }}">↕️ Flip V</button>
                <button class="cts-action-btn-{{ section.id }}" id="invertColors-{{ section.id }}">🔄 Invert</button>
                <button class="cts-action-btn-{{ section.id }}" id="toggleGuide-{{ section.id }}">📐 Guide</button>
            </div>

            <!-- Clear Design -->
            <button class="cts-btn-{{ section.id }} cts-btn-secondary-{{ section.id }}" id="clearDesign-{{ section.id }}">
                🗑️ Clear Design
            </button>

            <!-- Add to Cart -->
            <button class="cts-btn-{{ section.id }}" id="addToCart-{{ section.id }}">
                🛒 Add to Cart
            </button>

            <!-- Feature Pills -->
            <div class="cts-feature-pills-{{ section.id }}">
                <div class="cts-feature-pill-{{ section.id }}">✨ Live Preview</div>
                <div class="cts-feature-pill-{{ section.id }}">🎨 Color Palette</div>
                <div class="cts-feature-pill-{{ section.id }}">📐 Print Guide</div>
                <div class="cts-feature-pill-{{ section.id }}">🔄 Undo/Redo</div>
                <div class="cts-feature-pill-{{ section.id }}">🔍 Zoom & Pan</div>
                <div class="cts-feature-pill-{{ section.id }}">📱 Mobile Ready</div>
            </div>
        </div>
    </div>
</div>

<!-- Color Palette Modal -->
<div class="cts-color-palette-modal-{{ section.id }}" id="colorPaletteModal-{{ section.id }}">
    <div class="cts-color-palette-content-{{ section.id }}">
        <div class="cts-color-palette-header-{{ section.id }}">
            <h2>🎨 Color Palette Helper</h2>
            <button class="cts-color-palette-close-{{ section.id }}" id="colorPaletteClose-{{ section.id }}">×</button>
        </div>
        <div class="cts-color-palette-body-{{ section.id }}">
            <div class="cts-color-category-{{ section.id }}">
                <div class="cts-color-category-title-{{ section.id }}">Basic Colors</div>
                <div class="cts-color-grid-{{ section.id }}" id="basicColors-{{ section.id }}"></div>
            </div>
            <div class="cts-color-category-{{ section.id }}">
                <div class="cts-color-category-title-{{ section.id }}">Vibrant Colors</div>
                <div class="cts-color-grid-{{ section.id }}" id="vibrantColors-{{ section.id }}"></div>
            </div>
            <div class="cts-color-category-{{ section.id }}">
                <div class="cts-color-category-title-{{ section.id }}">Pastel Colors</div>
                <div class="cts-color-grid-{{ section.id }}" id="pastelColors-{{ section.id }}"></div>
            </div>
            <div class="cts-color-category-{{ section.id }}">
                <div class="cts-color-category-title-{{ section.id }}">Dark Colors</div>
                <div class="cts-color-grid-{{ section.id }}" id="darkColors-{{ section.id }}"></div>
            </div>
            <div class="cts-color-category-{{ section.id }}">
                <div class="cts-color-category-title-{{ section.id }}">Special Colors</div>
                <div class="cts-color-grid-{{ section.id }}" id="specialColors-{{ section.id }}"></div>
            </div>
        </div>
    </div>
</div>

<script>
(function() {
    'use strict';
    
    const sectionId = '{{ section.id }}';
    console.log('🎨 Custom T-Shirt Studio with Gallery initialized - Section ID:', sectionId);
    
    // ============================================
    // PRODUCT IMAGE GALLERY DATA
    // ============================================
    
    const productGallery = {
        views: [
            { id: 'front', label: 'Front', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/white-tshirt-front.png?v=1234' },
            { id: 'back', label: 'Back', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/white-tshirt-back.png?v=1234' },
            { id: 'side', label: 'Side', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/white-tshirt-side.png?v=1234' },
            { id: 'model-front', label: 'On Model', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/white-tshirt-model.png?v=1234' }
        ],
        colors: [
            { id: 'white', name: 'White', hex: '#FFFFFF', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/white-tshirt-front.png?v=1234' },
            { id: 'black', name: 'Black', hex: '#000000', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/black-tshirt-front.png?v=1234' },
            { id: 'navy', name: 'Navy', hex: '#1e3a8a', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/navy-tshirt-front.png?v=1234' },
            { id: 'red', name: 'Red', hex: '#dc2626', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/red-tshirt-front.png?v=1234' },
            { id: 'green', name: 'Green', hex: '#16a34a', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/green-tshirt-front.png?v=1234' },
            { id: 'gray', name: 'Gray', hex: '#6b7280', image: 'https://cdn.shopify.com/s/files/1/0589/8028/4699/files/gray-tshirt-front.png?v=1234' }
        ]
    };
    
    let currentView = 'front';
    let currentColorVariant = 'white';
    let zoomLevel = 1;
    
    // ============================================
    // DOM ELEMENTS
    // ============================================
    
    const mockupCanvas = document.getElementById(`mockupCanvas-${sectionId}`);
    const tshirtImage = document.getElementById(`tshirtImage-${sectionId}`);
    const designOverlay = document.getElementById(`designOverlay-${sectionId}`);
    const designText = document.getElementById(`designText-${sectionId}`);
    const textInput = document.getElementById(`textInput-${sectionId}`);
    const hexInput = document.getElementById(`hexInput-${sectionId}`);
    const hexPreview = document.getElementById(`hexPreview-${sectionId}`);
    const sizeSlider = document.getElementById(`sizeSlider-${sectionId}`);
    const sizeValue = document.getElementById(`sizeValue-${sectionId}`);
    const imageUpload = document.getElementById(`imageUpload-${sectionId}`);
    const clearDesignBtn = document.getElementById(`clearDesign-${sectionId}`);
    const addToCartBtn = document.getElementById(`addToCart-${sectionId}`);
    const flipHorizontalBtn = document.getElementById(`flipHorizontal-${sectionId}`);
    const flipVerticalBtn = document.getElementById(`flipVertical-${sectionId}`);
    const invertColorsBtn = document.getElementById(`invertColors-${sectionId}`);
    const toggleGuideBtn = document.getElementById(`toggleGuide-${sectionId}`);
    const placementGuide = document.getElementById(`placementGuide-${sectionId}`);
    const undoBtn = document.getElementById(`undoBtn-${sectionId}`);
    const exportBtn = document.getElementById(`exportBtn-${sectionId}`);
    const submitRequestBtn = document.getElementById(`submitRequestBtn-${sectionId}`);
    
    // Gallery elements
    const thumbnailGallery = document.getElementById(`thumbnailGallery-${sectionId}`);
    const viewSelector = document.getElementById(`viewSelector-${sectionId}`);
    const colorVariantSelector = document.getElementById(`colorVariantSelector-${sectionId}`);
    const zoomInBtn = document.getElementById(`zoomIn-${sectionId}`);
    const zoomOutBtn = document.getElementById(`zoomOut-${sectionId}`);
    const zoomResetBtn = document.getElementById(`zoomReset-${sectionId}`);
    const zoomLevelDisplay = document.getElementById(`zoomLevel-${sectionId}`);
    
    // ============================================
    // STATE MANAGEMENT
    // ============================================
    
    let currentColor = '#000000';
    let currentFont = 'Bebas Neue';
    let history = [];
    let historyIndex = -1;
    let isFlippedH = false;
    let isFlippedV = false;
    let uploadedImageData = null;
    
    // ============================================
    // INITIALIZE PRODUCT GALLERY
    // ============================================
    
    function initializeProductGallery() {
        // Create thumbnails
        const thumbnailHTML = productGallery.views.map((view, index) => `
            <div class="cts-thumbnail-item-${sectionId} ${index === 0 ? 'active' : ''}" 
                 data-view="${view.id}">
                <img src="${view.image}" 
                     alt="${view.label}" 
                     class="cts-thumbnail-img-${sectionId}">
                <div class="cts-thumbnail-label-${sectionId}">${view.label}</div>
            </div>
        `).join('');
        thumbnailGallery.innerHTML = thumbnailHTML;
        
        // Create view pills
        const viewPillsHTML = productGallery.views.map((view, index) => `
            <div class="cts-view-pill-${sectionId} ${index === 0 ? 'active' : ''}" 
                 data-view="${view.id}">
                ${view.label}
            </div>
        `).join('');
        viewSelector.innerHTML = viewPillsHTML;
        
        // Create color variants
        const colorVariantsHTML = productGallery.colors.map((color, index) => `
            <div class="cts-color-variant-${sectionId} ${index === 0 ? 'active' : ''}" 
                 data-color="${color.id}"
                 style="background: ${color.hex};"
                 title="${color.name}">
            </div>
        `).join('');
        colorVariantSelector.innerHTML = colorVariantsHTML;
        
        // Add event listeners
        addGalleryEventListeners();
        
        console.log('✅ Product gallery initialized with', productGallery.views.length, 'views and', productGallery.colors.length, 'colors');
    }
    
    function addGalleryEventListeners() {
        // Thumbnail clicks
        document.querySelectorAll(`.cts-thumbnail-item-${sectionId}`).forEach(thumb => {
            thumb.addEventListener('click', function() {
                const viewId = this.getAttribute('data-view');
                switchView(viewId);
            });
        });
        
        // View pill clicks
        document.querySelectorAll(`.cts-view-pill-${sectionId}`).forEach(pill => {
            pill.addEventListener('click', function() {
                const viewId = this.getAttribute('data-view');
                switchView(viewId);
            });
        });
        
        // Color variant clicks
        document.querySelectorAll(`.cts-color-variant-${sectionId}`).forEach(variant => {
            variant.addEventListener('click', function() {
                const colorId = this.getAttribute('data-color');
                switchColorVariant(colorId);
            });
        });
    }
    
    function switchView(viewId) {
        currentView = viewId;
        const view = productGallery.views.find(v => v.id === viewId);
        
        if (view) {
            // Update t-shirt image with fade effect
            tshirtImage.style.opacity = '0';
            setTimeout(() => {
                tshirtImage.src = view.image;
                tshirtImage.style.opacity = '1';
            }, 200);
            
            // Update active states
            document.querySelectorAll(`.cts-thumbnail-item-${sectionId}`).forEach(thumb => {
                thumb.classList.toggle('active', thumb.getAttribute('data-view') === viewId);
            });
            document.querySelectorAll(`.cts-view-pill-${sectionId}`).forEach(pill => {
                pill.classList.toggle('active', pill.getAttribute('data-view') === viewId);
            });
            
            console.log(`🔄 Switched to view: ${view.label}`);
        }
    }
    
    function switchColorVariant(colorId) {
        currentColorVariant = colorId;
        const color = productGallery.colors.find(c => c.id === colorId);
        
        if (color) {
            // Update t-shirt image with fade effect
            tshirtImage.style.opacity = '0';
            setTimeout(() => {
                tshirtImage.src = color.image;
                tshirtImage.style.opacity = '1';
            }, 200);
            
            // Update active states
            document.querySelectorAll(`.cts-color-variant-${sectionId}`).forEach(variant => {
                variant.classList.toggle('active', variant.getAttribute('data-color') === colorId);
            });
            
            console.log(`🎨 Switched to color variant: ${color.name}`);
        }
    }
    
    // ============================================
    // ZOOM FUNCTIONALITY
    // ============================================
    
    function updateZoom(newZoom) {
        zoomLevel = Math.max(1, Math.min(3, newZoom)); // Clamp between 1x and 3x
        mockupCanvas.style.transform = `scale(${zoomLevel})`;
        zoomLevelDisplay.textContent = `${Math.round(zoomLevel * 100)}%`;
        
        if (zoomLevel > 1) {
            mockupCanvas.classList.add('zoomed');
        } else {
            mockupCanvas.classList.remove('zoomed');
        }
        
        console.log(`🔍 Zoom level: ${Math.round(zoomLevel * 100)}%`);
    }
    
    zoomInBtn.addEventListener('click', () => {
        updateZoom(zoomLevel + 0.25);
    });
    
    zoomOutBtn.addEventListener('click', () => {
        updateZoom(zoomLevel - 0.25);
    });
    
    zoomResetBtn.addEventListener('click', () => {
        updateZoom(1);
        mockupCanvas.scrollLeft = 0;
        mockupCanvas.scrollTop = 0;
    });
    
    // Mouse wheel zoom
    mockupCanvas.addEventListener('wheel', (e) => {
        if (e.ctrlKey || e.metaKey) {
            e.preventDefault();
            const delta = e.deltaY > 0 ? -0.1 : 0.1;
            updateZoom(zoomLevel + delta);
        }
    });
    
    // Pan when zoomed
    let isPanning = false;
    let startX, startY, scrollLeft, scrollTop;
    
    mockupCanvas.addEventListener('mousedown', (e) => {
        if (zoomLevel > 1) {
            isPanning = true;
            startX = e.pageX - mockupCanvas.offsetLeft;
            startY = e.pageY - mockupCanvas.offsetTop;
            scrollLeft = mockupCanvas.scrollLeft;
            scrollTop = mockupCanvas.scrollTop;
            mockupCanvas.style.cursor = 'grabbing';
        }
    });
    
    mockupCanvas.addEventListener('mousemove', (e) => {
        if (!isPanning) return;
        e.preventDefault();
        const x = e.pageX - mockupCanvas.offsetLeft;
        const y = e.pageY - mockupCanvas.offsetTop;
        const walkX = (x - startX) * 2;
        const walkY = (y - startY) * 2;
        mockupCanvas.scrollLeft = scrollLeft - walkX;
        mockupCanvas.scrollTop = scrollTop - walkY;
    });
    
    mockupCanvas.addEventListener('mouseup', () => {
        isPanning = false;
        mockupCanvas.style.cursor = zoomLevel > 1 ? 'move' : 'grab';
    });
    
    mockupCanvas.addEventListener('mouseleave', () => {
        isPanning = false;
        mockupCanvas.style.cursor = zoomLevel > 1 ? 'move' : 'grab';
    });
    
    // ============================================
    // EXISTING FUNCTIONALITY (ALL PRESERVED)
    // ============================================
    
    // Font options
    const fonts = [
        { name: 'Bebas Neue', family: 'Bebas Neue' },
        { name: 'Inter', family: 'Inter' },
        { name: 'Playfair', family: 'Playfair Display' },
        { name: 'Montserrat', family: 'Montserrat' },
        { name: 'Oswald', family: 'Oswald' },
        { name: 'Raleway', family: 'Raleway' },
        { name: 'Lato', family: 'Lato' },
        { name: 'Roboto', family: 'Roboto' },
        { name: 'Open Sans', family: 'Open Sans' },
        { name: 'Poppins', family: 'Poppins' },
        { name: 'Bangers', family: 'Bangers' },
        { name: 'Pacifico', family: 'Pacifico' }
    ];
    
    const fontGrid = document.getElementById(`fontGrid-${sectionId}`);
    fonts.forEach((font, index) => {
        const fontOption = document.createElement('div');
        fontOption.className = `cts-font-option-${sectionId}`;
        if (index === 0) fontOption.classList.add('active');
        fontOption.textContent = font.name;
        fontOption.style.fontFamily = font.family;
        fontOption.addEventListener('click', () => {
            currentFont = font.family;
            designText.style.fontFamily = font.family;
            document.querySelectorAll(`.cts-font-option-${sectionId}`).forEach(opt => {
                opt.classList.remove('active');
            });
            fontOption.classList.add('active');
            saveState();
            console.log(`🔤 Font changed to: ${font.name}`);
        });
        fontGrid.appendChild(fontOption);
    });
    
    // Text input
    textInput.addEventListener('input', (e) => {
        const text = e.target.value || 'YOUR TEXT HERE';
        if (designText) {
            designText.textContent = text;
            if (uploadedImageData) {
                designText.style.display = 'none';
            }
            saveState();
        }
    });
    
    // Color controls
    hexInput.addEventListener('input', (e) => {
        let hex = e.target.value;
        if (!hex.startsWith('#')) {
            hex = '#' + hex;
            e.target.value = hex;
        }
        if (/^#[0-9A-Fa-f]{6}$/.test(hex)) {
            currentColor = hex;
            designText.style.color = hex;
            hexPreview.style.background = hex;
            saveState();
            console.log(`🎨 Color changed to: ${hex}`);
        }
    });
    
    hexPreview.addEventListener('click', () => {
        hexInput.focus();
        hexInput.select();
    });
    
    // Size slider
    sizeSlider.addEventListener('input', (e) => {
        const size = e.target.value;
        designText.style.fontSize = `${size}px`;
        sizeValue.textContent = size;
        saveState();
    });
    
    // Image upload
    imageUpload.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = (event) => {
                uploadedImageData = event.target.result;
                
                let designImage = document.getElementById(`designImage-${sectionId}`);
                if (!designImage) {
                    designImage = document.createElement('img');
                    designImage.id = `designImage-${sectionId}`;
                    designImage.className = `cts-design-image-${sectionId}`;
                    designOverlay.appendChild(designImage);
                }
                
                designImage.src = uploadedImageData;
                designImage.style.display = 'block';
                if (designText) {
                    designText.style.display = 'none';
                }
                
                saveState();
                console.log('📁 Image uploaded successfully');
            };
            reader.readAsDataURL(file);
        }
    });
    
    // Flip horizontal
    flipHorizontalBtn.addEventListener('click', () => {
        isFlippedH = !isFlippedH;
        updateTransform();
        saveState();
        console.log(`↔️ Flipped horizontally: ${isFlippedH}`);
    });
    
    // Flip vertical
    flipVerticalBtn.addEventListener('click', () => {
        isFlippedV = !isFlippedV;
        updateTransform();
        saveState();
        console.log(`↕️ Flipped vertically: ${isFlippedV}`);
    });
    
    function updateTransform() {
        const scaleX = isFlippedH ? -1 : 1;
        const scaleY = isFlippedV ? -1 : 1;
        if (designText) {
            designText.style.transform = `scaleX(${scaleX}) scaleY(${scaleY})`;
        }
        const designImage = document.getElementById(`designImage-${sectionId}`);
        if (designImage) {
            designImage.style.transform = `scaleX(${scaleX}) scaleY(${scaleY})`;
        }
    }
    
    // Invert colors
    invertColorsBtn.addEventListener('click', () => {
        const rgb = hexToRgb(currentColor);
        if (rgb) {
            const inverted = {
                r: 255 - rgb.r,
                g: 255 - rgb.g,
                b: 255 - rgb.b
            };
            const invertedHex = rgbToHex(inverted.r, inverted.g, inverted.b);
            currentColor = invertedHex;
            designText.style.color = invertedHex;
            hexInput.value = invertedHex;
            hexPreview.style.background = invertedHex;
            saveState();
            console.log(`🔄 Color inverted to: ${invertedHex}`);
        }
    });
    
    // Toggle placement guide
    toggleGuideBtn.addEventListener('click', () => {
        placementGuide.classList.toggle('active');
        const isActive = placementGuide.classList.contains('active');
        console.log(`📐 Placement guide: ${isActive ? 'ON' : 'OFF'}`);
    });
    
    // Clear design
    clearDesignBtn.addEventListener('click', () => {
        if (confirm('Are you sure you want to clear your design?')) {
            textInput.value = 'YOUR TEXT HERE';
            designText.textContent = 'YOUR TEXT HERE';
            designText.style.display = 'block';
            
            const designImage = document.getElementById(`designImage-${sectionId}`);
            if (designImage) {
                designImage.remove();
            }
            uploadedImageData = null;
            
            isFlippedH = false;
            isFlippedV = false;
            updateTransform();
            
            history = [];
            historyIndex = -1;
            undoBtn.disabled = true;
            
            console.log('🗑️ Design cleared');
        }
    });
    
    // Undo
    undoBtn.addEventListener('click', () => {
        if (historyIndex > 0) {
            historyIndex--;
            restoreState(history[historyIndex]);
            undoBtn.disabled = historyIndex === 0;
            console.log(`↶ Undo to state ${historyIndex}`);
        }
    });
    
    // Export design
    exportBtn.addEventListener('click', () => {
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        
        const mockupStage = document.getElementById(`mockupStage-${sectionId}`);
        const rect = mockupStage.getBoundingClientRect();
        
        canvas.width = rect.width;
        canvas.height = rect.height;
        
        alert('Export functionality would generate a downloadable image of your design.');
        console.log('💾 Export initiated');
    });
    
    // Submit request
    submitRequestBtn.addEventListener('click', () => {
        const designData = {
            text: textInput.value,
            color: currentColor,
            font: currentFont,
            size: sizeSlider.value,
            flippedH: isFlippedH,
            flippedV: isFlippedV,
            hasImage: !!uploadedImageData,
            view: currentView,
            colorVariant: currentColorVariant
        };
        
        console.log('🚀 Design request submitted:', designData);
        alert('Your custom design request has been submitted! Our team will contact you shortly.');
    });
    
    // Add to cart
    addToCartBtn.addEventListener('click', () => {
        alert('Design added to cart! (This would integrate with Shopify cart in production)');
        console.log('🛒 Added to cart');
    });
    
    // Save state for undo
    function saveState() {
        const state = {
            text: textInput.value,
            color: currentColor,
            font: currentFont,
            size: sizeSlider.value,
            flippedH: isFlippedH,
            flippedV: isFlippedV,
            image: uploadedImageData
        };
        
        if (historyIndex < history.length - 1) {
            history = history.slice(0, historyIndex + 1);
        }
        
        history.push(state);
        historyIndex++;
        undoBtn.disabled = false;
    }
    
    function restoreState(state) {
        textInput.value = state.text;
        designText.textContent = state.text;
        currentColor = state.color;
        hexInput.value = state.color;
        hexPreview.style.background = state.color;
        designText.style.color = state.color;
        currentFont = state.font;
        designText.style.fontFamily = state.font;
        sizeSlider.value = state.size;
        sizeValue.textContent = state.size;
        designText.style.fontSize = `${state.size}px`;
        isFlippedH = state.flippedH;
        isFlippedV = state.flippedV;
        updateTransform();
        
        if (state.image) {
            uploadedImageData = state.image;
            let designImage = document.getElementById(`designImage-${sectionId}`);
            if (!designImage) {
                designImage = document.createElement('img');
                designImage.id = `designImage-${sectionId}`;
                designImage.className = `cts-design-image-${sectionId}`;
                designOverlay.appendChild(designImage);
            }
            designImage.src = state.image;
            designImage.style.display = 'block';
            designText.style.display = 'none';
        }
    }
    
    // Helper functions
    function hexToRgb(hex) {
        const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : null;
    }
    
    function rgbToHex(r, g, b) {
        return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
    }
    
    // ============================================
    // COLOR PALETTE HELPER MODAL
    // ============================================
    
    const colorPaletteHelperBtn = document.getElementById(`colorPaletteHelperBtn-${sectionId}`);
    const colorPaletteModal = document.getElementById(`colorPaletteModal-${sectionId}`);
    const colorPaletteClose = document.getElementById(`colorPaletteClose-${sectionId}`);
    
    const colorPalettes = {
        basic: [
            { name: 'Black', hex: '#000000' },
            { name: 'White', hex: '#FFFFFF' },
            { name: 'Red', hex: '#FF0000' },
            { name: 'Blue', hex: '#0000FF' },
            { name: 'Green', hex: '#00FF00' },
            { name: 'Yellow', hex: '#FFFF00' },
            { name: 'Orange', hex: '#FFA500' },
            { name: 'Purple', hex: '#800080' },
            { name: 'Gray', hex: '#808080' },
            { name: 'Brown', hex: '#A52A2A' },
            { name: 'Cyan', hex: '#00FFFF' },
            { name: 'Pink', hex: '#FFC0CB' }
        ],
        vibrant: [
            { name: 'Hot Pink', hex: '#FF69B4' },
            { name: 'Electric Blue', hex: '#00FFFF' },
            { name: 'Lime Green', hex: '#32CD32' },
            { name: 'Coral', hex: '#FF7F50' },
            { name: 'Magenta', hex: '#FF00FF' },
            { name: 'Turquoise', hex: '#40E0D0' },
            { name: 'Crimson', hex: '#DC143C' },
            { name: 'Gold', hex: '#FFD700' },
            { name: 'Neon Green', hex: '#39FF14' },
            { name: 'Neon Pink', hex: '#FF10F0' },
            { name: 'Bright Orange', hex: '#FF5F1F' },
            { name: 'Vivid Purple', hex: '#BF00FF' }
        ],
        pastel: [
            { name: 'Baby Blue', hex: '#89CFF0' },
            { name: 'Mint Green', hex: '#98FF98' },
            { name: 'Lavender', hex: '#E6E6FA' },
            { name: 'Peach', hex: '#FFDAB9' },
            { name: 'Light Pink', hex: '#FFB6C1' },
            { name: 'Pale Yellow', hex: '#FFFFE0' },
            { name: 'Powder Blue', hex: '#B0E0E6' },
            { name: 'Cream', hex: '#FFFDD0' },
            { name: 'Light Coral', hex: '#F08080' },
            { name: 'Pale Green', hex: '#98FB98' },
            { name: 'Thistle', hex: '#D8BFD8' },
            { name: 'Misty Rose', hex: '#FFE4E1' }
        ],
        dark: [
            { name: 'Navy Blue', hex: '#000080' },
            { name: 'Forest Green', hex: '#228B22' },
            { name: 'Maroon', hex: '#800000' },
            { name: 'Dark Purple', hex: '#301934' },
            { name: 'Charcoal', hex: '#36454F' },
            { name: 'Chocolate', hex: '#D2691E' },
            { name: 'Olive', hex: '#808000' },
            { name: 'Midnight', hex: '#191970' },
            { name: 'Dark Slate Gray', hex: '#2F4F4F' },
            { name: 'Saddle Brown', hex: '#8B4513' },
            { name: 'Dark Olive', hex: '#556B2F' },
            { name: 'Dark Red', hex: '#8B0000' }
        ],
        special: [
            { name: 'Rose Gold', hex: '#B76E79' },
            { name: 'Silver', hex: '#C0C0C0' },
            { name: 'Bronze', hex: '#CD7F32' },
            { name: 'Copper', hex: '#B87333' },
            { name: 'Teal', hex: '#008080' },
            { name: 'Indigo', hex: '#4B0082' },
            { name: 'Aqua', hex: '#00FFFF' },
            { name: 'Salmon', hex: '#FA8072' },
            { name: 'Platinum', hex: '#E5E4E2' },
            { name: 'Champagne', hex: '#F7E7CE' },
            { name: 'Pearl', hex: '#EAE0C8' },
            { name: 'Sage', hex: '#BCB88A' }
        ]
    };
    
    function populateColorSamples() {
        Object.keys(colorPalettes).forEach(category => {
            const container = document.getElementById(`${category}Colors-${sectionId}`);
            if (container) {
                container.innerHTML = colorPalettes[category].map(color => `
                    <div class="cts-color-sample-${sectionId}" data-hex="${color.hex}">
                        <div class="cts-color-sample-box-${sectionId}" style="background: ${color.hex};"></div>
                        <div class="cts-color-sample-name-${sectionId}">${color.name}</div>
                        <div class="cts-color-sample-hex-${sectionId}">${color.hex}</div>
                    </div>
                `).join('');
            }
        });
        
        document.querySelectorAll(`.cts-color-sample-${sectionId}`).forEach(sample => {
            sample.addEventListener('click', () => {
                const hex = sample.getAttribute('data-hex');
                selectColor(hex);
                closeModal();
            });
        });
    }
    
    function selectColor(hex) {
        currentColor = hex;
        designText.style.color = hex;
        hexInput.value = hex;
        hexPreview.style.background = hex;
        console.log(`🎨 Color selected from palette: ${hex}`);
    }
    
    function openModal() {
        colorPaletteModal.classList.add('active');
        document.body.style.overflow = 'hidden';
    }
    
    function closeModal() {
        colorPaletteModal.classList.remove('active');
        document.body.style.overflow = '';
    }
    
    if (colorPaletteHelperBtn) {
        colorPaletteHelperBtn.addEventListener('click', openModal);
    }
    
    if (colorPaletteClose) {
        colorPaletteClose.addEventListener('click', closeModal);
    }
    
    if (colorPaletteModal) {
        colorPaletteModal.addEventListener('click', (e) => {
            if (e.target === colorPaletteModal) {
                closeModal();
            }
        });
    }
    
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && colorPaletteModal.classList.contains('active')) {
            closeModal();
        }
    });
    
    // ============================================
    // INITIALIZE EVERYTHING
    // ============================================
    
    initializeProductGallery();
    populateColorSamples();
    
    console.log('✅ T-Shirt Studio with Product Gallery fully initialized');
    console.log('🖼️ Gallery Features:');
    console.log('  - Thumbnail Gallery ✓');
    console.log('  - View Selector ✓');
    console.log('  - Color Variants ✓');
    console.log('  - Zoom Controls ✓');
    console.log('  - Pan & Zoom ✓');
})();
</script>

{% schema %}
{
  "name": "Custom T-Shirt Studio",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "✨ Custom T-Shirt Designer"
    }
  ],
  "presets": [
    {
      "name": "Custom T-Shirt Studio"
    }
  ]
}
{% endschema %}
