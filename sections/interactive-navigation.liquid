<section class="interactive-nav-section" id="interactive-nav-{{ section.id }}">
  <!-- Animated Background -->
  <div class="nav-bg-animation">
    <div class="floating-shapes">
      <div class="shape shape-1"></div>
      <div class="shape shape-2"></div>
      <div class="shape shape-3"></div>
      <div class="shape shape-4"></div>
    </div>
  </div>

  <!-- Interactive Navigation Cards -->
  <div class="nav-container">
    <div class="nav-header">
      <h2 class="nav-title">Explore Our Collection</h2>
      <p class="nav-subtitle">Discover amazing finds that match your style</p>
    </div>
    
    <div class="interactive-nav-grid">
      <!-- New Products Card -->
      <div class="nav-card new-products-card" data-category="new">
        <div class="card-inner">
          <div class="card-icon">
            <div class="shopping-bag">
              <div class="bag-body"></div>
              <div class="bag-handle"></div>
              <div class="new-badge">NEW</div>
            </div>
          </div>
          <div class="card-content">
            <h3 class="card-title">New Products Weekly</h3>
            <p class="card-description">Fresh drops every week</p>
            <div class="card-stats">
              <span class="stat">+12 this week</span>
            </div>
          </div>
          <div class="card-hover-effect"></div>
        </div>
        <div class="card-particles"></div>
      </div>

      <!-- Classic Tees Card -->
      <div class="nav-card classic-tees-card" data-category="classic">
        <div class="card-inner">
          <div class="card-icon">
            <div class="tshirt-icon">
              <div class="shirt-body"></div>
              <div class="shirt-sleeves"></div>
            </div>
          </div>
          <div class="card-content">
            <h3 class="card-title">Classic Tees & Hoodies</h3>
            <p class="card-description">Timeless essentials</p>
            <div class="card-stats">
              <span class="stat">50+ styles</span>
            </div>
          </div>
          <div class="card-hover-effect"></div>
        </div>
        <div class="card-particles"></div>
      </div>

      <!-- Seasonal Collections Card -->
      <div class="nav-card seasonal-card" data-category="seasonal">
        <div class="card-inner">
          <div class="card-icon">
            <div class="pumpkin-icon">
              <div class="pumpkin-body"></div>
              <div class="pumpkin-stem"></div>
              <div class="pumpkin-face">
                <div class="eye eye-left"></div>
                <div class="eye eye-right"></div>
                <div class="mouth"></div>
              </div>
            </div>
          </div>
          <div class="card-content">
            <h3 class="card-title">Seasonal Collections</h3>
            <p class="card-description">Limited time designs</p>
            <div class="card-stats">
              <span class="stat">Halloween vibes</span>
            </div>
          </div>
          <div class="card-hover-effect"></div>
        </div>
        <div class="card-particles"></div>
      </div>
    </div>

    <!-- Interactive Progress Bar -->
    <div class="nav-progress">
      <div class="progress-bar">
        <div class="progress-fill"></div>
      </div>
      <p class="progress-text">Keep exploring to unlock exclusive deals!</p>
    </div>
  </div>
</section>

<style>
/* Interactive Navigation Styles */
.interactive-nav-section {
  position: relative;
  padding: 60px 20px;
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  overflow: hidden;
  min-height: 500px;
}

/* Animated Background */
.nav-bg-animation {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 1;
}

.floating-shapes {
  position: relative;
  width: 100%;
  height: 100%;
}

.shape {
  position: absolute;
  border-radius: 50%;
  background: linear-gradient(45deg, rgba(39, 225, 193, 0.1), rgba(255, 79, 163, 0.1));
  animation: float 6s ease-in-out infinite;
}

.shape-1 {
  width: 80px;
  height: 80px;
  top: 10%;
  left: 10%;
  animation-delay: 0s;
}

.shape-2 {
  width: 120px;
  height: 120px;
  top: 20%;
  right: 15%;
  animation-delay: 2s;
}

.shape-3 {
  width: 60px;
  height: 60px;
  bottom: 20%;
  left: 20%;
  animation-delay: 4s;
}

.shape-4 {
  width: 100px;
  height: 100px;
  bottom: 10%;
  right: 10%;
  animation-delay: 1s;
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(180deg); }
}

/* Navigation Container */
.nav-container {
  position: relative;
  z-index: 2;
  max-width: 1200px;
  margin: 0 auto;
}

.nav-header {
  text-align: center;
  margin-bottom: 50px;
}

.nav-title {
  font-family: 'Bebas Neue', sans-serif;
  font-size: 48px;
  margin: 0 0 10px 0;
  background: linear-gradient(45deg, #27e1c1, #ff4fa3);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: titleGlow 3s ease-in-out infinite;
}

@keyframes titleGlow {
  0%, 100% { filter: brightness(1); }
  50% { filter: brightness(1.2); }
}

.nav-subtitle {
  font-size: 18px;
  color: #64748b;
  margin: 0;
}

/* Interactive Grid */
.interactive-nav-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 30px;
  margin-bottom: 40px;
}

/* Navigation Cards */
.nav-card {
  position: relative;
  background: white;
  border-radius: 20px;
  padding: 30px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  overflow: hidden;
  border: 2px solid transparent;
}

.nav-card:hover {
  transform: translateY(-10px) scale(1.02);
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  border-color: #27e1c1;
}

.card-inner {
  position: relative;
  z-index: 2;
}

.card-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto 20px;
  position: relative;
}

/* Shopping Bag Icon */
.shopping-bag {
  position: relative;
  width: 60px;
  height: 60px;
  margin: 0 auto;
}

.bag-body {
  width: 50px;
  height: 40px;
  background: #3b82f6;
  border-radius: 8px 8px 15px 15px;
  position: relative;
}

.bag-handle {
  width: 20px;
  height: 15px;
  border: 3px solid #3b82f6;
  border-bottom: none;
  border-radius: 10px 10px 0 0;
  position: absolute;
  top: -8px;
  left: 15px;
}

.new-badge {
  position: absolute;
  top: -5px;
  right: -5px;
  background: #ff4fa3;
  color: white;
  font-size: 10px;
  font-weight: bold;
  padding: 2px 6px;
  border-radius: 10px;
  animation: pulse 2s infinite;
}

/* T-shirt Icon */
.tshirt-icon {
  position: relative;
  width: 60px;
  height: 60px;
  margin: 0 auto;
}

.shirt-body {
  width: 40px;
  height: 35px;
  background: #10b981;
  border-radius: 8px;
  position: relative;
  margin: 10px auto 0;
}

.shirt-sleeves {
  position: absolute;
  top: 5px;
  left: -8px;
  width: 12px;
  height: 20px;
  background: #10b981;
  border-radius: 6px;
}

.shirt-sleeves::after {
  content: '';
  position: absolute;
  top: 0;
  right: 36px;
  width: 12px;
  height: 20px;
  background: #10b981;
  border-radius: 6px;
}

/* Pumpkin Icon */
.pumpkin-icon {
  position: relative;
  width: 60px;
  height: 60px;
  margin: 0 auto;
}

.pumpkin-body {
  width: 50px;
  height: 40px;
  background: #f97316;
  border-radius: 50%;
  position: relative;
  margin: 10px auto 0;
}

.pumpkin-stem {
  width: 8px;
  height: 12px;
  background: #22c55e;
  border-radius: 4px;
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}

.pumpkin-face {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.eye {
  width: 6px;
  height: 6px;
  background: #000;
  border-radius: 50%;
  position: absolute;
  top: -5px;
}

.eye-left { left: -8px; }
.eye-right { left: 2px; }

.mouth {
  width: 12px;
  height: 6px;
  border: 2px solid #000;
  border-top: none;
  border-radius: 0 0 12px 12px;
  position: absolute;
  top: 5px;
  left: -6px;
}

/* Card Content */
.card-content {
  text-align: center;
}

.card-title {
  font-size: 24px;
  font-weight: 700;
  margin: 0 0 8px 0;
  color: #1e293b;
}

.card-description {
  font-size: 16px;
  color: #64748b;
  margin: 0 0 15px 0;
}

.card-stats {
  display: inline-block;
  background: linear-gradient(45deg, #27e1c1, #ff4fa3);
  color: white;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 14px;
  font-weight: 600;
}

/* Hover Effects */
.card-hover-effect {
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  transition: left 0.6s ease;
  z-index: 1;
}

.nav-card:hover .card-hover-effect {
  left: 100%;
}

/* Card Particles */
.card-particles {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 1;
}

.card-particles::before,
.card-particles::after {
  content: '';
  position: absolute;
  width: 4px;
  height: 4px;
  background: #27e1c1;
  border-radius: 50%;
  opacity: 0;
  transition: all 0.6s ease;
}

.card-particles::before {
  top: 20%;
  left: 20%;
  animation: float-particle 2s ease-in-out infinite;
}

.card-particles::after {
  bottom: 20%;
  right: 20%;
  background: #ff4fa3;
  animation: float-particle 2.5s ease-in-out infinite;
}

.nav-card:hover .card-particles::before,
.nav-card:hover .card-particles::after {
  opacity: 1;
}

@keyframes float-particle {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-10px) rotate(180deg); }
}

/* Progress Bar */
.nav-progress {
  text-align: center;
  margin-top: 40px;
}

.progress-bar {
  width: 100%;
  max-width: 400px;
  height: 8px;
  background: #e2e8f0;
  border-radius: 10px;
  margin: 0 auto 15px;
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(45deg, #27e1c1, #ff4fa3);
  border-radius: 10px;
  width: 0%;
  transition: width 0.5s ease;
  animation: progressGlow 2s ease-in-out infinite;
}

@keyframes progressGlow {
  0%, 100% { box-shadow: 0 0 5px rgba(39, 225, 193, 0.5); }
  50% { box-shadow: 0 0 20px rgba(39, 225, 193, 0.8); }
}

.progress-text {
  font-size: 14px;
  color: #64748b;
  margin: 0;
}

/* Responsive Design */
@media (max-width: 768px) {
  .interactive-nav-grid {
    grid-template-columns: 1fr;
    gap: 20px;
  }
  
  .nav-title {
    font-size: 36px;
  }
  
  .nav-card {
    padding: 20px;
  }
  
  .card-icon {
    width: 60px;
    height: 60px;
  }
}

/* Special Category Styling */
.new-products-card:hover {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.05), rgba(59, 130, 246, 0.1));
}

.classic-tees-card:hover {
  background: linear-gradient(135deg, rgba(16, 185, 129, 0.05), rgba(16, 185, 129, 0.1));
}

.seasonal-card:hover {
  background: linear-gradient(135deg, rgba(249, 115, 22, 0.05), rgba(249, 115, 22, 0.1));
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const navCards = document.querySelectorAll('.nav-card');
  const progressFill = document.querySelector('.progress-fill');
  const progressText = document.querySelector('.progress-text');
  
  let interactionCount = 0;
  const maxInteractions = 3;
  
  // Add interactive effects to each card
  navCards.forEach((card, index) => {
    // Add magnetic effect
    card.addEventListener('mousemove', function(e) {
      const rect = card.getBoundingClientRect();
      const x = e.clientX - rect.left - rect.width / 2;
      const y = e.clientY - rect.top - rect.height / 2;
      
      const distance = Math.sqrt(x * x + y * y);
      const maxDistance = 50;
      
      if (distance < maxDistance) {
        const moveX = (x / maxDistance) * 5;
        const moveY = (y / maxDistance) * 5;
        
        card.style.transform = `translate(${moveX}px, ${moveY}px) scale(1.02)`;
      }
    });
    
    card.addEventListener('mouseleave', function() {
      card.style.transform = 'translate(0, 0) scale(1)';
    });
    
    // Add click interaction
    card.addEventListener('click', function() {
      // Add bounce animation
      card.style.animation = 'none';
      card.offsetHeight; // Trigger reflow
      card.style.animation = 'bounceIn 0.6s ease';
      
      // Update progress
      interactionCount++;
      const progressPercent = Math.min((interactionCount / maxInteractions) * 100, 100);
      progressFill.style.width = progressPercent + '%';
      
      // Update progress text
      if (interactionCount >= maxInteractions) {
        progressText.textContent = '🎉 You\'ve unlocked exclusive deals! Check your email!';
        progressText.style.color = '#27e1c1';
        progressText.style.fontWeight = '600';
      } else {
        progressText.textContent = `Keep exploring! ${maxInteractions - interactionCount} more to unlock deals!`;
      }
      
      // Add particle burst effect
      createParticleBurst(card);
      
      // Simulate navigation (you can replace with actual navigation)
      setTimeout(() => {
        const category = card.dataset.category;
        console.log(`Navigating to ${category} category`);
        // Add your navigation logic here
        // window.location.href = `/collections/${category}`;
      }, 300);
    });
    
    // Add staggered animation on load
    card.style.opacity = '0';
    card.style.transform = 'translateY(30px)';
    
    setTimeout(() => {
      card.style.transition = 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)';
      card.style.opacity = '1';
      card.style.transform = 'translateY(0)';
    }, index * 200);
  });
  
  // Create particle burst effect
  function createParticleBurst(element) {
    const rect = element.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    
    for (let i = 0; i < 12; i++) {
      const particle = document.createElement('div');
      particle.style.position = 'fixed';
      particle.style.left = centerX + 'px';
      particle.style.top = centerY + 'px';
      particle.style.width = '6px';
      particle.style.height = '6px';
      particle.style.background = Math.random() > 0.5 ? '#27e1c1' : '#ff4fa3';
      particle.style.borderRadius = '50%';
      particle.style.pointerEvents = 'none';
      particle.style.zIndex = '1000';
      
      document.body.appendChild(particle);
      
      const angle = (i / 12) * Math.PI * 2;
      const velocity = 100 + Math.random() * 50;
      const vx = Math.cos(angle) * velocity;
      const vy = Math.sin(angle) * velocity;
      
      particle.animate([
        { transform: 'translate(0, 0) scale(1)', opacity: 1 },
        { transform: `translate(${vx}px, ${vy}px) scale(0)`, opacity: 0 }
      ], {
        duration: 800,
        easing: 'cubic-bezier(0.4, 0, 0.2, 1)'
      }).onfinish = () => {
        document.body.removeChild(particle);
      };
    }
  }
  
  // Add floating shapes animation
  const shapes = document.querySelectorAll('.shape');
  shapes.forEach((shape, index) => {
    shape.style.animationDelay = `${index * 1.5}s`;
  });
});
</script>

{% schema %}
{
  "name": "Interactive Navigation",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Explore Our Collection"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Section Subtitle",
      "default": "Discover amazing finds that match your style"
    }
  ],
  "presets": [
    {
      "name": "Interactive Navigation"
    }
  ]
}
{% endschema %}

