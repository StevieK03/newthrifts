{% comment %}
  Supabase Wishlist Section
  Allows users to save and manage favorite products
{% endcomment %}

<section id="supabase-wishlist-{{ section.id }}" class="supabase-wishlist-section">
  <div class="wishlist-container">
    <div class="wishlist-header">
      <h2 class="wishlist-title">My Wishlist</h2>
      <p class="wishlist-subtitle">Save your favorite items for later</p>
    </div>

    <!-- Authentication Required Message -->
    <div id="auth-required" class="auth-required" style="display: none;">
      <div class="auth-required-content">
        <svg width="48" height="48" viewBox="0 0 24 24" fill="none" class="auth-icon">
          <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <circle cx="12" cy="7" r="4" stroke="currentColor" stroke-width="2"/>
        </svg>
        <h3 class="auth-required-title">Sign in to save items</h3>
        <p class="auth-required-message">Create an account or sign in to save your favorite products to your wishlist.</p>
        <button class="auth-btn primary-btn" onclick="document.querySelector('#supabase-auth-{{ section.id }}')?.scrollIntoView({behavior: 'smooth'})">
          Sign In / Sign Up
        </button>
      </div>
    </div>

    <!-- Loading State -->
    <div id="wishlist-loading" class="wishlist-loading" style="display: none;">
      <div class="loading-spinner"></div>
      <p class="loading-text">Loading your wishlist...</p>
    </div>

    <!-- Empty Wishlist -->
    <div id="empty-wishlist" class="empty-wishlist" style="display: none;">
      <div class="empty-content">
        <svg width="64" height="64" viewBox="0 0 24 24" fill="none" class="empty-icon">
          <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <h3 class="empty-title">Your wishlist is empty</h3>
        <p class="empty-message">Start adding items you love to your wishlist!</p>
        <a href="/collections/all" class="browse-btn">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
            <path d="M3 3h18v18H3zM9 9h6v6H9z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          Browse Products
        </a>
      </div>
    </div>

    <!-- Wishlist Items -->
    <div id="wishlist-items" class="wishlist-items" style="display: none;">
      <div class="wishlist-grid" id="wishlist-grid">
        <!-- Items will be populated by JavaScript -->
      </div>
    </div>

    <!-- Error State -->
    <div id="wishlist-error" class="wishlist-error" style="display: none;">
      <div class="error-content">
        <svg width="48" height="48" viewBox="0 0 24 24" fill="none" class="error-icon">
          <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/>
          <line x1="15" y1="9" x2="9" y2="15" stroke="currentColor" stroke-width="2"/>
          <line x1="9" y1="9" x2="15" y2="15" stroke="currentColor" stroke-width="2"/>
        </svg>
        <h3 class="error-title">Something went wrong</h3>
        <p class="error-message">We couldn't load your wishlist. Please try again.</p>
        <button class="retry-btn" onclick="loadWishlist()">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
            <polyline points="23,4 23,10 17,10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <polyline points="1,20 1,14 7,14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          Try Again
        </button>
      </div>
    </div>
  </div>
</section>

<style>
  /* Wishlist Styles */
  .supabase-wishlist-section {
    max-width: 1200px;
    margin: 0 auto;
    padding: 24px 16px;
  }

  .wishlist-container {
    width: 100%;
  }

  .wishlist-header {
    text-align: center;
    margin-bottom: 32px;
  }

  .wishlist-title {
    font-size: 32px;
    font-weight: 700;
    color: #111827;
    margin: 0 0 8px 0;
  }

  .wishlist-subtitle {
    color: #6b7280;
    font-size: 16px;
    margin: 0;
  }

  /* Auth Required */
  .auth-required {
    text-align: center;
    padding: 48px 24px;
    background: linear-gradient(135deg, #f8fafc, #e2e8f0);
    border-radius: 12px;
    border: 1px solid #e5e7eb;
  }

  .auth-required-content {
    max-width: 400px;
    margin: 0 auto;
  }

  .auth-icon {
    color: #6b7280;
    margin: 0 auto 16px;
    display: block;
  }

  .auth-required-title {
    font-size: 24px;
    font-weight: 600;
    color: #111827;
    margin: 0 0 8px 0;
  }

  .auth-required-message {
    color: #6b7280;
    margin: 0 0 24px 0;
    line-height: 1.5;
  }

  /* Loading State */
  .wishlist-loading {
    text-align: center;
    padding: 48px 24px;
  }

  .loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #e5e7eb;
    border-top: 4px solid #3b82f6;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 16px;
  }

  .loading-text {
    color: #6b7280;
    font-size: 16px;
    margin: 0;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Empty State */
  .empty-wishlist {
    text-align: center;
    padding: 48px 24px;
  }

  .empty-content {
    max-width: 400px;
    margin: 0 auto;
  }

  .empty-icon {
    color: #d1d5db;
    margin: 0 auto 16px;
    display: block;
  }

  .empty-title {
    font-size: 24px;
    font-weight: 600;
    color: #111827;
    margin: 0 0 8px 0;
  }

  .empty-message {
    color: #6b7280;
    margin: 0 0 24px 0;
    line-height: 1.5;
  }

  .browse-btn {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 12px 24px;
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
    text-decoration: none;
    border-radius: 8px;
    font-weight: 600;
    transition: all 0.2s ease;
  }

  .browse-btn:hover {
    background: linear-gradient(135deg, #2563eb, #1e40af);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
  }

  /* Wishlist Grid */
  .wishlist-items {
    width: 100%;
  }

  .wishlist-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 24px;
  }

  .wishlist-item {
    background: white;
    border-radius: 12px;
    border: 1px solid #e5e7eb;
    overflow: hidden;
    transition: all 0.2s ease;
    position: relative;
  }

  .wishlist-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  .wishlist-item-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    background: #f8fafc;
  }

  .wishlist-item-content {
    padding: 16px;
  }

  .wishlist-item-title {
    font-size: 16px;
    font-weight: 600;
    color: #111827;
    margin: 0 0 8px 0;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .wishlist-item-price {
    font-size: 18px;
    font-weight: 700;
    color: #059669;
    margin: 0 0 12px 0;
  }

  .wishlist-item-actions {
    display: flex;
    gap: 8px;
  }

  .wishlist-item-btn {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    padding: 8px 12px;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    text-decoration: none;
    border: none;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .add-to-cart-btn {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
  }

  .add-to-cart-btn:hover {
    background: linear-gradient(135deg, #2563eb, #1e40af);
  }

  .remove-btn {
    background: #fee2e2;
    color: #dc2626;
    border: 1px solid #fca5a5;
  }

  .remove-btn:hover {
    background: #fecaca;
  }

  .remove-from-wishlist {
    position: absolute;
    top: 8px;
    right: 8px;
    width: 32px;
    height: 32px;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    backdrop-filter: blur(4px);
  }

  .remove-from-wishlist:hover {
    background: #fee2e2;
    color: #dc2626;
  }

  /* Error State */
  .wishlist-error {
    text-align: center;
    padding: 48px 24px;
  }

  .error-content {
    max-width: 400px;
    margin: 0 auto;
  }

  .error-icon {
    color: #fca5a5;
    margin: 0 auto 16px;
    display: block;
  }

  .error-title {
    font-size: 24px;
    font-weight: 600;
    color: #111827;
    margin: 0 0 8px 0;
  }

  .error-message {
    color: #6b7280;
    margin: 0 0 24px 0;
    line-height: 1.5;
  }

  .retry-btn {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 12px 24px;
    background: #f3f4f6;
    color: #374151;
    border: 1px solid #d1d5db;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .retry-btn:hover {
    background: #e5e7eb;
  }

  /* Dark Mode */
  [data-theme="dark"] .supabase-wishlist-section {
    background: var(--bg-primary, #0f172a);
  }

  [data-theme="dark"] .wishlist-title {
    color: var(--text-primary, #f8fafc);
  }

  [data-theme="dark"] .wishlist-subtitle {
    color: var(--text-secondary, #e2e8f0);
  }

  [data-theme="dark"] .auth-required {
    background: linear-gradient(135deg, var(--bg-secondary, #1e293b), var(--bg-tertiary, #334155));
    border-color: var(--border-primary, #334155);
  }

  [data-theme="dark"] .auth-required-title {
    color: var(--text-primary, #f8fafc);
  }

  [data-theme="dark"] .auth-required-message {
    color: var(--text-secondary, #e2e8f0);
  }

  [data-theme="dark"] .empty-title {
    color: var(--text-primary, #f8fafc);
  }

  [data-theme="dark"] .empty-message {
    color: var(--text-secondary, #e2e8f0);
  }

  [data-theme="dark"] .wishlist-item {
    background: var(--bg-secondary, #1e293b);
    border-color: var(--border-primary, #334155);
  }

  [data-theme="dark"] .wishlist-item-title {
    color: var(--text-primary, #f8fafc);
  }

  [data-theme="dark"] .error-title {
    color: var(--text-primary, #f8fafc);
  }

  [data-theme="dark"] .error-message {
    color: var(--text-secondary, #e2e8f0);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .wishlist-grid {
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
      gap: 16px;
    }
    
    .wishlist-title {
      font-size: 28px;
    }
  }

  @media (max-width: 480px) {
    .wishlist-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const wishlistSection = document.getElementById('supabase-wishlist-{{ section.id }}');
  const authRequired = document.getElementById('auth-required');
  const wishlistLoading = document.getElementById('wishlist-loading');
  const emptyWishlist = document.getElementById('empty-wishlist');
  const wishlistItems = document.getElementById('wishlist-items');
  const wishlistError = document.getElementById('wishlist-error');
  const wishlistGrid = document.getElementById('wishlist-grid');

  // Initialize wishlist
  initWishlist();

  async function initWishlist() {
    try {
      // Check if Supabase client is available
      if (typeof window.supabaseClient === 'undefined') {
        console.log('⏳ Waiting for Supabase client...');
        setTimeout(initWishlist, 100);
        return;
      }

      // Check authentication status
      const { user, error } = await window.supabaseClient.getCurrentUser();
      
      if (error || !user) {
        showAuthRequired();
        return;
      }

      // Load wishlist
      await loadWishlist();

    } catch (error) {
      console.error('❌ Wishlist initialization failed:', error);
      showError();
    }
  }

  async function loadWishlist() {
    showLoading();

    try {
      const client = await window.supabaseClient.getClient();
      if (!client) {
        throw new Error('Supabase client not available');
      }

      // Get wishlist items
      const { data, error } = await client
        .from('wishlist')
        .select('*')
        .order('created_at', { ascending: false });

      if (error) {
        throw error;
      }

      if (!data || data.length === 0) {
        showEmpty();
      } else {
        showWishlistItems(data);
      }

    } catch (error) {
      console.error('❌ Failed to load wishlist:', error);
      showError();
    }
  }

  function showAuthRequired() {
    hideAllStates();
    authRequired.style.display = 'block';
  }

  function showLoading() {
    hideAllStates();
    wishlistLoading.style.display = 'block';
  }

  function showEmpty() {
    hideAllStates();
    emptyWishlist.style.display = 'block';
  }

  function showWishlistItems(items) {
    hideAllStates();
    wishlistItems.style.display = 'block';
    
    // Clear existing items
    wishlistGrid.innerHTML = '';

    // Render items
    items.forEach(item => {
      const itemElement = createWishlistItem(item);
      wishlistGrid.appendChild(itemElement);
    });
  }

  function showError() {
    hideAllStates();
    wishlistError.style.display = 'block';
  }

  function hideAllStates() {
    authRequired.style.display = 'none';
    wishlistLoading.style.display = 'none';
    emptyWishlist.style.display = 'none';
    wishlistItems.style.display = 'none';
    wishlistError.style.display = 'none';
  }

  function createWishlistItem(item) {
    const itemDiv = document.createElement('div');
    itemDiv.className = 'wishlist-item';
    itemDiv.innerHTML = `
      <button class="remove-from-wishlist" onclick="removeFromWishlist('${item.id}')" title="Remove from wishlist">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
          <line x1="18" y1="6" x2="6" y2="18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <line x1="6" y1="6" x2="18" y2="18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
      
      ${item.product_image_url ? 
        `<img src="${item.product_image_url}" alt="${item.product_title}" class="wishlist-item-image" loading="lazy">` :
        `<div class="wishlist-item-image" style="display: flex; align-items: center; justify-content: center; color: #9ca3af;">
          <svg width="48" height="48" viewBox="0 0 24 24" fill="none">
            <rect x="3" y="3" width="18" height="18" rx="2" ry="2" stroke="currentColor" stroke-width="2"/>
            <circle cx="8.5" cy="8.5" r="1.5" stroke="currentColor" stroke-width="2"/>
            <polyline points="21,15 16,10 5,21" stroke="currentColor" stroke-width="2"/>
          </svg>
        </div>`
      }
      
      <div class="wishlist-item-content">
        <h3 class="wishlist-item-title">${item.product_title || 'Product'}</h3>
        ${item.product_price ? `<p class="wishlist-item-price">$${item.product_price.toFixed(2)}</p>` : ''}
        
        <div class="wishlist-item-actions">
          <a href="/products/${item.shopify_product_id}" class="wishlist-item-btn add-to-cart-btn">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
              <circle cx="9" cy="21" r="1" stroke="currentColor" stroke-width="2"/>
              <circle cx="20" cy="21" r="1" stroke="currentColor" stroke-width="2"/>
              <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6" stroke="currentColor" stroke-width="2"/>
            </svg>
            View Product
          </a>
        </div>
      </div>
    `;
    
    return itemDiv;
  }

  async function removeFromWishlist(itemId) {
    try {
      const client = await window.supabaseClient.getClient();
      if (!client) {
        throw new Error('Supabase client not available');
      }

      const { error } = await client
        .from('wishlist')
        .delete()
        .eq('id', itemId);

      if (error) {
        throw error;
      }

      // Reload wishlist
      await loadWishlist();

      // Show success message
      showMessage('Item removed from wishlist', 'success');

    } catch (error) {
      console.error('❌ Failed to remove from wishlist:', error);
      showMessage('Failed to remove item', 'error');
    }
  }

  function showMessage(message, type) {
    // Create temporary message element
    const messageDiv = document.createElement('div');
    messageDiv.className = `wishlist-message ${type}`;
    messageDiv.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 12px 20px;
      border-radius: 8px;
      color: white;
      font-weight: 600;
      z-index: 1000;
      animation: slideInRight 0.3s ease;
      ${type === 'success' ? 'background: linear-gradient(135deg, #10b981, #059669);' : 'background: linear-gradient(135deg, #ef4444, #dc2626);'}
    `;
    messageDiv.textContent = message;
    
    document.body.appendChild(messageDiv);
    
    // Remove after 3 seconds
    setTimeout(() => {
      messageDiv.style.animation = 'slideOutRight 0.3s ease';
      setTimeout(() => {
        document.body.removeChild(messageDiv);
      }, 300);
    }, 3000);
  }

  // Make functions globally available
  window.loadWishlist = loadWishlist;
  window.removeFromWishlist = removeFromWishlist;
});

// CSS for animations
const style = document.createElement('style');
style.textContent = `
  @keyframes slideInRight {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
  
  @keyframes slideOutRight {
    from { transform: translateX(0); opacity: 1; }
    to { transform: translateX(100%); opacity: 0; }
  }
`;
document.head.appendChild(style);
</script>

{% schema %}
{
  "name": "Supabase Wishlist",
  "settings": [
    {
      "type": "header",
      "content": "Wishlist Settings"
    },
    {
      "type": "text",
      "id": "wishlist_title",
      "label": "Wishlist Title",
      "default": "My Wishlist"
    },
    {
      "type": "text",
      "id": "wishlist_subtitle",
      "label": "Wishlist Subtitle",
      "default": "Save your favorite items for later"
    }
  ],
  "presets": [
    {
      "name": "Supabase Wishlist"
    }
  ]
}
{% endschema %}
