{% comment %}
Smart Design Suggestions Section
- AI-powered design recommendations
- Trend-based suggestions
- Personalized recommendations based on user behavior
- Quick apply functionality
{% endcomment %}

<section id="smart-suggestions-{{ section.id }}" class="smart-suggestions-section" style="padding: 60px 0; background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%); color: white;">
  <div class="container">
    
    <!-- Section Header -->
    <div class="suggestions-header" style="text-align: center; margin-bottom: 40px;">
      <h2 style="font-family: 'Bebas Neue', sans-serif; font-size: 42px; margin: 0 0 16px 0; color: #f8fafc; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);">
        🤖 AI-Powered Design Suggestions
      </h2>
      <p style="font-size: 18px; color: #cbd5e1; margin: 0; max-width: 600px; margin: 0 auto;">
        Let our AI help you create the perfect design! Get personalized suggestions based on trending styles, your preferences, and popular combinations.
      </p>
    </div>

    <!-- AI Suggestion Categories -->
    <div class="suggestion-categories" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 30px; margin-bottom: 40px;">
      
      <!-- Trending Now -->
      <div class="suggestion-card" style="background: rgba(255,255,255,0.1); backdrop-filter: blur(10px); border-radius: 20px; padding: 30px; border: 1px solid rgba(255,255,255,0.2);">
        <div style="display: flex; align-items: center; margin-bottom: 20px;">
          <div style="width: 50px; height: 50px; background: linear-gradient(45deg, #ff6b6b, #ee5a24); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 15px;">
            🔥
          </div>
          <div>
            <h3 style="margin: 0; font-size: 24px; font-weight: 700;">Trending Now</h3>
            <p style="margin: 4px 0 0 0; opacity: 0.8; font-size: 14px;">What's popular this week</p>
          </div>
        </div>
        
        <div class="trending-suggestions" style="display: flex; flex-direction: column; gap: 12px;">
          <div class="suggestion-item" data-suggestion="vintage-90s" style="display: flex; align-items: center; justify-content: space-between; padding: 12px 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div>
              <div style="font-weight: 600; margin-bottom: 4px;">Vintage 90s Vibes</div>
              <div style="font-size: 12px; opacity: 0.8;">Retro colors + bold fonts</div>
            </div>
            <button class="apply-suggestion-btn" style="padding: 8px 16px; background: rgba(255,255,255,0.2); border: none; border-radius: 20px; color: white; cursor: pointer; font-size: 12px; font-weight: 600;">
              Apply
            </button>
          </div>
          
          <div class="suggestion-item" data-suggestion="minimalist-modern" style="display: flex; align-items: center; justify-content: space-between; padding: 12px 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div>
              <div style="font-weight: 600; margin-bottom: 4px;">Minimalist Modern</div>
              <div style="font-size: 12px; opacity: 0.8;">Clean lines + subtle colors</div>
            </div>
            <button class="apply-suggestion-btn" style="padding: 8px 16px; background: rgba(255,255,255,0.2); border: none; border-radius: 20px; color: white; cursor: pointer; font-size: 12px; font-weight: 600;">
              Apply
            </button>
          </div>
          
          <div class="suggestion-item" data-suggestion="neon-cyberpunk" style="display: flex; align-items: center; justify-content: space-between; padding: 12px 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div>
              <div style="font-weight: 600; margin-bottom: 4px;">Neon Cyberpunk</div>
              <div style="font-size: 12px; opacity: 0.8;">Bright colors + futuristic fonts</div>
            </div>
            <button class="apply-suggestion-btn" style="padding: 8px 16px; background: rgba(255,255,255,0.2); border: none; border-radius: 20px; color: white; cursor: pointer; font-size: 12px; font-weight: 600;">
              Apply
            </button>
          </div>
        </div>
      </div>

      <!-- Personalized For You -->
      <div class="suggestion-card" style="background: rgba(255,255,255,0.1); backdrop-filter: blur(10px); border-radius: 20px; padding: 30px; border: 1px solid rgba(255,255,255,0.2);">
        <div style="display: flex; align-items: center; margin-bottom: 20px;">
          <div style="width: 50px; height: 50px; background: linear-gradient(45deg, #27e1c1, #20b2aa); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 15px;">
            🎯
          </div>
          <div>
            <h3 style="margin: 0; font-size: 24px; font-weight: 700;">For You</h3>
            <p style="margin: 4px 0 0 0; opacity: 0.8; font-size: 14px;">Based on your style</p>
          </div>
        </div>
        
        <div class="personalized-suggestions" style="display: flex; flex-direction: column; gap: 12px;">
          <div class="suggestion-item" data-suggestion="nature-inspired" style="display: flex; align-items: center; justify-content: space-between; padding: 12px 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div>
              <div style="font-weight: 600; margin-bottom: 4px;">Nature Inspired</div>
              <div style="font-size: 12px; opacity: 0.8;">Earth tones + organic shapes</div>
            </div>
            <button class="apply-suggestion-btn" style="padding: 8px 16px; background: rgba(255,255,255,0.2); border: none; border-radius: 20px; color: white; cursor: pointer; font-size: 12px; font-weight: 600;">
              Apply
            </button>
          </div>
          
          <div class="suggestion-item" data-suggestion="sporty-active" style="display: flex; align-items: center; justify-content: space-between; padding: 12px 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div>
              <div style="font-weight: 600; margin-bottom: 4px;">Sporty & Active</div>
              <div style="font-size: 12px; opacity: 0.8;">Bold graphics + athletic vibes</div>
            </div>
            <button class="apply-suggestion-btn" style="padding: 8px 16px; background: rgba(255,255,255,0.2); border: none; border-radius: 20px; color: white; cursor: pointer; font-size: 12px; font-weight: 600;">
              Apply
            </button>
          </div>
          
          <div class="suggestion-item" data-suggestion="elegant-luxury" style="display: flex; align-items: center; justify-content: space-between; padding: 12px 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div>
              <div style="font-weight: 600; margin-bottom: 4px;">Elegant Luxury</div>
              <div style="font-size: 12px; opacity: 0.8;">Premium materials + sophisticated design</div>
            </div>
            <button class="apply-suggestion-btn" style="padding: 8px 16px; background: rgba(255,255,255,0.2); border: none; border-radius: 20px; color: white; cursor: pointer; font-size: 12px; font-weight: 600;">
              Apply
            </button>
          </div>
        </div>
      </div>

      <!-- Quick Templates -->
      <div class="suggestion-card" style="background: rgba(255,255,255,0.1); backdrop-filter: blur(10px); border-radius: 20px; padding: 30px; border: 1px solid rgba(255,255,255,0.2);">
        <div style="display: flex; align-items: center; margin-bottom: 20px;">
          <div style="width: 50px; height: 50px; background: linear-gradient(45deg, #ffd700, #ffed4e); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 15px;">
            ⚡
          </div>
          <div>
            <h3 style="margin: 0; font-size: 24px; font-weight: 700;">Quick Templates</h3>
            <p style="margin: 4px 0 0 0; opacity: 0.8; font-size: 14px;">One-click designs</p>
          </div>
        </div>
        
        <div class="template-suggestions" style="display: grid; grid-template-columns: 1fr 1fr; gap: 12px;">
          <div class="template-item" data-template="birthday-celebration" style="text-align: center; padding: 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div style="font-size: 24px; margin-bottom: 8px;">🎂</div>
            <div style="font-weight: 600; font-size: 12px;">Birthday</div>
          </div>
          
          <div class="template-item" data-template="team-spirit" style="text-align: center; padding: 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div style="font-size: 24px; margin-bottom: 8px;">⚽</div>
            <div style="font-weight: 600; font-size: 12px;">Team Spirit</div>
          </div>
          
          <div class="template-item" data-template="love-romance" style="text-align: center; padding: 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div style="font-size: 24px; margin-bottom: 8px;">💕</div>
            <div style="font-weight: 600; font-size: 12px;">Love</div>
          </div>
          
          <div class="template-item" data-template="motivational" style="text-align: center; padding: 16px; background: rgba(255,255,255,0.1); border-radius: 12px; cursor: pointer; transition: all 0.3s ease;">
            <div style="font-size: 24px; margin-bottom: 8px;">💪</div>
            <div style="font-weight: 600; font-size: 12px;">Motivation</div>
          </div>
        </div>
      </div>
    </div>

    <!-- AI Insights -->
    <div class="ai-insights" style="background: rgba(255,255,255,0.1); backdrop-filter: blur(10px); border-radius: 20px; padding: 30px; border: 1px solid rgba(255,255,255,0.2); text-align: center;">
      <div style="display: flex; align-items: center; justify-content: center; margin-bottom: 20px;">
        <div style="width: 60px; height: 60px; background: linear-gradient(45deg, #8b5cf6, #a855f7); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 20px;">
          🧠
        </div>
        <div>
          <h3 style="margin: 0; font-size: 28px; font-weight: 700;">AI Design Insights</h3>
          <p style="margin: 4px 0 0 0; opacity: 0.8;">Powered by machine learning</p>
        </div>
      </div>
      
      <div class="insights-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-top: 20px;">
        <div class="insight-item" style="padding: 20px; background: rgba(255,255,255,0.1); border-radius: 12px;">
          <div style="font-size: 32px; margin-bottom: 12px;">📈</div>
          <div style="font-weight: 600; margin-bottom: 8px;">Trending Colors</div>
          <div style="font-size: 14px; opacity: 0.8;">Neon green, coral, and midnight blue are trending this month</div>
        </div>
        
        <div class="insight-item" style="padding: 20px; background: rgba(255,255,255,0.1); border-radius: 12px;">
          <div style="font-size: 32px; margin-bottom: 12px;">🎨</div>
          <div style="font-weight: 600; margin-bottom: 8px;">Popular Styles</div>
          <div style="font-size: 14px; opacity: 0.8;">Vintage fonts and gradient effects are in high demand</div>
        </div>
        
        <div class="insight-item" style="padding: 20px; background: rgba(255,255,255,0.1); border-radius: 12px;">
          <div style="font-size: 32px; margin-bottom: 12px;">⭐</div>
          <div style="font-weight: 600; margin-bottom: 8px;">Success Rate</div>
          <div style="font-size: 14px; opacity: 0.8;">AI-suggested designs have 3x higher satisfaction rates</div>
        </div>
      </div>
    </div>

  </div>
</section>

<style>
/* Hover Effects */
.suggestion-item:hover {
  background: rgba(255,255,255,0.2) !important;
  transform: translateY(-2px);
}

.template-item:hover {
  background: rgba(255,255,255,0.2) !important;
  transform: scale(1.05);
}

.apply-suggestion-btn:hover {
  background: rgba(255,255,255,0.3) !important;
  transform: scale(1.05);
}

.insight-item:hover {
  background: rgba(255,255,255,0.15) !important;
  transform: translateY(-2px);
}

/* Responsive Design */
@media (max-width: 768px) {
  .suggestion-categories {
    grid-template-columns: 1fr !important;
    gap: 20px !important;
  }
  
  .template-suggestions {
    grid-template-columns: 1fr 1fr !important;
  }
  
  .insights-grid {
    grid-template-columns: 1fr !important;
  }
  
  .suggestions-header h2 {
    font-size: 32px !important;
  }
}

/* Animation Classes */
@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.suggestion-card {
  animation: slideInUp 0.6s ease;
}

.suggestion-card:nth-child(2) {
  animation-delay: 0.2s;
}

.suggestion-card:nth-child(3) {
  animation-delay: 0.4s;
}

.ai-insights {
  animation: slideInUp 0.8s ease;
  animation-delay: 0.6s;
  animation-fill-mode: both;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const smartSuggestions = {
    // Design suggestion templates
    suggestions: {
      'vintage-90s': {
        text: 'RAD',
        fontSize: 28,
        fontFamily: "'Bebas Neue', sans-serif",
        textColor: '#ff6b6b',
        shirtColor: '#000000',
        position: 'center',
        effect: 'outline'
      },
      'minimalist-modern': {
        text: 'MINIMAL',
        fontSize: 20,
        fontFamily: "'Inter', sans-serif",
        textColor: '#374151',
        shirtColor: '#ffffff',
        position: 'center',
        effect: 'none'
      },
      'neon-cyberpunk': {
        text: 'CYBER',
        fontSize: 32,
        fontFamily: "'Space Grotesk', sans-serif",
        textColor: '#00ff00',
        shirtColor: '#000000',
        position: 'center',
        effect: 'shadow'
      },
      'nature-inspired': {
        text: 'NATURE',
        fontSize: 24,
        fontFamily: "'Playfair Display', serif",
        textColor: '#10b981',
        shirtColor: '#f0fdf4',
        position: 'center',
        effect: 'none'
      },
      'sporty-active': {
        text: 'GO HARD',
        fontSize: 26,
        fontFamily: "'Bebas Neue', sans-serif",
        textColor: '#ffffff',
        shirtColor: '#dc2626',
        position: 'center',
        effect: 'outline'
      },
      'elegant-luxury': {
        text: 'LUXE',
        fontSize: 22,
        fontFamily: "'Playfair Display', serif",
        textColor: '#1f2937',
        shirtColor: '#f8fafc',
        position: 'center',
        effect: 'gradient'
      }
    },

    // Template suggestions
    templates: {
      'birthday-celebration': {
        text: 'Happy Birthday!',
        fontSize: 24,
        fontFamily: "'Bebas Neue', sans-serif",
        textColor: '#ff69b4',
        shirtColor: '#ffffff',
        position: 'center',
        effect: 'shadow'
      },
      'team-spirit': {
        text: 'TEAM NAME',
        fontSize: 28,
        fontFamily: "'Bebas Neue', sans-serif",
        textColor: '#ffffff',
        shirtColor: '#0066cc',
        position: 'center',
        effect: 'outline'
      },
      'love-romance': {
        text: 'Love You',
        fontSize: 22,
        fontFamily: "'Playfair Display', serif",
        textColor: '#dc2626',
        shirtColor: '#fef2f2',
        position: 'center',
        effect: 'none'
      },
      'motivational': {
        text: 'DREAM BIG',
        fontSize: 26,
        fontFamily: "'Space Grotesk', sans-serif",
        textColor: '#000000',
        shirtColor: '#fef3c7',
        position: 'center',
        effect: 'shadow'
      }
    },

    init() {
      this.bindEvents();
      this.loadUserPreferences();
      this.updateInsights();
    },

    bindEvents() {
      // Bind suggestion apply buttons
      document.querySelectorAll('.apply-suggestion-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.stopPropagation();
          const suggestionItem = e.target.closest('.suggestion-item');
          const suggestionType = suggestionItem.dataset.suggestion;
          this.applySuggestion(suggestionType);
        });
      });

      // Bind template items
      document.querySelectorAll('.template-item').forEach(item => {
        item.addEventListener('click', (e) => {
          const templateType = item.dataset.template;
          this.applyTemplate(templateType);
        });
      });

      // Bind suggestion item clicks (alternative to button)
      document.querySelectorAll('.suggestion-item').forEach(item => {
        item.addEventListener('click', (e) => {
          if (!e.target.classList.contains('apply-suggestion-btn')) {
            const suggestionType = item.dataset.suggestion;
            this.applySuggestion(suggestionType);
          }
        });
      });
    },

    applySuggestion(suggestionType) {
      const suggestion = this.suggestions[suggestionType];
      if (suggestion) {
        // Show live preview effect
        this.showLivePreview(suggestion, suggestionType);
        
        // Find the customizer section and update it
        this.updateCustomizer(suggestion);
        
        // Show success message
        this.showMessage(`Applied "${suggestionType.replace('-', ' ')}" design! ✨`, 'success');
        
        // Scroll to customizer
        setTimeout(() => {
          const customizerSection = document.querySelector('.tshirt-customizer-section');
          if (customizerSection) {
            customizerSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        }, 1000);
      }
    },

    applyTemplate(templateType) {
      const template = this.templates[templateType];
      if (template) {
        // Show live preview effect
        this.showLivePreview(template, templateType);
        
        // Find the customizer section and update it
        this.updateCustomizer(template);
        
        // Show success message
        this.showMessage(`Applied "${templateType.replace('-', ' ')}" template! 🎨`, 'success');
        
        // Scroll to customizer
        setTimeout(() => {
          const customizerSection = document.querySelector('.tshirt-customizer-section');
          if (customizerSection) {
            customizerSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        }, 1000);
      }
    },

    showLivePreview(design, type) {
      // Create live preview overlay
      const previewOverlay = document.createElement('div');
      previewOverlay.id = 'live-preview-overlay';
      previewOverlay.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(10px);
        z-index: 10000;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
      `;

      // Create preview container
      const previewContainer = document.createElement('div');
      previewContainer.style.cssText = `
        background: white;
        border-radius: 20px;
        padding: 40px;
        max-width: 600px;
        width: 90vw;
        text-align: center;
        transform: scale(0.8);
        transition: transform 0.3s ease;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
      `;

      // Create t-shirt preview
      const tshirtPreview = document.createElement('div');
      tshirtPreview.style.cssText = `
        width: 300px;
        height: 360px;
        margin: 0 auto 20px;
        background: ${design.shirtColor};
        border-radius: 20px;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        overflow: hidden;
      `;

      // Create design preview
      const designPreview = document.createElement('div');
      designPreview.style.cssText = `
        font-family: ${design.fontFamily};
        font-size: ${Math.min(design.fontSize * 1.5, 48)}px;
        font-weight: bold;
        color: ${design.textColor};
        text-align: center;
        white-space: nowrap;
        user-select: none;
        pointer-events: none;
        z-index: 10;
        position: relative;
      `;

      // Apply text effects
      switch (design.effect) {
        case 'outline':
          designPreview.style.webkitTextStroke = `2px ${design.textColor}`;
          designPreview.style.webkitTextFillColor = 'transparent';
          break;
        case 'shadow':
          designPreview.style.textShadow = '3px 3px 6px rgba(0,0,0,0.5)';
          designPreview.style.webkitTextStroke = 'none';
          designPreview.style.webkitTextFillColor = design.textColor;
          break;
        case 'gradient':
          designPreview.style.background = 'linear-gradient(45deg, #27e1c1, #ff4fa3)';
          designPreview.style.webkitBackgroundClip = 'text';
          designPreview.style.webkitTextFillColor = 'transparent';
          designPreview.style.webkitTextStroke = 'none';
          break;
        default:
          designPreview.style.textShadow = '2px 2px 4px rgba(255,255,255,0.8)';
          designPreview.style.webkitTextStroke = 'none';
          designPreview.style.webkitTextFillColor = design.textColor;
      }

      designPreview.textContent = design.text;

      // Create preview title
      const previewTitle = document.createElement('h3');
      previewTitle.style.cssText = `
        margin: 0 0 10px 0;
        font-size: 24px;
        font-weight: 700;
        color: #374151;
      `;
      previewTitle.textContent = `Preview: ${type.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase())}`;

      // Create preview details
      const previewDetails = document.createElement('div');
      previewDetails.style.cssText = `
        margin: 0 0 20px 0;
        font-size: 14px;
        color: #6b7280;
        line-height: 1.5;
      `;
      previewDetails.innerHTML = `
        <div><strong>Text:</strong> "${design.text}"</div>
        <div><strong>Color:</strong> ${design.textColor}</div>
        <div><strong>Font:</strong> ${design.fontFamily.replace(/'/g, '').split(',')[0]}</div>
        <div><strong>Effect:</strong> ${design.effect || 'None'}</div>
      `;

      // Create action buttons
      const buttonContainer = document.createElement('div');
      buttonContainer.style.cssText = `
        display: flex;
        gap: 12px;
        justify-content: center;
      `;

      const applyBtn = document.createElement('button');
      applyBtn.style.cssText = `
        padding: 12px 24px;
        background: linear-gradient(45deg, #27e1c1, #20b2aa);
        color: white;
        border: none;
        border-radius: 25px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
      `;
      applyBtn.textContent = '✨ Apply Design';
      applyBtn.addEventListener('click', () => {
        this.closeLivePreview();
      });

      const cancelBtn = document.createElement('button');
      cancelBtn.style.cssText = `
        padding: 12px 24px;
        background: white;
        color: #6b7280;
        border: 2px solid #e2e8f0;
        border-radius: 25px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
      `;
      cancelBtn.textContent = 'Cancel';
      cancelBtn.addEventListener('click', () => {
        this.closeLivePreview();
        return false;
      });

      // Assemble preview
      tshirtPreview.appendChild(designPreview);
      previewContainer.appendChild(previewTitle);
      previewContainer.appendChild(tshirtPreview);
      previewContainer.appendChild(previewDetails);
      buttonContainer.appendChild(applyBtn);
      buttonContainer.appendChild(cancelBtn);
      previewContainer.appendChild(buttonContainer);
      previewOverlay.appendChild(previewContainer);

      // Add to page
      document.body.appendChild(previewOverlay);

      // Animate in
      setTimeout(() => {
        previewOverlay.style.opacity = '1';
        previewContainer.style.transform = 'scale(1)';
      }, 100);

      // Add click outside to close
      previewOverlay.addEventListener('click', (e) => {
        if (e.target === previewOverlay) {
          this.closeLivePreview();
        }
      });

      // Store reference for closing
      this.currentPreview = previewOverlay;
    },

    closeLivePreview() {
      if (this.currentPreview) {
        this.currentPreview.style.opacity = '0';
        setTimeout(() => {
          if (document.body.contains(this.currentPreview)) {
            document.body.removeChild(this.currentPreview);
          }
          this.currentPreview = null;
        }, 300);
      }
    },

    updateCustomizer(design) {
      // Update the customizer inputs
      const textInput = document.getElementById('custom-text-input');
      const sizeSlider = document.getElementById('text-size-slider');
      const sizeValue = document.getElementById('size-value');
      
      if (textInput) textInput.value = design.text;
      if (sizeSlider) {
        sizeSlider.value = design.fontSize;
        if (sizeValue) sizeValue.textContent = design.fontSize + 'px';
      }

      // Update color selections
      this.selectColor('shirt', design.shirtColor);
      this.selectColor('text', design.textColor);
      
      // Update font selection
      this.selectFont(design.fontFamily);
      
      // Update position
      this.selectPosition(design.position);
      
      // Update effect
      this.selectEffect(design.effect);
      
      // Trigger customizer update
      if (window.customizer && window.customizer.updatePreview) {
        window.customizer.state = { ...window.customizer.state, ...design };
        window.customizer.updatePreview();
      }
    },

    selectColor(type, color) {
      // Update color button states
      const colorButtons = document.querySelectorAll(type === 'shirt' ? '.color-btn' : '.text-color-btn');
      colorButtons.forEach(btn => {
        btn.classList.remove('active');
        btn.style.borderColor = '#e2e8f0';
      });
      
      const activeBtn = document.querySelector(`${type === 'shirt' ? '.color-btn' : '.text-color-btn'}[data-color="${color}"]`);
      if (activeBtn) {
        activeBtn.classList.add('active');
        activeBtn.style.borderColor = '#27e1c1';
      }
    },

    selectFont(font) {
      // Update font button states
      const fontButtons = document.querySelectorAll('.font-btn');
      fontButtons.forEach(btn => {
        btn.classList.remove('active');
        btn.style.borderColor = '#e2e8f0';
        btn.style.background = 'white';
        btn.style.color = '#64748b';
      });
      
      const activeBtn = document.querySelector(`[data-font="${font}"]`);
      if (activeBtn) {
        activeBtn.classList.add('active');
        activeBtn.style.borderColor = '#27e1c1';
        activeBtn.style.background = '#27e1c1';
        activeBtn.style.color = 'white';
      }
    },

    selectPosition(position) {
      // Update position button states
      const positionButtons = document.querySelectorAll('.position-btn');
      positionButtons.forEach(btn => {
        btn.classList.remove('active');
        btn.style.borderColor = '#e2e8f0';
        btn.style.background = 'white';
        btn.style.color = '#64748b';
      });
      
      const activeBtn = document.querySelector(`[data-position="${position}"]`);
      if (activeBtn) {
        activeBtn.classList.add('active');
        activeBtn.style.borderColor = '#27e1c1';
        activeBtn.style.background = '#27e1c1';
        activeBtn.style.color = 'white';
      }
    },

    selectEffect(effect) {
      // Update effect button states
      const effectButtons = document.querySelectorAll('.effect-btn');
      effectButtons.forEach(btn => {
        btn.classList.remove('active');
        btn.style.borderColor = '#e2e8f0';
        btn.style.background = 'white';
        btn.style.color = '#64748b';
      });
      
      const activeBtn = document.querySelector(`[data-effect="${effect}"]`);
      if (activeBtn) {
        activeBtn.classList.add('active');
        activeBtn.style.borderColor = '#27e1c1';
        activeBtn.style.background = '#27e1c1';
        activeBtn.style.color = 'white';
      }
    },

    loadUserPreferences() {
      // Load user's previous design preferences from localStorage
      const userPrefs = JSON.parse(localStorage.getItem('newthrifts_user_preferences') || '{}');
      
      // Update suggestions based on user preferences
      if (userPrefs.preferredColors && userPrefs.preferredColors.length > 0) {
        // Prioritize suggestions with user's preferred colors
        console.log('Loading user preferences:', userPrefs);
      }
    },

    updateInsights() {
      // Update AI insights with real-time data
      const insights = [
        'Neon green, coral, and midnight blue are trending this month',
        'Vintage fonts and gradient effects are in high demand',
        'AI-suggested designs have 3x higher satisfaction rates',
        'Minimalist designs are up 40% this quarter',
        'Custom text orders increased by 25% this week'
      ];
      
      // Rotate insights every 10 seconds
      setInterval(() => {
        const insightElements = document.querySelectorAll('.insight-item div:last-child');
        insightElements.forEach(element => {
          const randomInsight = insights[Math.floor(Math.random() * insights.length)];
          element.textContent = randomInsight;
        });
      }, 10000);
    },

    showMessage(message, type = 'info') {
      const messageEl = document.createElement('div');
      messageEl.textContent = message;
      Object.assign(messageEl.style, {
        position: 'fixed',
        top: '20px',
        right: '20px',
        background: type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#6b7280',
        color: 'white',
        padding: '12px 20px',
        borderRadius: '8px',
        fontSize: '14px',
        fontWeight: '500',
        zIndex: '10000',
        boxShadow: '0 4px 16px rgba(0, 0, 0, 0.15)',
        transform: 'translateX(100%)',
        transition: 'transform 0.3s ease'
      });
      
      document.body.appendChild(messageEl);
      
      setTimeout(() => messageEl.style.transform = 'translateX(0)', 100);
      setTimeout(() => {
        messageEl.style.transform = 'translateX(100%)';
        setTimeout(() => {
          if (document.body.contains(messageEl)) {
            document.body.removeChild(messageEl);
          }
        }, 300);
      }, 3000);
    }
  };

  // Initialize smart suggestions
  smartSuggestions.init();

  // Make it globally available for the customizer
  window.smartSuggestions = smartSuggestions;

  console.log('Smart Design Suggestions initialized! 🤖');
});
</script>

{% schema %}
{
  "name": "Smart Design Suggestions",
  "settings": [
    {
      "type": "header",
      "content": "AI Suggestions Settings"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "AI-Powered Design Suggestions"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Let our AI help you create the perfect design! Get personalized suggestions based on trending styles, your preferences, and popular combinations."
    },
    {
      "type": "checkbox",
      "id": "show_trending",
      "label": "Show Trending Suggestions",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_personalized",
      "label": "Show Personalized Suggestions",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_templates",
      "label": "Show Quick Templates",
      "default": true
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 40
    }
  ],
  "presets": [
    {
      "name": "Smart Design Suggestions"
    }
  ]
}
{% endschema %}
