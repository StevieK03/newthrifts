{% comment %}
  Halloween Countdown — Neon Glass v4 (+ Bats + Lightning + Stars + Moon Phases)
{% endcomment %}

<section id="hween-{{ section.id }}" class="hween neon{% if section.settings.lightning_debug %} debug{% endif %}" style="
  --bg: {{ section.settings.bg_color | default: '#1a0a0a' }};
  --bg-2: {{ section.settings.bg_color_2 | default: '#2d0a0a' }};
  --text: {{ section.settings.text_color | default: '#FFD700' }};
  --muted: {{ section.settings.muted_color | default: '#FF8C00' }};
  --accent: {{ section.settings.accent_color | default: '#FF4500' }};
  --accent-2: {{ section.settings.accent2_color | default: '#8B008B' }};
  --ring: {{ section.settings.ring_color | default: '#FFD700' }};
  --size: {{ section.settings.size }};
  padding: {{ section.settings.pad_y }} {{ section.settings.pad_x }};
  {% if section.settings.sticky %} position:sticky; top:0; z-index:40; {% endif %}
">

  <style>
    #hween-{{ section.id }}{
      background: radial-gradient(80% 120% at 50% -10%, var(--bg-2), var(--bg));
      border-radius: 18px;
      position: relative; overflow: hidden; text-align:center; color:var(--text);
      box-shadow:
        0 0 0 1px color-mix(in srgb, var(--ring) 35%, transparent),
        0 10px 30px color-mix(in srgb, var(--accent) 18%, transparent),
        inset 0 0 40px color-mix(in srgb, var(--accent-2) 12%, transparent);
    }
    #hween-{{ section.id }}:before{
      content:""; position:absolute; inset:0;
      background: linear-gradient(90deg, color-mix(in srgb, var(--accent) 45%, transparent), color-mix(in srgb, var(--accent-2) 45%, transparent));
      opacity:.25; filter: blur(24px); pointer-events:none;
    }

    /* Actor layer (inside bar) */
    #hween-{{ section.id }} #hween-root{ position:absolute; inset:0; overflow:hidden; pointer-events:none; z-index:4; }
    #hween-{{ section.id }} #hween-root .actor{
      position:absolute; left:-40px; top:50%;
      transform: translateY(-50%);
      font-size:28px; 
      color:var(--text);
      text-shadow: 0 0 8px rgba(220,20,60,.6), 0 0 16px rgba(220,20,60,.3);
      filter: drop-shadow(0 0 6px rgba(220,20,60,.4)) drop-shadow(0 2px 8px rgba(0,0,0,.3));
      animation: hween-fly 8s linear forwards;
    }
    @keyframes hween-fly { 0%{ transform: translate(-40px, -50%) rotate(0) } 100%{ transform: translate(calc(100% + 40px), -50%) rotate(6deg) } }

    /* Glow pulse */
    #hween-{{ section.id }} .pulse { position:absolute; inset:-20%; background: radial-gradient(closest-side, color-mix(in srgb, var(--accent) 18%, transparent), transparent 70%); animation:hweenPulse 4s ease-in-out infinite; pointer-events:none; opacity:.65; }
    @keyframes hweenPulse { 0%,100%{ transform:scale(1); opacity:.55 } 50%{ transform:scale(1.06); opacity:.9 } }

    /* Legacy bats (whole section) */
    #hween-{{ section.id }} .bats{ position:absolute; inset:0; overflow:hidden; pointer-events:none; z-index:3; }
    #hween-{{ section.id }} .bat{ position:absolute; color:var(--text); opacity:.9; text-shadow:0 0 12px rgba(220,20,60,.6), 0 0 24px rgba(220,20,60,.3); will-change:transform; display:inline-block; transform:translateZ(0); filter:drop-shadow(0 0 8px rgba(220,20,60,.4)); }
    #hween-{{ section.id }} .bat-i{ display:inline-block; will-change:transform; filter:drop-shadow(0 0 10px rgba(220,20,60,.5)) drop-shadow(0 0 20px rgba(220,20,60,.2)); animation: bob var(--bob-dur,1.2s) ease-in-out infinite, wiggle var(--wiggle-dur,1.1s) ease-in-out infinite; animation-delay: var(--bob-delay,0s), var(--wiggle-delay,0s); }
    @keyframes fly-right { from{ transform: translate3d(-12vw,0,0) } to{ transform: translate3d(140vw,0,0) } }
    @keyframes fly-left  { from{ transform: translate3d(12vw,0,0) }  to{ transform: translate3d(-140vw,0,0) } }
    @keyframes bob { 0%,100%{ transform:translateY(0) } 50%{ transform:translateY(-4px) } }
    @keyframes wiggle { 0%,100%{ transform:rotate(0) } 50%{ transform:rotate(5deg) } }

    /* === GLIDE ACTORS (across whole section) === */
#hween-{{ section.id }} .glider {
  position:absolute; color:var(--text); opacity:.95; z-index:3; pointer-events:none;
  will-change: transform; text-shadow: 0 0 12px rgba(220,20,60,.6), 0 0 24px rgba(220,20,60,.3);
  filter: drop-shadow(0 0 8px rgba(220,20,60,.4));
}
#hween-{{ section.id }} .glider-i{
  display:inline-block;
  filter: drop-shadow(0 0 10px rgba(220,20,60,.5)) drop-shadow(0 0 20px rgba(220,20,60,.2));
  animation: bob var(--bob-dur,1.2s) ease-in-out infinite,
             wiggle var(--wiggle-dur,1.1s) ease-in-out infinite;
  animation-delay: var(--bob-delay,0s), var(--wiggle-delay,0s);
}
@keyframes glide-right { from{ transform: translate3d(-12vw,0,0) } to{ transform: translate3d(140vw,0,0) } }
@keyframes glide-left  { from{ transform: translate3d(12vw,0,0) }  to{ transform: translate3d(-140vw,0,0) } }


    /* Stars */
    #hween-{{ section.id }} .stars{ position:absolute; inset:0; overflow:hidden; pointer-events:none; z-index:1; }
    #hween-{{ section.id }} .star{ --twinkle-dur:2.4s; --twinkle-delay:0s; position:absolute; border-radius:50%; opacity:0; background:var(--text); box-shadow:0 0 4px var(--text); animation:twinkle var(--twinkle-dur) ease-in-out infinite; animation-delay:var(--twinkle-delay); }
    @keyframes twinkle { 0%,100%{ opacity:0; transform:scale(1) } 50%{ opacity:1; transform:scale(1.2) } }

    /* Shooting Stars */
    #hween-{{ section.id }} .shooting-stars{ position:absolute; inset:0; overflow:hidden; pointer-events:none; z-index:2; }
    #hween-{{ section.id }} .shooting-star{ position:absolute; width:2px; height:2px; background:var(--text); border-radius:50%; box-shadow:0 0 6px var(--text), 0 0 12px var(--text); }
    #hween-{{ section.id }} .shooting-star::before{ content:''; position:absolute; top:50%; left:0; width:100px; height:1px; background:linear-gradient(90deg, var(--text), transparent); transform:translateY(-50%); }
    #hween-{{ section.id }} .shooting-star::after{ content:''; position:absolute; top:50%; left:0; width:60px; height:1px; background:linear-gradient(90deg, var(--text), transparent); transform:translateY(-50%); filter:blur(1px); }
    @keyframes shoot1{ 0%{ transform:translate(-120px, -20px) rotate(45deg); opacity:0; } 10%{ opacity:1; } 90%{ opacity:1; } 100%{ transform:translate(120vw, 80vh) rotate(45deg); opacity:0; } }
    @keyframes shoot2{ 0%{ transform:translate(-120px, 20px) rotate(-30deg); opacity:0; } 10%{ opacity:1; } 90%{ opacity:1; } 100%{ transform:translate(120vw, -20vh) rotate(-30deg); opacity:0; } }
    @keyframes shoot3{ 0%{ transform:translate(-120px, 40px) rotate(60deg); opacity:0; } 10%{ opacity:1; } 90%{ opacity:1; } 100%{ transform:translate(120vw, -40vh) rotate(60deg); opacity:0; } }

    /* BRIGHT CUSTOM MOON - Multiple Glowing Layers */
    #hween-{{ section.id }} .moon{ 
      position:absolute; 
      top:6%; 
      right:4%; 
      width:5rem; 
      height:5rem; 
      pointer-events:none; 
      z-index:4;
      display:block;
      opacity:1;
      visibility:visible;
    }
    
    /* Enhanced Moon Container with Floating Animation */
    #hween-{{ section.id }} .moon-container {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 6rem;
      height: 6rem;
      transform: translate(-50%, -50%);
      border-radius: 50%;
      overflow: hidden;
      animation: moon-float 8s ease-in-out infinite;
      filter: drop-shadow(0 0 15px rgba(255, 255, 255, 0.4)) drop-shadow(0 0 30px rgba(255, 255, 255, 0.2));
    }

    /* Simple Moon Emoji Style Surface */
    #hween-{{ section.id }} .moon-surface {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: 
        /* Simple moon emoji base color */
        radial-gradient(circle at 30% 30%, #f5f5f5 0%, #e8e8e8 40%, #d0d0d0 70%, #b8b8b8 100%);
      border-radius: 50%;
      box-shadow: 
        inset -5px -5px 15px rgba(0,0,0,0.2),
        inset 5px 5px 15px rgba(255,255,255,0.3),
        0 0 20px rgba(255,255,255,0.3);
      animation: moon-surface-rotate 60s linear infinite;
    }

    /* Simple Moon Emoji Features */
    #hween-{{ section.id }} .moon-craters {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      animation: moon-surface-rotate 60s linear infinite;
    }

    /* Simple crater like moon emoji */
    #hween-{{ section.id }} .crater {
      position: absolute;
      border-radius: 50%;
      background: radial-gradient(circle, rgba(0,0,0,0.15) 0%, rgba(0,0,0,0.05) 60%, transparent 100%);
      box-shadow: inset 0 0 5px rgba(0,0,0,0.2);
    }

    /* Main crater (like moon emoji) */
    #hween-{{ section.id }} .crater-1 {
      width: 1.2rem;
      height: 1.2rem;
      top: 40%;
      left: 35%;
      animation: crater-glow 8s ease-in-out infinite;
    }

    /* Secondary crater */
    #hween-{{ section.id }} .crater-2 {
      width: 0.8rem;
      height: 0.8rem;
      top: 60%;
      left: 65%;
      animation: crater-glow 10s ease-in-out infinite 2s;
    }

    /* Small crater */
    #hween-{{ section.id }} .crater-3 {
      width: 0.5rem;
      height: 0.5rem;
      top: 25%;
      left: 70%;
      animation: crater-glow 12s ease-in-out infinite 4s;
    }

    /* Moon Face Features (like emoji) */
    #hween-{{ section.id }} .moon-face {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
    }

    #hween-{{ section.id }} .moon-eye {
      position: absolute;
      width: 0.4rem;
      height: 0.4rem;
      background: radial-gradient(circle, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.1) 60%, transparent 100%);
      border-radius: 50%;
    }

    #hween-{{ section.id }} .moon-eye-1 {
      top: 35%;
      left: 45%;
      animation: eye-blink 6s ease-in-out infinite;
    }

    #hween-{{ section.id }} .moon-eye-2 {
      top: 35%;
      left: 55%;
      animation: eye-blink 6s ease-in-out infinite 0.5s;
    }

    #hween-{{ section.id }} .moon-mouth {
      position: absolute;
      width: 0.6rem;
      height: 0.3rem;
      top: 55%;
      left: 47%;
      border: 2px solid rgba(0,0,0,0.2);
      border-top: none;
      border-radius: 0 0 0.6rem 0.6rem;
      animation: mouth-smile 8s ease-in-out infinite;
    }

    /* Moon Phase Shadow with Smooth Transitions */
    #hween-{{ section.id }} .moon-phase-shadow {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--moon-phase-shadow, transparent);
      border-radius: 50%;
      transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
      pointer-events: none;
    }

    /* Simple Moon Emoji Glow */
    #hween-{{ section.id }} .moon-atmosphere {
      position: absolute;
      top: -20%;
      left: -20%;
      width: 140%;
      height: 140%;
      background: 
        radial-gradient(circle at center, 
          rgba(255, 255, 255, 0.15) 0%, 
          rgba(255, 255, 255, 0.08) 50%, 
          transparent 100%);
      border-radius: 50%;
      animation: atmosphere-pulse 6s ease-in-out infinite;
    }

    /* Simple Moon Emoji Shine */
    #hween-{{ section.id }} .moon-shine {
      position: absolute;
      top: 15%;
      left: 15%;
      width: 35%;
      height: 35%;
      background: 
        radial-gradient(ellipse at center, 
          rgba(255, 255, 255, 0.7) 0%, 
          rgba(255, 255, 255, 0.3) 60%, 
          transparent 100%);
      border-radius: 50%;
      animation: moon-shine 8s ease-in-out infinite;
      box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
    }

    /* Moon Phase Label with Glowing Effect */
    #hween-{{ section.id }} .moon-phase-label {
      position: absolute;
      top: 130%;
      left: 50%;
      transform: translateX(-50%);
      font-size: 0.75rem;
      color: var(--text);
      text-align: center;
      font-weight: 700;
      text-shadow: 
        0 0 10px rgba(255,255,255,0.8),
        0 0 20px rgba(255,255,255,0.4),
        0 0 30px rgba(255,255,255,0.2);
      opacity: 0.9;
      white-space: nowrap;
      animation: label-glow 4s ease-in-out infinite;
      letter-spacing: 1px;
    }

    /* Enhanced Animations */
    @keyframes moon-float {
      0%, 100% { 
        transform: translate(-50%, -50%) translateY(0px) scale(1); 
      }
      25% { 
        transform: translate(-50%, -50%) translateY(-8px) scale(1.02); 
      }
      50% { 
        transform: translate(-50%, -50%) translateY(-5px) scale(1.05); 
      }
      75% { 
        transform: translate(-50%, -50%) translateY(-12px) scale(1.02); 
      }
    }

    @keyframes moon-surface-rotate {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    @keyframes crater-glow {
      0%, 100% { 
        opacity: 0.6; 
        box-shadow: inset 0 0 15px rgba(0,0,0,0.4); 
      }
      50% { 
        opacity: 0.9; 
        box-shadow: inset 0 0 25px rgba(0,0,0,0.6), 0 0 10px rgba(255,255,255,0.1); 
      }
    }

    @keyframes atmosphere-pulse {
      0%, 100% { 
        opacity: 0.4; 
        transform: scale(1) rotate(0deg); 
      }
      50% { 
        opacity: 0.7; 
        transform: scale(1.15) rotate(180deg); 
      }
    }

    @keyframes atmosphere-drift {
      0%, 100% { transform: translate(0, 0) rotate(0deg); }
      33% { transform: translate(5px, -3px) rotate(120deg); }
      66% { transform: translate(-3px, 5px) rotate(240deg); }
    }

    @keyframes moon-shine {
      0%, 100% { 
        opacity: 0.7; 
        transform: scale(1) rotate(0deg); 
      }
      25% { 
        opacity: 1; 
        transform: scale(1.1) rotate(90deg); 
      }
      50% { 
        opacity: 0.8; 
        transform: scale(1.2) rotate(180deg); 
      }
      75% { 
        opacity: 0.9; 
        transform: scale(1.05) rotate(270deg); 
      }
    }

    @keyframes shine-drift {
      0%, 100% { transform: translate(0, 0); }
      50% { transform: translate(3px, -2px); }
    }

    @keyframes eye-blink {
      0%, 90%, 100% { 
        transform: scaleY(1); 
      }
      95% { 
        transform: scaleY(0.1); 
      }
    }

    @keyframes mouth-smile {
      0%, 100% { 
        transform: scaleX(1); 
        opacity: 0.8; 
      }
      50% { 
        transform: scaleX(1.1); 
        opacity: 1; 
      }
    }

    @keyframes label-glow {
      0%, 100% { 
        opacity: 0.8; 
        text-shadow: 
          0 0 10px rgba(255, 255, 255, 0.8),
          0 0 20px rgba(255, 255, 255, 0.4),
          0 0 30px rgba(255, 255, 255, 0.2); 
      }
      50% { 
        opacity: 1; 
        text-shadow: 
          0 0 15px rgba(255, 255, 255, 1),
          0 0 30px rgba(255, 255, 255, 0.6),
          0 0 45px rgba(255, 255, 255, 0.3); 
      }
    }

    /* Animated Frankenstein Emojis */
    #hween-{{ section.id }} .frankensteins {
      position: absolute;
      inset: 0;
      pointer-events: none;
      z-index: 3;
    }

    #hween-{{ section.id }} .frankenstein {
      position: absolute;
      font-size: 2.5rem;
      filter: drop-shadow(0 0 20px rgba(0, 255, 0, 0.8)) drop-shadow(0 0 40px rgba(0, 255, 0, 0.4));
      animation: frankenstein-float 6s ease-in-out infinite;
      opacity: 0.9;
    }

    #hween-{{ section.id }} .frankenstein-1 {
      top: 15%;
      left: 10%;
      animation-delay: 0s;
      animation-duration: 5s;
    }

    #hween-{{ section.id }} .frankenstein-2 {
      top: 60%;
      right: 15%;
      animation-delay: 2s;
      animation-duration: 7s;
    }

    #hween-{{ section.id }} .frankenstein-3 {
      bottom: 20%;
      left: 20%;
      animation-delay: 4s;
      animation-duration: 6s;
    }

    /* Frankenstein Animation */
    @keyframes frankenstein-float {
      0%, 100% { 
        transform: translateY(0px) rotate(0deg) scale(1); 
        filter: drop-shadow(0 0 20px rgba(0, 255, 0, 0.8)) drop-shadow(0 0 40px rgba(0, 255, 0, 0.4));
      }
      25% { 
        transform: translateY(-15px) rotate(5deg) scale(1.1); 
        filter: drop-shadow(0 0 25px rgba(0, 255, 0, 1)) drop-shadow(0 0 50px rgba(0, 255, 0, 0.6));
      }
      50% { 
        transform: translateY(-10px) rotate(-3deg) scale(0.95); 
        filter: drop-shadow(0 0 30px rgba(255, 0, 0, 0.8)) drop-shadow(0 0 60px rgba(255, 0, 0, 0.4));
      }
      75% { 
        transform: translateY(-20px) rotate(8deg) scale(1.05); 
        filter: drop-shadow(0 0 20px rgba(255, 255, 0, 0.8)) drop-shadow(0 0 40px rgba(255, 255, 0, 0.4));
      }
    }

    /* Glowing Eyes Effect */
    #hween-{{ section.id }} .frankenstein::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 120%;
      height: 120%;
      background: radial-gradient(circle, rgba(0, 255, 0, 0.3) 0%, transparent 70%);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      animation: frankenstein-glow 3s ease-in-out infinite;
      pointer-events: none;
    }

    @keyframes frankenstein-glow {
      0%, 100% { 
        opacity: 0.3; 
        transform: translate(-50%, -50%) scale(1); 
      }
      50% { 
        opacity: 0.8; 
        transform: translate(-50%, -50%) scale(1.2); 
      }
    }

    /* Mobile Responsive */
    @media (max-width: 768px) {
      #hween-{{ section.id }} .frankenstein {
        font-size: 2rem;
      }
      
      #hween-{{ section.id }} .frankenstein-1 {
        top: 10%;
        left: 5%;
      }
      
      #hween-{{ section.id }} .frankenstein-2 {
        top: 65%;
        right: 10%;
      }
      
      #hween-{{ section.id }} .frankenstein-3 {
        bottom: 15%;
        left: 15%;
      }
    }

    /* Wind Effects */
    #hween-{{ section.id }} .wind-effects {
      position: absolute;
      inset: 0;
      pointer-events: none;
      z-index: 2;
      overflow: hidden;
    }


    /* Wind Particles */
    #hween-{{ section.id }} .wind-particles {
      position: absolute;
      inset: 0;
    }

    #hween-{{ section.id }} .particle {
      position: absolute;
      font-size: 1.5rem;
      opacity: 0.6;
      filter: drop-shadow(0 0 10px rgba(255,255,255,0.5));
      animation: wind-particle-float 12s linear infinite;
    }

    #hween-{{ section.id }} .particle-1 {
      top: 25%;
      left: -10%;
      animation-delay: 0s;
      animation-duration: 15s;
    }

    #hween-{{ section.id }} .particle-2 {
      top: 45%;
      left: -15%;
      animation-delay: 3s;
      animation-duration: 12s;
    }

    #hween-{{ section.id }} .particle-3 {
      top: 70%;
      left: -8%;
      animation-delay: 6s;
      animation-duration: 18s;
    }

    #hween-{{ section.id }} .particle-4 {
      top: 15%;
      left: -12%;
      animation-delay: 9s;
      animation-duration: 14s;
    }

    #hween-{{ section.id }} .particle-5 {
      top: 85%;
      left: -10%;
      animation-delay: 12s;
      animation-duration: 16s;
    }

    #hween-{{ section.id }} .particle-6 {
      top: 35%;
      left: -8%;
      animation-delay: 15s;
      animation-duration: 13s;
    }

    @keyframes wind-particle-float {
      0% { 
        transform: translateX(0) translateY(0) rotate(0deg); 
        opacity: 0; 
      }
      10% { 
        opacity: 0.6; 
      }
      50% { 
        transform: translateX(50vw) translateY(-20px) rotate(180deg); 
        opacity: 0.8; 
      }
      90% { 
        opacity: 0.6; 
      }
      100% { 
        transform: translateX(100vw) translateY(0) rotate(360deg); 
        opacity: 0; 
      }
    }

    /* Animated Black Cats */
    #hween-{{ section.id }} .halloween-cats {
      position: absolute;
      inset: 0;
    }

    #hween-{{ section.id }} .cat {
      position: absolute;
      font-size: 2rem;
      filter: drop-shadow(0 0 15px rgba(0, 0, 0, 0.8)) drop-shadow(0 0 30px rgba(0, 0, 0, 0.4));
      animation: cat-slink 8s ease-in-out infinite;
      opacity: 0.9;
    }

    #hween-{{ section.id }} .cat-1 {
      top: 25%;
      left: 5%;
      animation-delay: 0s;
      animation-duration: 10s;
    }

    #hween-{{ section.id }} .cat-2 {
      top: 70%;
      right: 8%;
      animation-delay: 3s;
      animation-duration: 12s;
    }

    #hween-{{ section.id }} .cat-3 {
      bottom: 30%;
      left: 15%;
      animation-delay: 6s;
      animation-duration: 9s;
    }

    #hween-{{ section.id }} .cat-4 {
      top: 50%;
      right: 20%;
      animation-delay: 9s;
      animation-duration: 11s;
    }

    @keyframes cat-slink {
      0%, 100% { 
        transform: translateX(0) translateY(0) rotate(0deg) scale(1); 
        opacity: 0.7; 
      }
      25% { 
        transform: translateX(20px) translateY(-10px) rotate(5deg) scale(1.1); 
        opacity: 0.9; 
      }
      50% { 
        transform: translateX(40px) translateY(5px) rotate(-3deg) scale(0.9); 
        opacity: 0.8; 
      }
      75% { 
        transform: translateX(60px) translateY(-5px) rotate(8deg) scale(1.05); 
        opacity: 0.95; 
      }
    }

    /* Candy Corn */
    #hween-{{ section.id }} .candy-corn {
      position: absolute;
      inset: 0;
    }

    #hween-{{ section.id }} .candy {
      position: absolute;
      font-size: 1.5rem;
      filter: drop-shadow(0 0 10px rgba(255, 255, 0, 0.6)) drop-shadow(0 0 20px rgba(255, 165, 0, 0.4));
      animation: candy-bounce 6s ease-in-out infinite;
      opacity: 0.8;
    }

    #hween-{{ section.id }} .candy-1 {
      top: 20%;
      left: 10%;
      animation-delay: 0s;
      animation-duration: 7s;
    }

    #hween-{{ section.id }} .candy-2 {
      top: 60%;
      right: 15%;
      animation-delay: 1.5s;
      animation-duration: 8s;
    }

    #hween-{{ section.id }} .candy-3 {
      bottom: 25%;
      left: 25%;
      animation-delay: 3s;
      animation-duration: 6s;
    }

    #hween-{{ section.id }} .candy-4 {
      top: 40%;
      right: 30%;
      animation-delay: 4.5s;
      animation-duration: 9s;
    }

    #hween-{{ section.id }} .candy-5 {
      bottom: 10%;
      right: 10%;
      animation-delay: 6s;
      animation-duration: 7s;
    }

    @keyframes candy-bounce {
      0%, 100% { 
        transform: translateY(0px) rotate(0deg) scale(1); 
        opacity: 0.6; 
      }
      25% { 
        transform: translateY(-15px) rotate(10deg) scale(1.1); 
        opacity: 0.9; 
      }
      50% { 
        transform: translateY(-8px) rotate(-5deg) scale(0.95); 
        opacity: 0.8; 
      }
      75% { 
        transform: translateY(-20px) rotate(15deg) scale(1.05); 
        opacity: 1; 
      }
    }

    /* Cat Glowing Eyes Effect */
    #hween-{{ section.id }} .cat::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 130%;
      height: 130%;
      background: radial-gradient(circle, rgba(0, 255, 0, 0.2) 0%, transparent 70%);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      animation: cat-eyes-glow 4s ease-in-out infinite;
      pointer-events: none;
    }

    @keyframes cat-eyes-glow {
      0%, 100% { 
        opacity: 0.2; 
        transform: translate(-50%, -50%) scale(1); 
      }
      50% { 
        opacity: 0.6; 
        transform: translate(-50%, -50%) scale(1.3); 
      }
    }

    /* Candy Sparkle Effect */
    #hween-{{ section.id }} .candy::after {
      content: '✨';
      position: absolute;
      top: -10px;
      right: -10px;
      font-size: 0.8rem;
      animation: candy-sparkle 3s ease-in-out infinite;
        opacity: 0.7; 
    }

    @keyframes candy-sparkle {
      0%, 100% { 
        opacity: 0.3; 
        transform: scale(1) rotate(0deg); 
      }
      50% { 
        opacity: 1; 
        transform: scale(1.2) rotate(180deg); 
      }
    }

    /* Mobile Responsive for Cats and Candy */
    @media (max-width: 768px) {
      #hween-{{ section.id }} .cat {
        font-size: 1.5rem;
      }
      
      #hween-{{ section.id }} .candy {
        font-size: 1.2rem;
      }
      
      #hween-{{ section.id }} .cat-1 {
        top: 20%;
        left: 3%;
      }
      
      #hween-{{ section.id }} .cat-2 {
        top: 75%;
        right: 5%;
      }
      
      #hween-{{ section.id }} .cat-3 {
        bottom: 25%;
        left: 10%;
      }
      
      #hween-{{ section.id }} .cat-4 {
        top: 45%;
        right: 15%;
      }
    }

    /* Halloween Title Animation */
    #hween-{{ section.id }} .halloween-title {
      position: relative;
      font-family: 'Bebas Neue', 'Anton', 'Creepster', cursive, sans-serif !important;
      font-size: clamp(1.8rem, 4vw, 2.5rem) !important;
      font-weight: 900 !important;
      text-transform: uppercase !important;
      letter-spacing: 0.1em !important;
      text-align: center !important;
      margin-bottom: 1rem !important;
      animation: halloween-title-glow 3s ease-in-out infinite !important;
      text-shadow: 
        0 0 10px rgba(255, 69, 0, 0.8),
        0 0 20px rgba(255, 140, 0, 0.6),
        0 0 30px rgba(220, 20, 60, 0.4),
        0 0 40px rgba(255, 69, 0, 0.3) !important;
      background: linear-gradient(45deg, 
        #ff4500, #ff8c00, #dc143c, #ff6347, #ff1493, #ff4500) !important;
      background-size: 400% 400% !important;
      -webkit-background-clip: text !important;
      background-clip: text !important;
      -webkit-text-fill-color: transparent !important;
      animation: 
        halloween-title-glow 3s ease-in-out infinite,
        halloween-gradient-shift 4s ease-in-out infinite,
        halloween-title-pulse 2s ease-in-out infinite !important;
    }

    #hween-{{ section.id }} .halloween-title::before {
      content: '';
      position: absolute;
      top: -5px;
      left: -5px;
      right: -5px;
      bottom: -5px;
      background: linear-gradient(45deg, 
        rgba(255, 69, 0, 0.3), 
        rgba(255, 140, 0, 0.3), 
        rgba(220, 20, 60, 0.3), 
        rgba(255, 99, 71, 0.3)) !important;
      border-radius: 10px !important;
      filter: blur(8px) !important;
      z-index: -1 !important;
      animation: halloween-title-aura 3s ease-in-out infinite !important;
    }

    #hween-{{ section.id }} .halloween-title::after {
      content: '🎃 👻 🧙‍♀️ 🦇';
      position: absolute;
      top: -30px;
      left: 50%;
      transform: translateX(-50%);
      font-size: 1.2rem;
      animation: halloween-emojis-float 6s ease-in-out infinite;
      opacity: 0.8;
    }

    /* Halloween Title Animations */
    @keyframes halloween-title-glow {
      0%, 100% { 
        text-shadow: 
          0 0 10px rgba(255, 69, 0, 0.8),
          0 0 20px rgba(255, 140, 0, 0.6),
          0 0 30px rgba(220, 20, 60, 0.4),
          0 0 40px rgba(255, 69, 0, 0.3);
      }
      50% { 
        text-shadow: 
          0 0 20px rgba(255, 140, 0, 1),
          0 0 30px rgba(255, 69, 0, 0.8),
          0 0 40px rgba(220, 20, 60, 0.6),
          0 0 50px rgba(255, 99, 71, 0.4);
      }
    }

    @keyframes halloween-gradient-shift {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }

    @keyframes halloween-title-pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.05); }
    }

    @keyframes halloween-title-aura {
      0%, 100% { 
        opacity: 0.3; 
        transform: scale(1); 
      }
      50% { 
        opacity: 0.6; 
        transform: scale(1.1); 
      }
    }

    @keyframes halloween-emojis-float {
      0%, 100% { 
        transform: translateX(-50%) translateY(0px) rotate(0deg); 
        opacity: 0.6; 
      }
      25% { 
        transform: translateX(-50%) translateY(-10px) rotate(5deg); 
        opacity: 0.8; 
      }
      50% { 
        transform: translateX(-50%) translateY(-5px) rotate(-3deg); 
        opacity: 1; 
      }
      75% { 
        transform: translateX(-50%) translateY(-15px) rotate(8deg); 
        opacity: 0.9; 
      }
    }

    /* Mobile Responsive for Halloween Title */
    @media (max-width: 768px) {
      #hween-{{ section.id }} .halloween-title {
        font-size: clamp(1.5rem, 5vw, 2rem) !important;
        letter-spacing: 0.05em !important;
      }
      
      #hween-{{ section.id }} .halloween-title::after {
        font-size: 1rem;
        top: -25px;
      }
    }
    
    /* Enhanced Fog effect */
    #hween-{{ section.id }} .fog{ 
      position:absolute; 
      inset:0; 
      background: 
        radial-gradient(ellipse at 20% 30%, rgba(220,20,60,0.15) 0%, transparent 50%),
        radial-gradient(ellipse at 80% 70%, rgba(220,20,60,0.12) 0%, transparent 50%),
        radial-gradient(ellipse at 50% 50%, rgba(220,20,60,0.08) 0%, transparent 70%);
      animation: fogDrift 20s ease-in-out infinite;
      pointer-events:none; 
      z-index:1;
    }
    
    @keyframes fogDrift {
      0%, 100% { transform: translateX(-15%) scale(1.2); opacity: 0.4; }
      25% { transform: translateX(5%) scale(1.1); opacity: 0.6; }
      50% { transform: translateX(15%) scale(1.3); opacity: 0.3; }
      75% { transform: translateX(-5%) scale(1.0); opacity: 0.5; }
    }
    
    /* Floating pumpkins */
    #hween-{{ section.id }} .pumpkins{ 
      position:absolute; 
      inset:0; 
      overflow:hidden; 
      pointer-events:none; 
      z-index:1; 
    }
    #hween-{{ section.id }} .pumpkin{ 
      position:absolute; 
      font-size:2rem; 
      opacity:0.85; 
      animation: floatPumpkin 12s ease-in-out infinite;
      filter: drop-shadow(0 0 12px rgba(220,20,60,0.6)) drop-shadow(0 0 24px rgba(220,20,60,0.3));
      text-shadow: 0 0 8px rgba(220,20,60,0.5);
      transform: scale(1.1);
    }
    @keyframes floatPumpkin {
      0%, 100% { transform: translateY(0px) rotate(0deg) scale(1.1); }
      25% { transform: translateY(-8px) rotate(3deg) scale(1.15); }
      50% { transform: translateY(-4px) rotate(-2deg) scale(1.05); }
      75% { transform: translateY(-12px) rotate(2deg) scale(1.2); }
    }
    
    /* Spider webs */
    #hween-{{ section.id }} .webs{ 
      position:absolute; 
      inset:0; 
      overflow:hidden; 
      pointer-events:none; 
      z-index:1; 
    }
    #hween-{{ section.id }} .web{ 
      position:absolute; 
      font-size:1.5rem; 
      opacity:0.4; 
      animation: swayWeb 8s ease-in-out infinite;
      filter: drop-shadow(0 0 4px rgba(255,255,255,0.3));
    }
    @keyframes swayWeb {
      0%, 100% { transform: rotate(-2deg); }
      50% { transform: rotate(2deg); }
    }

    /* Falling Leaves */
    #hween-{{ section.id }} .leaves{ 
      position:absolute; 
      inset:0; 
      overflow:hidden; 
      pointer-events:none; 
      z-index:2; 
    }
    #hween-{{ section.id }} .leaf{ 
      position:absolute; 
      font-size:1.2rem; 
      opacity:0.8; 
      animation: fallLeaf 12s linear infinite;
      filter: drop-shadow(0 0 6px rgba(220,20,60,0.4));
      color: var(--accent);
    }
    @keyframes fallLeaf {
      0% { 
        transform: translateY(-100px) translateX(0px) rotate(0deg); 
        opacity: 0; 
      }
      10% { 
        opacity: 0.8; 
      }
      90% { 
        opacity: 0.8; 
      }
      100% { 
        transform: translateY(100vh) translateX(50px) rotate(360deg); 
        opacity: 0; 
      }
    }

    /* Lightning */
    #hween-{{ section.id }} .lightning{ position:absolute; inset:-10%; pointer-events:none; opacity:0; z-index:5; background:
      radial-gradient(50% 60% at 30% 20%, color-mix(in srgb, var(--lt) 95%, transparent), transparent 70%),
      radial-gradient(60% 50% at 70% 35%, color-mix(in srgb, var(--lt) 85%, transparent), transparent 75%),
      radial-gradient(70% 60% at 50% 65%, color-mix(in srgb, var(--lt) 75%, transparent), transparent 80%),
      radial-gradient(50% 60% at 30% 20%, rgba(255,255,255,.95), transparent 70%);
      mix-blend-mode:screen; filter:blur(2px);
    }
    #hween-{{ section.id }} .lightning.flash{ animation: ltFlash-{{ section.id }} .9s linear; }
    @keyframes ltFlash-{{ section.id }}{ 0%{opacity:0} 5%{opacity:calc(var(--amp)*.01)} 12%{opacity:.15} 20%{opacity:.85} 35%{opacity:.05} 45%{opacity:.75} 100%{opacity:0} }
    #hween-{{ section.id }}.debug .lightning{ box-shadow: inset 0 0 180px 40px var(--lt); }

    /* Editor-only 'Flash test' button */
    #hween-{{ section.id }} .lt-test{ position:absolute; right:12px; top:12px; z-index:6; padding:.45rem .7rem; border-radius:10px; border:0; cursor:pointer; font-weight:800; font-size:.9rem; color:#0b1022; background:linear-gradient(90deg, var(--accent), var(--accent-2)); box-shadow:0 8px 20px color-mix(in srgb, var(--accent-2) 28%, transparent); }
    #hween-{{ section.id }} .lt-test:hover{ transform:translateY(-1px); }

    /* Row */
    #hween-{{ section.id }} .hdr{ font-weight:900; letter-spacing:.05em; margin-bottom:.8rem; color:var(--text) !important; text-shadow:0 0 20px color-mix(in srgb, var(--text) 60%, transparent), 0 0 40px color-mix(in srgb, var(--text) 30%, transparent) !important; position:relative; text-align:center !important; font-size:1.8rem; text-transform:uppercase; }
    #hween-{{ section.id }} .row{ display:inline-flex; align-items:center; gap:.9rem; padding:.4rem .7rem; border-radius:999px; backdrop-filter: blur(8px); position:relative; }
    #hween-{{ section.id }} .emoji{ font-size:{% case section.settings.size %}{% when 'sm' %}1.35rem{% when 'md' %}1.8rem{% when 'lg' %}2.2rem{% endcase %}; filter: drop-shadow(0 0 10px color-mix(in srgb, var(--accent) 50%, transparent)); }
    #hween-{{ section.id }} .lead{ font-weight:800; opacity:.95; font-size:{% case section.settings.size %}{% when 'sm' %}1.05rem{% when 'md' %}1.35rem{% when 'lg' %}1.6rem{% endcase %}; }
    #hween-{{ section.id }} .pill{ display:inline-flex; align-items:baseline; gap:.25rem; padding:.38rem .62rem; border-radius:12px; background: color-mix(in srgb, var(--bg) 60%, transparent);
      box-shadow: 0 0 0 1px color-mix(in srgb, var(--accent) 50%, transparent), 0 6px 18px color-mix(in srgb, var(--accent) 30%, transparent), 0 0 24px color-mix(in srgb, var(--accent-2) 20%, transparent) inset; font-variant-numeric: tabular-nums; }
    #hween-{{ section.id }} .val{ font-weight:900; letter-spacing:.02em; font-size:{% case section.settings.size %}{% when 'sm' %}1.05rem{% when 'md' %}1.35rem{% when 'lg' %}1.75rem{% endcase %}; color:var(--text) !important; text-shadow:0 0 16px color-mix(in srgb, var(--text) 60%, transparent), 0 0 32px color-mix(in srgb, var(--text) 40%, transparent) !important; filter: drop-shadow(0 0 8px rgba(220,20,60,0.6)) !important; }
    #hween-{{ section.id }} .lbl{ font-size:.8em; color:var(--muted); font-weight:700; text-transform:uppercase; letter-spacing:.06em; }

    /* Progress */
    #hween-{{ section.id }} .progress{ position:relative; height:10px; border-radius:999px; overflow:hidden; margin:.9rem auto 0; max-width:820px; background: color-mix(in srgb, var(--bg) 55%, transparent); box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--ring) 35%, transparent); }
    #hween-{{ section.id }} .progress > span{ display:block; height:100%; width:0%; background: linear-gradient(90deg, var(--accent), var(--accent-2)); box-shadow: 0 0 24px color-mix(in srgb, var(--accent-2) 32%, transparent); transition: width .6s ease; }

    /* CTA */
    #hween-{{ section.id }} .cta{ margin-top:.9rem; display:inline-flex; align-items:center; gap:.5rem; padding:.7rem 1rem; border-radius:12px; color:#0b1022; background: linear-gradient(90deg, var(--accent), var(--accent-2)); font-weight:800; text-decoration:none; box-shadow: 0 10px 30px color-mix(in srgb, var(--accent-2) 25%, transparent); position:relative; overflow:hidden; }
    #hween-{{ section.id }} .cta:before{ content:''; position:absolute; inset:0; background: radial-gradient(circle at 50% 50%, var(--accent-2), transparent 70%); opacity:0; transition:opacity .3s ease; }
    #hween-{{ section.id }} .cta:hover:before{ opacity:.5; }
    #hween-{{ section.id }} .cta:hover{ transform: translateY(-1px); }

    /* Responsive */
    @media (max-width: 768px){
      #hween-{{ section.id }} .row{ flex-wrap: wrap; justify-content: center; }
      #hween-{{ section.id }} .pill{ padding: .3rem .5rem; }
      #hween-{{ section.id }} .emoji{ font-size:{% case section.settings.size %}{% when 'sm' %}1.1rem{% when 'md' %}1.4rem{% when 'lg' %}1.8rem{% endcase %}; }
      #hween-{{ section.id }} .moon{ 
        width: 4rem; 
        height: 4rem; 
        top: 6%; 
        right: 6%; 
      }
      #hween-{{ section.id }} .moon-container{ 
        width: 5rem; 
        height: 5rem; 
      }
      
      #hween-{{ section.id }} .crater-1 {
        width: 0.9rem;
        height: 0.9rem;
      }
      
      #hween-{{ section.id }} .crater-2 {
        width: 0.6rem;
        height: 0.6rem;
      }
      
      #hween-{{ section.id }} .crater-3 {
        width: 0.4rem;
        height: 0.4rem;
      }
      
      #hween-{{ section.id }} .moon-eye {
        width: 0.3rem;
        height: 0.3rem;
      }
      
      #hween-{{ section.id }} .moon-mouth {
        width: 0.5rem;
        height: 0.25rem;
      }
      
      #hween-{{ section.id }} .moon-phase-label {
        font-size: 0.6rem;
      }
      #hween-{{ section.id }} .pumpkin{ 
        font-size: 1.8rem; 
        opacity: 0.9;
        filter: drop-shadow(0 0 16px rgba(220,20,60,0.7)) drop-shadow(0 0 32px rgba(220,20,60,0.4));
        text-shadow: 0 0 12px rgba(220,20,60,0.6);
        transform: scale(1.2);
      }
      #hween-{{ section.id }} .bat{ 
        font-size: 1.4rem; 
        opacity: 0.95;
        text-shadow: 0 0 16px rgba(220,20,60,0.7), 0 0 32px rgba(220,20,60,0.4);
        filter: drop-shadow(0 0 12px rgba(220,20,60,0.5)) drop-shadow(0 0 24px rgba(220,20,60,0.3));
      }
      #hween-{{ section.id }} .bat-i{ 
        filter: drop-shadow(0 0 14px rgba(220,20,60,0.6)) drop-shadow(0 0 28px rgba(220,20,60,0.3));
      }
      #hween-{{ section.id }} .glider{ 
        font-size: 1.4rem; 
        opacity: 0.95;
        text-shadow: 0 0 16px rgba(220,20,60,0.7), 0 0 32px rgba(220,20,60,0.4);
        filter: drop-shadow(0 0 12px rgba(220,20,60,0.5)) drop-shadow(0 0 24px rgba(220,20,60,0.3));
      }
      #hween-{{ section.id }} .glider-i{ 
        filter: drop-shadow(0 0 14px rgba(220,20,60,0.6)) drop-shadow(0 0 28px rgba(220,20,60,0.3));
      }
      #hween-{{ section.id }} #hween-root .actor{ 
        font-size: 24px; 
        text-shadow: 0 0 12px rgba(220,20,60,0.7), 0 0 24px rgba(220,20,60,0.4);
        filter: drop-shadow(0 0 8px rgba(220,20,60,0.5)) drop-shadow(0 2px 10px rgba(0,0,0,0.4));
      }
      #hween-{{ section.id }} .web{ font-size: 1.2rem; }
    }

    {% if section.settings.respect_reduced_motion %}
    @media (prefers-reduced-motion: reduce){
      #hween-{{ section.id }} * { animation: none !important; transition: none !important; }
      #hween-{{ section.id }} .bats,
      #hween-{{ section.id }} .stars,
      #hween-{{ section.id }} .lightning,
      #hween-{{ section.id }} #hween-root { display: none; }
    }
    {% endif %}

    /* Dev helper btn */
    #hween-{{ section.id }} .hween-devbtn{ position:absolute; right:10px; bottom:10px; z-index:7; display:none; align-items:center; gap:6px; padding:.45rem .6rem; border-radius:10px; border:0; cursor:pointer; font-weight:800; font-size:.85rem; color:#0b1022; background:linear-gradient(90deg, var(--accent), var(--accent-2)); box-shadow:0 8px 20px color-mix(in srgb, var(--accent-2) 28%, transparent); }
    #hween-{{ section.id }} .hween-devbtn:hover{ transform:translateY(-1px); }
  </style>

  <!-- Effects layers -->
  <div class="pulse" aria-hidden="true"></div>
  <div class="fog" aria-hidden="true"></div>
  <div class="pumpkins" id="pumpkins-{{ section.id }}" aria-hidden="true"></div>
  <div class="webs" id="webs-{{ section.id }}" aria-hidden="true"></div>
  <div class="leaves" id="leaves-{{ section.id }}" aria-hidden="true"></div>
  
  <!-- Animated Frankenstein Emojis -->
  {% if section.settings.show_frankensteins %}
    <div class="frankensteins" id="frankensteins-{{ section.id }}" aria-hidden="true">
      <div class="frankenstein frankenstein-1">🧟‍♂️</div>
      <div class="frankenstein frankenstein-2">🧟‍♂️</div>
      <div class="frankenstein frankenstein-3">🧟‍♂️</div>
    </div>
  {% endif %}

  <!-- Wind Effects -->
  {% if section.settings.show_wind %}
    <div class="wind-effects" id="wind-{{ section.id }}" aria-hidden="true">
      
      <!-- Floating Particles -->
      <div class="wind-particles">
        <div class="particle particle-1">💨</div>
        <div class="particle particle-2">🌪️</div>
        <div class="particle particle-3">💨</div>
        <div class="particle particle-4">🌪️</div>
        <div class="particle particle-5">💨</div>
        <div class="particle particle-6">🌪️</div>
      </div>
      
      <!-- Animated Black Cats -->
      {% if section.settings.show_cats %}
        <div class="halloween-cats">
          <div class="cat cat-1">🐈‍⬛</div>
          <div class="cat cat-2">🐈‍⬛</div>
          <div class="cat cat-3">🐈‍⬛</div>
          <div class="cat cat-4">🐈‍⬛</div>
        </div>
      {% endif %}
      
      <!-- Candy Corn -->
      {% if section.settings.show_candy %}
        <div class="candy-corn">
          <div class="candy candy-1">🍬</div>
          <div class="candy candy-2">🍬</div>
          <div class="candy candy-3">🍬</div>
          <div class="candy candy-4">🍬</div>
          <div class="candy candy-5">🍬</div>
        </div>
      {% endif %}
      
    </div>
  {% endif %}
  {% if section.settings.show_stars %}<div class="stars" aria-hidden="true"></div>{% endif %}
  <div class="shooting-stars" aria-hidden="true"></div>
  {% if section.settings.show_moon %}
    <div class="moon" id="moon-{{ section.id }}" aria-hidden="true">
      <!-- Enhanced Moon with Realistic Phases -->
      <div class="moon-container">
        <!-- Moon Surface -->
        <div class="moon-surface">
          <div class="moon-craters">
            <div class="crater crater-1"></div>
            <div class="crater crater-2"></div>
            <div class="crater crater-3"></div>
          </div>
          <div class="moon-face">
            <div class="moon-eye moon-eye-1"></div>
            <div class="moon-eye moon-eye-2"></div>
            <div class="moon-mouth"></div>
          </div>
        </div>
        
        <!-- Phase Shadow (changes based on moon phase) -->
        <div class="moon-phase-shadow"></div>
        
        <!-- Atmospheric Glow -->
        <div class="moon-atmosphere"></div>
        
        <!-- Moon Shine Effect -->
        <div class="moon-shine"></div>
      </div>
      
      <!-- Moon Phase Label -->
      <div class="moon-phase-label"></div>
    </div>
  {% endif %}
  <div class="bats" id="bats-{{ section.id }}" aria-hidden="true"></div>

  <!-- Lightning overlay -->
  <div class="lightning" id="lt-{{ section.id }}" aria-hidden="true" style="--lt: {{ section.settings.lightning_color }}; --amp: {{ section.settings.lightning_intensity }};"></div>

  {%- if request.design_mode -%}
    <button type="button" class="lt-test" id="lt-test-{{ section.id }}" aria-label="Flash test">⚡ Flash test</button>
  {%- endif -%}

  {% if section.settings.show_label %}<div class="hdr halloween-title">{{ section.settings.label }}</div>{% endif %}

  <!-- Internal actor container (swarm renders here) -->
  <div id="hween-root" aria-hidden="true"></div>

  <div class="row">
    <span class="emoji" aria-hidden="true">{{ section.settings.emoji_left }}</span>
    <span class="lead">{{ section.settings.headline }}</span>

    <span class="pill" data-part="days"><span class="val" id="d-{{ section.id }}">00</span><span class="lbl">Days</span></span>
    <span class="pill" data-part="hours"><span class="val" id="h-{{ section.id }}">00</span><span class="lbl">Hours</span></span>
    <span class="pill" data-part="mins"><span class="val" id="m-{{ section.id }}">00</span><span class="lbl">Mins</span></span>
    <span class="pill" data-part="secs"><span class="val" id="s-{{ section.id }}">00</span><span class="lbl">Secs</span></span>

    <span class="emoji" aria-hidden="true">{{ section.settings.emoji_right }}</span>
  </div>

  {% if section.settings.show_progress %}<div class="progress" aria-hidden="true"><span id="bar-{{ section.id }}"></span></div>{% endif %}
  {% if section.settings.cta_label and section.settings.cta_link != blank %}<a class="cta" href="{{ section.settings.cta_link }}">{{ section.settings.cta_label }}</a>{% endif %}

  <noscript style="display:block; margin-top:.5rem; color:var(--muted);">{{ section.settings.noscript_text }}</noscript>

  <script>
document.addEventListener('DOMContentLoaded', function(){
  /* ===== Respect Reduce Motion (toggleable in settings) ===== */
  const RESPECT_RM = {{ section.settings.respect_reduced_motion | json }};
  const shouldReduce = () =>
    RESPECT_RM && window.matchMedia('(prefers-reduced-motion: reduce)').matches;

  /* ===== Countdown (unchanged) ===== */
  var daysEl = document.getElementById('d-{{ section.id }}');
  var hoursEl = document.getElementById('h-{{ section.id }}');
  var minsEl  = document.getElementById('m-{{ section.id }}');
  var secsEl  = document.getElementById('s-{{ section.id }}');
  var barEl   = document.getElementById('bar-{{ section.id }}');
  var leadEl  = document.querySelector('#hween-{{ section.id }} .lead');
  var moonEl  = document.getElementById('moon-{{ section.id }}');
  var burstDone = false;

  var onDayHeadline = {{ section.settings.on_day_headline | json }};

  var tgtMonth = {{ section.settings.target_month | default: 10 | json }} - 1;
  var tgtDay   = {{ section.settings.target_day   | default: 31 | json }};
  var tgtHour  = {{ section.settings.target_hour  | default: 0  | json }};
  var now = new Date();
  var target = new Date(now.getFullYear(), tgtMonth, tgtDay, tgtHour, 0, 0);
  if (now.getTime() > target.getTime()) target = new Date(now.getFullYear()+1, tgtMonth, tgtDay, tgtHour, 0, 0);

  {% if section.settings.show_progress %}
    var startMonth = {{ section.settings.season_start_month | default: 8 | json }} - 1;
    var startDay   = {{ section.settings.season_start_day   | default: 1 | json }};
    var start = new Date(target.getFullYear() - (new Date().getTime() > target.getTime() ? 0 : 1), startMonth, startDay, 0, 0, 0);
    if (start.getTime() > target.getTime()) start = new Date(start.getFullYear()-1, startMonth, startDay, 0, 0, 0);
  {% endif %}

  function pad(n){ return n < 10 ? '0'+n : String(n); }

  function confetti(){
    if (shouldReduce()) return;
    var host = document.getElementById('hween-{{ section.id }}');
    var pieces = {{ section.settings.confetti_count | default: 30 | json }};
    var glyphsRaw = {{ section.settings.confetti_emojis | json }};
    var glyphs = Array.isArray(glyphsRaw) ? glyphsRaw : (function(){ try { return JSON.parse(glyphsRaw); } catch(_) { return ['🎃','🧟‍♂️','👻','🕸️','🦇','🍬']; } })();
    for (var i=0; i<pieces; i++){
      var span = document.createElement('span');
      span.textContent = glyphs[Math.floor(Math.random()*glyphs.length)];
      span.style.position='absolute'; span.style.left=Math.random()*100+'%'; span.style.top='-10%';
      span.style.fontSize=(14+Math.random()*18)+'px'; span.style.filter='drop-shadow(0 0 6px rgba(255,255,255,.5))';
      span.style.transition='transform 2.2s ease, opacity 2.2s ease';
      span.style.transform='translateY(0) rotate(0deg)';
      host.appendChild(span);
      requestAnimationFrame(function(el){
        el.style.transform='translateY(160%) translateX('+(Math.random()*100-50)+'px) rotate('+(Math.random()*360-180)+'deg)';
        el.style.opacity='0';
      }.bind(null, span));
      setTimeout(function(el){ el.remove(); }, 2400, span);
    }
  }

  function updateMoonPhase(){
    if (!{{ section.settings.show_moon | json }}) return;
    
    // Ensure moonEl exists, try to find it if not
    if (!moonEl) {
      moonEl = document.getElementById('moon-{{ section.id }}');
    }
    
    if (!moonEl) {
      console.warn('Moon element not found for section {{ section.id }}');
      return;
    }
    
    // Calculate realistic moon phase based on current date
    var now = new Date();
    var moonPhase = getMoonPhase(now);
    
    // Get moon elements
    var phaseShadow = moonEl.querySelector('.moon-phase-shadow');
    var phaseLabel = moonEl.querySelector('.moon-phase-label');
    
    if (phaseShadow && phaseLabel) {
      // Apply realistic moon phase shadow
      var shadowStyles = {
        'new': 'radial-gradient(circle at 50% 50%, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 100%)',
        'waxing-crescent': 'radial-gradient(circle at 25% 50%, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0.4) 40%, transparent 70%)',
        'first-quarter': 'linear-gradient(to right, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0.8) 50%, transparent 50%)',
        'waxing-gibbous': 'radial-gradient(circle at 75% 50%, transparent 0%, rgba(0,0,0,0.4) 30%, rgba(0,0,0,0.8) 100%)',
        'full': 'transparent',
        'waning-gibbous': 'radial-gradient(circle at 25% 50%, transparent 0%, rgba(0,0,0,0.4) 30%, rgba(0,0,0,0.8) 100%)',
        'last-quarter': 'linear-gradient(to left, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0.8) 50%, transparent 50%)',
        'waning-crescent': 'radial-gradient(circle at 75% 50%, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0.4) 40%, transparent 70%)'
      };
      
      phaseShadow.style.background = shadowStyles[moonPhase.name] || shadowStyles['full'];
      phaseLabel.textContent = moonPhase.name.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase());
      
      // Ensure moon is visible and properly positioned
      moonEl.style.display = 'block';
      moonEl.style.opacity = '1';
      moonEl.style.visibility = 'visible';
    }
  }
  
  // Calculate realistic moon phase based on date
  function getMoonPhase(date) {
    // Known new moon date (approximate)
    var knownNewMoon = new Date('2000-01-06T18:14:00Z');
    var lunarCycle = 29.53059; // days
    
    var daysSinceKnown = (date - knownNewMoon) / (1000 * 60 * 60 * 24);
    var currentAge = ((daysSinceKnown % lunarCycle) + lunarCycle) % lunarCycle;
    
    var phaseNames = ['new', 'waxing-crescent', 'first-quarter', 'waxing-gibbous', 'full', 'waning-gibbous', 'last-quarter', 'waning-crescent'];
    var phaseIndex = Math.floor((currentAge / lunarCycle) * 8);
    
    return {
      name: phaseNames[phaseIndex] || 'full',
      age: currentAge,
      illumination: Math.abs(Math.cos(2 * Math.PI * currentAge / lunarCycle))
    };
  }

  function tick(){
    var diff = target.getTime() - Date.now();
    if (diff <= 0) {
      if (leadEl && onDayHeadline) leadEl.textContent = onDayHeadline;
      daysEl.textContent='00'; hoursEl.textContent='00'; minsEl.textContent='00'; secsEl.textContent='00';
      {% if section.settings.burst_on_day %} if (!burstDone) { confetti(); burstDone = true; } {% endif %}
      {% if section.settings.show_progress %} if (barEl) barEl.style.width = '100%'; {% endif %}
      updateMoonPhase();
      return;
    }
    var days  = Math.floor(diff / (1000*60*60*24));
    var hours = Math.floor((diff % (1000*60*60*24)) / (1000*60*60));
    var mins  = Math.floor((diff % (1000*60*60)) / (1000*60));
    var secs  = Math.floor((diff % (1000*60)) / 1000);

    var hoursOnly = {{ section.settings.hours_only_under | default: 3 | json }};
    var pills = document.querySelectorAll('#hween-{{ section.id }} .pill');
    if (days < hoursOnly){
      pills.forEach(function(p){ var part=p.getAttribute('data-part'); p.style.display=(part==='days')?'none':'inline-flex'; });
    } else { pills.forEach(function(p){ p.style.display='inline-flex'; }); }

    daysEl.textContent=pad(days); hoursEl.textContent=pad(hours); minsEl.textContent=pad(mins); secsEl.textContent=pad(secs);

    {% if section.settings.show_progress %}
      var total = target.getTime() - start.getTime();
      var done  = Date.now() - start.getTime();
      var pct = Math.max(0, Math.min(100, (done/total)*100));
      if (barEl) barEl.style.width = pct + '%';
    {% endif %}
    updateMoonPhase();
  }
  // Initialize moon on page load
  function initializeMoon() {
    if ({{ section.settings.show_moon | json }} && moonEl) {
      // Ensure moon is visible initially
      moonEl.style.display = 'block';
      moonEl.style.opacity = '1';
      moonEl.style.visibility = 'visible';
      
      // Force initial moon phase update
      updateMoonPhase();
      
      console.log('Enhanced moon initialized for section {{ section.id }}');
    }
  }
  
  // Start the countdown and initialize moon
  tick(); 
  initializeMoon();
  setInterval(tick, 1000);

  function rand(min, max){ return Math.random() * (max - min) + min; }

  /* ===== Stars ===== */
  function initStars(){
    if (!{{ section.settings.show_stars | json }}) return;
    if (shouldReduce()) return;
    var host=document.querySelector('#hween-{{ section.id }} .stars'); if (!host) return;
    var COUNT={{ section.settings.stars_count | default: 20 | json }};
    host.innerHTML='';
    for (var i=0;i<COUNT;i++){
      var el=document.createElement('div'); el.className='star';
      var size=rand(1,3);
      el.style.width=size+'px'; el.style.height=size+'px';
      el.style.left=rand(5,95)+'%'; el.style.top=rand(5,60)+'%';
      el.style.setProperty('--twinkle-dur', rand(1.5,4)+'s');
      el.style.setProperty('--twinkle-delay', -rand(0,4)+'s');
      el.style.boxShadow='0 0 '+rand(2,6)+'px var(--text)';
      host.appendChild(el);
    }
  }

  /* ===== Shooting Stars ===== */
  function initShootingStars(){
    if (shouldReduce()) return;
    var host=document.querySelector('#hween-{{ section.id }} .shooting-stars');
    if (!host) return;
    
    function createShootingStar(){
      var star=document.createElement('div');
      star.className='shooting-star';
      
      var animations=['shoot1','shoot2','shoot3'];
      var anim=animations[Math.floor(Math.random()*animations.length)];
      var duration=rand(2,4)+'s';
      var delay=rand(0,8)+'s';
      
      star.style.animation=anim+' '+duration+' linear infinite';
      star.style.animationDelay=delay;
      star.style.left=rand(10,90)+'%';
      star.style.top=rand(10,80)+'%';
      
      host.appendChild(star);
      
      setTimeout(function(){
        if (star.parentNode) star.parentNode.removeChild(star);
      }, (parseFloat(duration)+parseFloat(delay))*1000);
    }
    
    // Create initial shooting stars
    for (var i=0;i<3;i++){
      setTimeout(createShootingStar, i*2000);
    }
    
    // Continue creating shooting stars
    setInterval(createShootingStar, rand(8000,15000));
  }

  /* ===== Lightning ===== */
  function initLightning(){
    if (!{{ section.settings.show_lightning | json }}) return;
    if (shouldReduce()) return;

    var layer=document.getElementById('lt-{{ section.id }}'); if (!layer) return;

    var minGap=Math.max(6, {{ section.settings.lightning_min_gap | default: 16 | json }});
    var maxGap=Math.max(minGap+2, {{ section.settings.lightning_max_gap | default: 28 | json }});
    var maxAmp={{ section.settings.lightning_intensity | default: 85 | json }};

    var audio=null;
    {% if section.settings.thunder_url != blank %}
      try { audio=new Audio({{ section.settings.thunder_url | json }}); audio.preload='auto'; audio.volume=({{ section.settings.thunder_volume_pct | default: 35 | json }})/100.0; } catch(e){}
    {% endif %}

    function flash(){
      layer.style.setProperty('--amp', Math.floor(rand(60, maxAmp)));
      layer.classList.remove('flash'); void layer.offsetWidth; layer.classList.add('flash');
      if (audio){ setTimeout(function(){ try{ audio.currentTime=0; audio.play(); }catch(e){} }, Math.random()*120); }
      setTimeout(flash, (Math.random()*(maxGap-minGap)+minGap)*1000);
    }

    var testBtn=document.getElementById('lt-test-{{ section.id }}');
    if (testBtn) testBtn.addEventListener('click', function(e){ e.preventDefault(); flash(); });

    setTimeout(flash, 800);
  }

  /* ===== Legacy section-wide bats (optional) ===== */
  function initBats(){
    if (!{{ section.settings.show_bats | json }}) return;
    if (shouldReduce()) return;
    if ({{ section.settings.bats_only_at_night | json }}) {
      var hr = new Date().getHours(); if (!(hr >= 18 || hr <= 6)) return;
    }
    var host = document.getElementById('bats-{{ section.id }}'); if (!host) return;

    var COUNT={{ section.settings.bats_count | default: 8 | json }};
    var MIN_S={{ section.settings.bat_min_speed | default: 10 | json }};
    var MAX_S={{ section.settings.bat_max_speed | default: 18 | json }};
    var glyphs=['🦇','👻','🕷️'];

    host.innerHTML='';
    for (var i=0;i<COUNT;i++){
      var outer=document.createElement('span'); outer.className='bat';
      var inner=document.createElement('span'); inner.className='bat-i';
      inner.textContent=glyphs[Math.floor(rand(0,glyphs.length))];
      outer.appendChild(inner);

      var size=rand(14,28), top=rand(8,85), dir=Math.random()<.5?'left':'right';
      var flyDur=rand(MIN_S,MAX_S), bobDur=rand(.9,1.4), wiggleDur=rand(1.0,1.6);

      outer.style.fontSize=size+'px'; outer.style.top=top+'%';
      if(dir==='left'){ outer.style.right='-10%'; outer.style.animation='fly-left '+flyDur+'s linear infinite'; }
      else{ outer.style.left='-10%'; outer.style.animation='fly-right '+flyDur+'s linear infinite'; inner.style.transform='scaleX(-1)'; }
      outer.style.animationDelay=(-Math.random()*flyDur)+'s';

      inner.style.setProperty('--bob-dur', bobDur+'s');
      inner.style.setProperty('--wiggle-dur', wiggleDur+'s');
      inner.style.setProperty('--bob-delay', (-Math.random()*bobDur)+'s');
      inner.style.setProperty('--wiggle-delay', (-Math.random()*wiggleDur)+'s');

      host.appendChild(outer);
    }
  }

  /* ===== Swarm INSIDE the bar ===== */
  var _hweenCounts = window.hweenCounts || null;

  function initSwarm(){
    if (shouldReduce()) return;

    var root = document.querySelector('#hween-{{ section.id }} #hween-root');
    if (!root) return;

    var BATS   = Math.max(0, (_hweenCounts && _hweenCounts.bats   != null ? _hweenCounts.bats   : {{ section.settings.bats_count   | default: 10 | json }}));
    var GHOSTS = Math.max(0, (_hweenCounts && _hweenCounts.ghosts != null ? _hweenCounts.ghosts : {{ section.settings.ghosts_count | default: 10 | json }}));

    function spawn(type, glyph){
      var el = document.createElement('span');
      el.className = 'actor ' + type;
      el.textContent = glyph;

      var h = root.clientHeight || 80, pad = 6;
      var y = Math.max(pad, Math.min(h - pad, Math.random() * (h - pad * 2)));
      el.style.top = y + 'px';

      el.style.animationDuration = (6 + Math.random() * 6) + 's';

      root.appendChild(el);
      setTimeout(function(){ el.remove(); }, 15000);
    }

    for (var i = 0; i < BATS;   i++) spawn('bat',   '🦇');
    for (var j = 0; j < GHOSTS; j++) spawn('ghost', '👻');

    root._hweenTimers = [
      setInterval(function(){ spawn('bat',   '🦇'); }, 4000),
      setInterval(function(){ spawn('ghost', '👻'); }, 5000)
    ];
  }

  /* ===== GLIDE across the whole section (NEW) ===== */
  function initGlide(){
    if (shouldReduce()) return;
    const host = document.getElementById('bats-{{ section.id }}'); // reuse the wide layer
    if (!host) return;
    host.innerHTML = '';

    const BATS   = Math.max(0, (window.hweenCounts?.bats   ?? {{ section.settings.bats_count   | default: 10 | json }}));
    const GHOSTS = Math.max(0, (window.hweenCounts?.ghosts ?? {{ section.settings.ghosts_count | default: 10 | json }}));

    function addGlider(glyph){
      const outer = document.createElement('span');
      outer.className = 'glider';
      const inner = document.createElement('span');
      inner.className = 'glider-i';
      inner.textContent = glyph;
      outer.appendChild(inner);

      const size = rand(18, 30);
      const top = rand(6, 86);
      const dir = Math.random() < .5 ? 'left' : 'right';
      const flyDur = rand(10, 22);
      const bobDur = rand(.9, 1.5);
      const wiggleDur = rand(1.0, 1.7);

      outer.style.fontSize = size + 'px';
      outer.style.top = top + '%';
      if (dir === 'left') {
        outer.style.right = '-10%';
        outer.style.animation = `glide-left ${flyDur}s linear infinite`;
      } else {
        outer.style.left = '-10%';
        outer.style.animation = `glide-right ${flyDur}s linear infinite`;
        inner.style.transform = 'scaleX(-1)';
      }
      outer.style.animationDelay = (-Math.random() * flyDur) + 's';

      inner.style.setProperty('--bob-dur', bobDur + 's');
      inner.style.setProperty('--wiggle-dur', wiggleDur + 's');
      inner.style.setProperty('--bob-delay', (-Math.random()*bobDur) + 's');
      inner.style.setProperty('--wiggle-delay', (-Math.random()*wiggleDur) + 's');

      host.appendChild(outer);
    }

    for (let i=0;i<BATS;i++)   addGlider('🦇');
    for (let j=0;j<GHOSTS;j++) addGlider('👻');

    host._glideTimers = [
      setInterval(()=>addGlider('🦇'), 5000),
      setInterval(()=>addGlider('👻'), 6000)
    ];
  }

  /* ===== Helpers for switching modes ===== */
  function stopActors(){
    const swarmRoot = document.querySelector('#hween-{{ section.id }} #hween-root');
    if (swarmRoot?._hweenTimers){ swarmRoot._hweenTimers.forEach(clearInterval); swarmRoot._hweenTimers=[]; }
    swarmRoot?.querySelectorAll('.actor').forEach(n=>n.remove());

    const glideHost = document.getElementById('bats-{{ section.id }}');
    if (glideHost?._glideTimers){ glideHost._glideTimers.forEach(clearInterval); glideHost._glideTimers=[]; }
    if (glideHost) glideHost.innerHTML='';
  }

  function startActors(){
    stopActors();
    const mode = {{ section.settings.actor_mode | json }}; // "swarm" | "glide"
    if (mode === 'glide') initGlide(); else initSwarm();
  }

  /* ===== Dev tools & console API ===== */
  function flashLightning(){
    var el = document.getElementById('lt-{{ section.id }}') || document.querySelector('#hween-{{ section.id }} .lightning');
    if (!el) return console.warn('No lightning element found');
    el.classList.remove('flash'); void el.offsetWidth; el.classList.add('flash');
  }

  function resetSwarm(){
    var root = document.querySelector('#hween-{{ section.id }} #hween-root');
    if (!root) return;
    if (root._hweenTimers) { root._hweenTimers.forEach(clearInterval); root._hweenTimers = []; }
    root.querySelectorAll('.actor').forEach(function(n){ n.remove(); });
    console.log('[halloween] swarm reset');
  }

  function spawnMore(bats, ghosts){
    bats = (typeof bats==='number'? bats : 10);
    ghosts = (typeof ghosts==='number'? ghosts : 10);
    var root = document.querySelector('#hween-{{ section.id }} #hween-root');
    if (!root) return;
    function spawn(type, glyph){
      var el = document.createElement('span');
      el.className = 'actor ' + type;
      el.textContent = glyph;
      var h = root.clientHeight || 80, pad = 6;
      el.style.top = (Math.max(pad, Math.min(h - pad, Math.random()*(h - pad*2)))) + 'px';
      el.style.animationDuration = (6 + Math.random()*6) + 's';
      root.appendChild(el);
      setTimeout(function(){ el.remove(); }, 15000);
    }
    for (var i=0;i<bats;i++)   spawn('bat','🦇');
    for (var j=0;j<ghosts;j++) spawn('ghost','👻');
  }

  (function(){
    var qp = new URLSearchParams(location.search);
    if (qp.get('hween') !== '1' && localStorage.getItem('hweenDev') !== '1') return;
    var host = document.querySelector('#hween-{{ section.id }}'); if (!host) return;
    var btn = document.createElement('button');
    btn.className='hween-devbtn'; btn.type='button';
    btn.title='Dev tools: Flash / Reset / +5 bats +5 ghosts';
    btn.textContent='⚡ Flash / 🧹 Reset / ➕'; btn.style.display='inline-flex';
    btn.addEventListener('click', function(){
      if (!btn._step || btn._step===3) btn._step = 1; else btn._step++;
      if (btn._step===1) flashLightning();
      else if (btn._step===2) spawnMore(5,5);
      else { stopActors(); startActors(); }
    });
    host.appendChild(btn);
  })();

  /* ===== Floating Pumpkins ===== */
  function initPumpkins(){
    if (shouldReduce()) return;
    var host = document.getElementById('pumpkins-{{ section.id }}');
    if (!host) return;
    
    var count = 3;
    host.innerHTML = '';
    for (var i = 0; i < count; i++) {
      var el = document.createElement('div');
      el.className = 'pumpkin';
      el.textContent = '🎃';
      el.style.left = Math.random() * 100 + '%';
      el.style.top = Math.random() * 80 + '%';
      el.style.animationDelay = Math.random() * 12 + 's';
      host.appendChild(el);
    }
  }
  
  /* ===== Spider Webs ===== */
  function initWebs(){
    if (shouldReduce()) return;
    var host = document.getElementById('webs-{{ section.id }}');
    if (!host) return;
    
    var count = 2;
    host.innerHTML = '';
    for (var i = 0; i < count; i++) {
      var el = document.createElement('div');
      el.className = 'web';
      el.textContent = '🕸️';
      el.style.left = Math.random() * 100 + '%';
      el.style.top = Math.random() * 80 + '%';
      el.style.animationDelay = Math.random() * 8 + 's';
      host.appendChild(el);
    }
  }

  /* ===== Falling Leaves ===== */
  function initLeaves(){
    if (shouldReduce()) return;
    var host = document.getElementById('leaves-{{ section.id }}');
    if (!host) return;
    
    function createLeaf(){
      var el = document.createElement('div');
      el.className = 'leaf';
      el.textContent = '🍂';
      el.style.left = Math.random() * 100 + '%';
      el.style.animationDelay = Math.random() * 12 + 's';
      el.style.animationDuration = (8 + Math.random() * 8) + 's';
      host.appendChild(el);
      
      setTimeout(function(){
        if (el.parentNode) el.parentNode.removeChild(el);
      }, 16000);
    }
    
    // Create initial leaves
    for (var i = 0; i < 3; i++) {
      setTimeout(createLeaf, i * 2000);
    }
    
    // Continue creating leaves
    setInterval(createLeaf, rand(3000, 6000));
  }

  /* ===== Auto-run ===== */
  initStars();
  initShootingStars();
  initLightning();
  initPumpkins();
  initWebs();
  initLeaves();
  startActors();

  /* Console helpers */
  window.hween = {
    initStars, initLightning,
    initSwarm, // for manual testing
    initGlide, // for manual testing
    flash: flashLightning, reset: resetSwarm, spawn: spawnMore,
    setCounts(opts){
      _hweenCounts = {
        bats:   typeof opts?.bats   === 'number' ? opts.bats   : (_hweenCounts?.bats   ?? null),
        ghosts: typeof opts?.ghosts === 'number' ? opts.ghosts : (_hweenCounts?.ghosts ?? null),
      };
      window.hweenCounts = _hweenCounts;
      stopActors(); startActors();
      console.log('[halloween] counts set →', _hweenCounts);
    },
    start: startActors,
    setMode(mode){ localStorage.setItem('hweenModeOverride', mode); stopActors(); (mode==='glide'?initGlide():initSwarm()); }
  };

  console.log('[halloween] init complete → mode:', {{ section.settings.actor_mode | json }});
});
</script>

</section>

{% schema %}
{
  "name": "🎃 Countdown",
  "settings": [
    { "type": "checkbox", "id": "show_label", "label": "Show title", "default": true },
    { "type": "text", "id": "label", "label": "Title", "default": "Countdown to Halloween" },
    { "type": "text", "id": "headline", "label": "Headline", "default": "Spooky season in:" },
    { "type": "text", "id": "on_day_headline", "label": "Headline on/after the day", "default": "It's Halloween!" },

    { "type": "text", "id": "emoji_left", "label": "Left emoji", "default": "🧟‍♂️" },
    { "type": "text", "id": "emoji_right", "label": "Right emoji", "default": "👻" },

    { "type": "select", "id": "size", "label": "Size",
      "options": [ { "value": "sm", "label": "Small" }, { "value": "md", "label": "Medium" }, { "value": "lg", "label": "Large" } ],
      "default": "lg"
    },

    { "type": "color", "id": "bg_color", "label": "Background (base)", "default": "#1a0a0a" },
    { "type": "color", "id": "bg_color_2", "label": "Background (glow)", "default": "#2d0a0a" },
    { "type": "color", "id": "text_color", "label": "Text", "default": "#FFD700" },
    { "type": "color", "id": "muted_color", "label": "Muted label", "default": "#FF8C00" },
    { "type": "color", "id": "accent_color", "label": "Accent A (pumpkin)", "default": "#FF4500" },
    { "type": "color", "id": "accent2_color", "label": "Accent B (purple)", "default": "#8B008B" },
    { "type": "color", "id": "ring_color", "label": "Ring color", "default": "#FFD700" },

    { "type": "range", "id": "pad_y", "min": 8, "max": 64, "step": 2, "unit": "px", "label": "Padding Y", "default": 18 },
    { "type": "range", "id": "pad_x", "min": 8, "max": 64, "step": 2, "unit": "px", "label": "Padding X", "default": 18 },

    { "type": "checkbox", "id": "sticky", "label": "Stick to top (page)", "default": false },

    { "type": "header", "content": "Target date" },
    { "type": "number", "id": "target_month", "label": "Month (1-12)", "default": 10 },
    { "type": "number", "id": "target_day", "label": "Day (1-31)", "default": 31 },
    { "type": "number", "id": "target_hour", "label": "Hour (0-23)", "default": 0 },

    { "type": "header", "content": "Progress bar" },
    { "type": "checkbox", "id": "show_progress", "label": "Show progress bar", "default": true },
    { "type": "number", "id": "season_start_month", "label": "Season start month (1-12)", "default": 8 },
    { "type": "number", "id": "season_start_day", "label": "Season start day (1-31)", "default": 1 },

    { "type": "header", "content": "Behavior" },
    { "type": "number", "id": "hours_only_under", "label": "Show hours-only under (days)", "default": 3 },
    { "type": "checkbox", "id": "burst_on_day", "label": "Confetti burst on the day", "default": true },
    { "type": "checkbox", "id": "respect_reduced_motion", "label": "Respect 'Reduce Motion' preference", "default": true },
    { "type": "range", "id": "confetti_count", "label": "Confetti pieces", "min": 10, "max": 50, "step": 1, "default": 30 },
    { "type": "text", "id": "confetti_emojis", "label": "Confetti emojis (JSON array)", "default": "['🎃','🧟‍♂️','👻','🕸️','🦇','🍬']" },
    { "type": "select", "id": "actor_mode", "label": "Actor motion",
  "options": [
    { "value": "swarm", "label": "Swarm (inside the bar)" },
    { "value": "glide", "label": "Glide across the section" }
  ],
  "default": "swarm"
},


    { "type": "header", "content": "Animated bats" },
    { "type": "checkbox", "id": "show_bats", "label": "Show animated bats", "default": true },
    { "type": "checkbox", "id": "bats_only_at_night", "label": "Only show at night (6pm–6am)", "default": false },
    { "type": "range", "id": "bats_count", "label": "Number of bats", "min": 3, "max": 20, "step": 1, "default": 5 },
    { "type": "range", "id": "bat_min_speed", "label": "Min flight time (s)", "min": 6, "max": 20, "step": 1, "default": 10 },
    { "type": "range", "id": "bat_max_speed", "label": "Max flight time (s)", "min": 12, "max": 40, "step": 1, "default": 18 },

    { "type": "header", "content": "Ghosts" },
    { "type": "range", "id": "ghosts_count", "label": "Number of ghosts", "min": 3, "max": 30, "step": 1, "default": 6 },

    { "type": "header", "content": "Twinkling stars" },
    { "type": "checkbox", "id": "show_stars", "label": "Show twinkling stars", "default": true },
    { "type": "range", "id": "stars_count", "label": "Number of stars", "min": 5, "max": 50, "step": 1, "default": 20 },

    { "type": "header", "content": "Moon" },
    { "type": "checkbox", "id": "show_moon", "label": "Show moon with phases", "default": true },

    { "type": "header", "content": "Frankenstein Emojis" },
    { "type": "checkbox", "id": "show_frankensteins", "label": "Show animated Frankenstein emojis", "default": true },

    { "type": "header", "content": "Wind Effects" },
    { "type": "checkbox", "id": "show_wind", "label": "Show wind effects and particles", "default": true },
    { "type": "checkbox", "id": "show_cats", "label": "Show animated black cats", "default": true },
    { "type": "checkbox", "id": "show_candy", "label": "Show candy corn", "default": true },

    { "type": "header", "content": "Lightning flash" },
    { "type": "checkbox", "id": "show_lightning", "label": "Enable lightning flashes", "default": false },
    { "type": "checkbox", "id": "lightning_debug", "label": "Lightning debug (stronger)", "default": false },
    { "type": "range", "id": "lightning_min_gap", "label": "Min seconds between flashes", "min": 6, "max": 60, "step": 1, "default": 16 },
    { "type": "range", "id": "lightning_max_gap", "label": "Max seconds between flashes", "min": 8, "max": 90, "step": 1, "default": 28 },
    { "type": "color", "id": "lightning_color", "label": "Lightning tint", "default": "#FFD700" },
    { "type": "range", "id": "lightning_intensity", "label": "Lightning intensity (%)", "min": 30, "max": 100, "step": 5, "default": 85 },
    { "type": "text", "id": "thunder_url", "label": "Optional thunder sound URL (mp3/ogg)", "info": "Leave empty for no sound" },
    { "type": "range", "id": "thunder_volume_pct", "label": "Thunder volume (%)", "min": 0, "max": 100, "step": 5, "default": 35 },

    { "type": "header", "content": "CTA" },
    { "type": "text", "id": "cta_label", "label": "Button label", "default": "Shop Halloween" },
    { "type": "text", "id": "cta_link", "label": "Button link (path or URL)", "default": "/collections/halloween" },
    { "type": "text", "id": "noscript_text", "label": "No-JS fallback", "default": "10/31 at 12:00am (your local time)" }
  ],
  "presets": [{ "name": "🎃 Countdown" }]
}
{% endschema %}
