<header id="Header-{{ section.id }}" class="nt-header" role="banner">
  <div class="nt-header__wrap">
    <!-- Logo -->
    <div class="nt-header__logo">
      {% if section.settings.logo != blank %}
        <a href="{{ routes.root_url }}" class="nt-header__logo-link">
          <img src="{{ section.settings.logo | img_url: '200x' }}" alt="{{ shop.name }}" class="nt-header__logo-img">
        </a>
      {% else %}
        <a href="{{ routes.root_url }}" class="nt-header__logo-text">{{ section.settings.logo_text }}</a>
      {% endif %}
    </div>

    <!-- Navigation -->
    <nav class="nt-header__nav" aria-label="Main navigation">
      {% assign menu = section.settings.menu %}
      {% if menu != blank %}
        <ul class="nt-header__list">
          {% for link in menu.links %}
            <li><a href="{{ link.url }}" class="nt-header__link">{{ link.title }}</a></li>
          {% endfor %}
        </ul>
      {% else %}
        <!-- Fallback links if no menu chosen in settings -->
        <ul class="nt-header__list">
          <li><a href="/collections/all" class="nt-header__link">Shop</a></li>
          <li><a href="/pages/about" class="nt-header__link">About</a></li>
          <li><a href="/pages/contact" class="nt-header__link">Contact</a></li>
        </ul>
      {% endif %}
      
    </nav>

    <!-- Search Bar -->
    <div class="nt-header__search">
      <div class="search-container">
        <form action="{{ routes.search_url }}" method="get" class="search-form">
          <div class="search-input-wrapper">
            <input 
              type="search" 
              name="q" 
              placeholder="Search products..." 
              class="search-input"
              id="search-input"
              autocomplete="off"
              aria-label="Search products"
            >
            <button type="submit" class="search-submit" aria-label="Search">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                <path d="M21 21L16.514 16.506L21 21ZM19 10.5C19 15.194 15.194 19 10.5 19C5.806 19 2 15.194 2 10.5C2 5.806 5.806 2 10.5 2C15.194 2 19 5.806 19 10.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
          </div>
          <div class="search-suggestions" id="search-suggestions"></div>
        </form>
      </div>
    </div>

    <!-- Cart Button -->
    <div class="nt-header__cart">
      <a href="{{ routes.cart_url }}" class="nt-header__cart-link" aria-label="View cart">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="nt-header__cart-icon">
          <path d="M3 3H5L5.4 5M7 13H17L21 5H5.4M7 13L5.4 5M7 13L4.7 15.3C4.3 15.7 4.6 16.5 5.1 16.5H17M17 13V17C17 17.6 16.6 18 16 18H8C7.4 18 7 17.6 7 17V13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <span class="nt-header__cart-count" id="cart-count">{{ cart.item_count }}</span>
      </a>
    </div>
  </div>
</header>

<style>
  /* ===== Clean white header that matches the gap area ===== */
  #Header-{{ section.id }}{
    background: #f2f3f5 !important;
    position:relative;
    z-index:50;
    box-shadow: 0 2px 15px rgba(0,0,0,.08);
    border-bottom: 1px solid rgba(0,0,0,.06);
  }
  #Header-{{ section.id }} *{ box-sizing:border-box }
  #Header-{{ section.id }} .nt-header__wrap{
    display:flex; align-items:center; justify-content:space-between;
    padding:15px 20px;
    backdrop-filter:none !important; -webkit-backdrop-filter:none !important;
    gap: 20px;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  /* Cart Button Styling - Matches navigation buttons */
  #Header-{{ section.id }} .nt-header__cart {
    display: flex;
    align-items: center;
  }
  
  #Header-{{ section.id }} .nt-header__cart-link {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    padding: 12px 20px;
    border-radius: 25px;
    text-decoration: none;
    color: #0f172a !important;
    font-weight: 600;
    background: rgba(0,0,0,.05);
    border: 1px solid rgba(0,0,0,.1);
    transition: all 0.3s ease;
    min-width: 60px;
    height: 48px;
  }
  
  #Header-{{ section.id }} .nt-header__cart-link:hover {
    background: rgba(0,0,0,.08);
    color: #0f172a !important;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,.1);
    border-color: rgba(0,0,0,.15);
  }
  
  #Header-{{ section.id }} .nt-header__cart-icon {
    color: #0f172a;
    transition: all 0.3s ease;
  }
  
  #Header-{{ section.id }} .nt-header__cart-link:hover .nt-header__cart-icon {
    transform: scale(1.1);
  }
  
  #Header-{{ section.id }} .nt-header__cart-count {
    position: absolute;
    top: -8px;
    right: -8px;
    background: #dc2626;
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: 700;
    border: 2px solid #f2f3f5;
    min-width: 20px;
  }
  
  #Header-{{ section.id }} .nt-header__cart-count:empty {
    display: none;
  }

  /* Mobile header adjustments */
  @media (max-width: 768px) {
    #Header-{{ section.id }} .nt-header__wrap {
      justify-content: space-between;
      gap: 12px;
      padding: 12px 16px;
      flex-wrap: nowrap;
    }
    
    #Header-{{ section.id }} .nt-header__logo {
      margin-left: 0;
      flex-shrink: 0;
    }
    
    #Header-{{ section.id }} .nt-header__logo-img { 
      max-height: 60px; 
    }
    
    #Header-{{ section.id }} .nt-header__logo-text {
      font-size: 1.4rem;
    }
    
    #Header-{{ section.id }} .nt-header__nav {
      flex-shrink: 1;
      min-width: 0;
    }
    
    #Header-{{ section.id }} .nt-header__list {
      gap: 4px;
      flex-wrap: nowrap;
    }
    
    #Header-{{ section.id }} .nt-header__link {
      padding: 6px 8px;
      font-size: 12px;
      white-space: nowrap;
    }
    
    /* Mobile cart button adjustments */
    #Header-{{ section.id }} .nt-header__cart {
      flex-shrink: 0;
    }
    
    #Header-{{ section.id }} .nt-header__cart-link {
      padding: 6px 8px;
      min-width: 44px;
      height: 36px;
    }
    
    #Header-{{ section.id }} .nt-header__cart-icon {
      width: 18px;
      height: 18px;
    }
    
    #Header-{{ section.id }} .nt-header__cart-count {
      width: 16px;
      height: 16px;
      font-size: 10px;
      top: -4px;
      right: -4px;
    }
    
    #Header-{{ section.id }} .header-wishlist {
      margin-left: 12px;
    }
    
    #Header-{{ section.id }} .wishlist-toggle {
      width: 36px;
      height: 36px;
    }
  }
  #Header-{{ section.id }} .nt-header__logo-img{ max-height:80px; display:block }
  #Header-{{ section.id }} .nt-header__logo-text{
    font-weight:800; text-decoration:none;
    color:#0f172a !important; /* dark text on light background */
    font-size:1.8rem;
  }
  #Header-{{ section.id }} .nt-header__list{
    display:flex; gap:8px; list-style:none; margin:0; padding:0;
  }
  #Header-{{ section.id }} .nt-header__link{
    text-decoration:none; 
    color:#0f172a !important; 
    font-weight:600;
    padding: 12px 20px;
    border-radius: 25px;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    background: rgba(0,0,0,.05);
    border: 1px solid rgba(0,0,0,.1);
  }
  
  #Header-{{ section.id }} .nt-header__link:hover{
    background: rgba(0,0,0,.08);
    color: #0f172a !important;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,.1);
    border-color: rgba(0,0,0,.15);
  }
  
  /* Removed shine effect to clean up header */
  
  /* Header Wishlist Styling */
  #Header-{{ section.id }} .header-wishlist {
    margin-left: 20px;
  }
  
  #Header-{{ section.id }} .wishlist-toggle {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 44px;
    height: 44px;
    background: white;
    border: 2px solid #e5e7eb;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  #Header-{{ section.id }} .wishlist-toggle:hover {
    border-color: #dc2626;
    transform: scale(1.05);
    box-shadow: 0 4px 16px rgba(220, 38, 38, 0.2);
  }
  
  #Header-{{ section.id }} .wishlist-toggle.has-items {
    border-color: #dc2626;
    background: #fef2f2;
  }
  
  #Header-{{ section.id }} .wishlist-icon {
    color: #6b7280;
    transition: color 0.3s ease;
  }
  
  #Header-{{ section.id }} .wishlist-toggle:hover .wishlist-icon,
  #Header-{{ section.id }} .wishlist-toggle.has-items .wishlist-icon {
    color: #dc2626;
  }
  
  #Header-{{ section.id }} .wishlist-toggle.has-items .heart-outline {
    display: none;
  }
  
  #Header-{{ section.id }} .wishlist-toggle.has-items .heart-filled {
    display: block !important;
  }
  
  #Header-{{ section.id }} .wishlist-count {
    position: absolute;
    top: -8px;
    right: -8px;
    background: #dc2626;
    color: white;
    font-size: 12px;
    font-weight: 600;
    padding: 2px 6px;
    border-radius: 10px;
    min-width: 18px;
    text-align: center;
    opacity: 0;
    transform: scale(0);
    transition: all 0.3s ease;
  }
  
  #Header-{{ section.id }} .wishlist-count.visible {
    opacity: 1;
    transform: scale(1);
  }

  /* Enhanced Search Functionality */
  #Header-{{ section.id }} .nt-header__search {
    flex: 1;
    max-width: 400px;
    margin: 0 20px;
  }

  #Header-{{ section.id }} .search-container {
    position: relative;
    width: 100%;
  }

  #Header-{{ section.id }} .search-form {
    position: relative;
    width: 100%;
  }

  #Header-{{ section.id }} .search-input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.9);
    border: 2px solid rgba(0, 0, 0, 0.1);
    border-radius: 25px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }

  #Header-{{ section.id }} .search-input-wrapper:focus-within {
    border-color: #27e1c1;
    box-shadow: 0 0 0 3px rgba(39, 225, 193, 0.1);
    transform: translateY(-1px);
  }

  #Header-{{ section.id }} .search-input {
    flex: 1;
    padding: 12px 20px;
    border: none;
    background: transparent;
    font-size: 14px;
    color: #0f172a;
    outline: none;
    transition: all 0.3s ease;
  }

  #Header-{{ section.id }} .search-input::placeholder {
    color: #6b7280;
    transition: color 0.3s ease;
  }

  #Header-{{ section.id }} .search-input:focus::placeholder {
    color: #9ca3af;
  }

  #Header-{{ section.id }} .search-submit {
    padding: 12px 16px;
    background: linear-gradient(135deg, #27e1c1, #00d4aa);
    border: none;
    border-radius: 0 23px 23px 0;
    color: white;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #Header-{{ section.id }} .search-submit:hover {
    background: linear-gradient(135deg, #00d4aa, #27e1c1);
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(39, 225, 193, 0.3);
  }

  #Header-{{ section.id }} .search-submit:active {
    transform: scale(0.95);
  }

  /* Search Suggestions */
  #Header-{{ section.id }} .search-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border-radius: 12px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(0, 0, 0, 0.1);
    max-height: 300px;
    overflow-y: auto;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }

  #Header-{{ section.id }} .search-suggestions.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  #Header-{{ section.id }} .suggestion-item {
    padding: 12px 20px;
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 12px;
  }

  #Header-{{ section.id }} .suggestion-item:hover {
    background: rgba(39, 225, 193, 0.1);
    transform: translateX(4px);
  }

  #Header-{{ section.id }} .suggestion-item:last-child {
    border-bottom: none;
  }

  #Header-{{ section.id }} .suggestion-image {
    width: 40px;
    height: 40px;
    border-radius: 8px;
    object-fit: cover;
    border: 1px solid rgba(0, 0, 0, 0.1);
  }

  #Header-{{ section.id }} .suggestion-content {
    flex: 1;
  }

  #Header-{{ section.id }} .suggestion-title {
    font-size: 14px;
    font-weight: 600;
    color: #0f172a;
    margin: 0 0 4px 0;
  }

  #Header-{{ section.id }} .suggestion-price {
    font-size: 12px;
    color: #dc2626;
    font-weight: 600;
  }

  /* Enhanced Hover States for Navigation */
  #Header-{{ section.id }} .nt-header__link {
    position: relative;
    overflow: hidden;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  #Header-{{ section.id }} .nt-header__link::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(39, 225, 193, 0.2), transparent);
    transition: left 0.6s ease;
    z-index: 1;
  }

  #Header-{{ section.id }} .nt-header__link:hover::before {
    left: 100%;
  }

  #Header-{{ section.id }} .nt-header__link:hover {
    background: rgba(39, 225, 193, 0.1);
    border-color: rgba(39, 225, 193, 0.3);
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 8px 25px rgba(39, 225, 193, 0.2);
  }

  /* Enhanced Cart Button Hover */
  #Header-{{ section.id }} .nt-header__cart-link {
    position: relative;
    overflow: hidden;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  #Header-{{ section.id }} .nt-header__cart-link::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: left 0.6s ease;
    z-index: 1;
  }

  #Header-{{ section.id }} .nt-header__cart-link:hover::before {
    left: 100%;
  }

  #Header-{{ section.id }} .nt-header__cart-link:hover {
    background: rgba(39, 225, 193, 0.1);
    border-color: rgba(39, 225, 193, 0.3);
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 8px 25px rgba(39, 225, 193, 0.2);
  }

  /* Mobile Search Adjustments */
  @media (max-width: 768px) {
    #Header-{{ section.id }} .nt-header__search {
      order: 3;
      width: 100%;
      max-width: none;
      margin: 12px 0 0 0;
    }
    
    #Header-{{ section.id }} .search-input-wrapper {
      border-radius: 20px;
    }
    
    #Header-{{ section.id }} .search-input {
      padding: 10px 16px;
      font-size: 13px;
    }
    
    #Header-{{ section.id }} .search-submit {
      padding: 10px 14px;
      border-radius: 0 18px 18px 0;
    }
  }
</style>

<script>
// Update cart count dynamically
function updateCartCount() {
  fetch('/cart.js')
    .then(response => response.json())
    .then(cart => {
      const cartCountElement = document.getElementById('cart-count');
      if (cartCountElement) {
        cartCountElement.textContent = cart.item_count;
        
        // Hide count badge if cart is empty
        if (cart.item_count === 0) {
          cartCountElement.style.display = 'none';
        } else {
          cartCountElement.style.display = 'flex';
        }
      }
    })
    .catch(error => console.error('Error updating cart count:', error));
}

// Listen for cart updates
document.addEventListener('DOMContentLoaded', function() {
  // Update cart count on page load
  updateCartCount();
  
  // Listen for custom cart update events
  document.addEventListener('cart:updated', updateCartCount);
  
  // Listen for cart form submissions
  document.addEventListener('submit', function(e) {
    if (e.target.classList.contains('product-form') || 
        e.target.querySelector('input[name="add"]')) {
      setTimeout(updateCartCount, 1000); // Update after form submission
    }
  });
});

// Global function to trigger cart count update
window.updateCartCount = updateCartCount;

// Enhanced Search Functionality
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('search-input');
  const searchSuggestions = document.getElementById('search-suggestions');
  let searchTimeout;
  let currentSuggestions = [];

  if (searchInput && searchSuggestions) {
    // Search input event listener
    searchInput.addEventListener('input', function() {
      const query = this.value.trim();
      
      // Clear previous timeout
      clearTimeout(searchTimeout);
      
      if (query.length < 2) {
        hideSuggestions();
        return;
      }
      
      // Debounce search
      searchTimeout = setTimeout(() => {
        performSearch(query);
      }, 300);
    });

    // Hide suggestions when clicking outside
    document.addEventListener('click', function(e) {
      if (!e.target.closest('.search-container')) {
        hideSuggestions();
      }
    });

    // Handle suggestion clicks
    searchSuggestions.addEventListener('click', function(e) {
      const suggestionItem = e.target.closest('.suggestion-item');
      if (suggestionItem) {
        const productUrl = suggestionItem.dataset.url;
        if (productUrl) {
          window.location.href = productUrl;
        }
      }
    });

    // Handle keyboard navigation
    searchInput.addEventListener('keydown', function(e) {
      const suggestions = searchSuggestions.querySelectorAll('.suggestion-item');
      const activeSuggestion = searchSuggestions.querySelector('.suggestion-item.active');
      
      if (e.key === 'ArrowDown') {
        e.preventDefault();
        if (activeSuggestion) {
          activeSuggestion.classList.remove('active');
          const next = activeSuggestion.nextElementSibling;
          if (next) {
            next.classList.add('active');
          } else {
            suggestions[0]?.classList.add('active');
          }
        } else {
          suggestions[0]?.classList.add('active');
        }
      } else if (e.key === 'ArrowUp') {
        e.preventDefault();
        if (activeSuggestion) {
          activeSuggestion.classList.remove('active');
          const prev = activeSuggestion.previousElementSibling;
          if (prev) {
            prev.classList.add('active');
          } else {
            suggestions[suggestions.length - 1]?.classList.add('active');
          }
        } else {
          suggestions[suggestions.length - 1]?.classList.add('active');
        }
      } else if (e.key === 'Enter') {
        e.preventDefault();
        if (activeSuggestion) {
          const productUrl = activeSuggestion.dataset.url;
          if (productUrl) {
            window.location.href = productUrl;
          }
        } else {
          // Submit search form
          this.closest('form').submit();
        }
      } else if (e.key === 'Escape') {
        hideSuggestions();
        this.blur();
      }
    });

    // Perform search function
    async function performSearch(query) {
      try {
        const response = await fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product&resources[limit]=5`);
        const data = await response.json();
        
        if (data.resources && data.resources.results && data.resources.results.products) {
          const products = data.resources.results.products;
          displaySuggestions(products);
        } else {
          hideSuggestions();
        }
      } catch (error) {
        console.error('Search error:', error);
        hideSuggestions();
      }
    }

    // Display search suggestions
    function displaySuggestions(products) {
      if (products.length === 0) {
        hideSuggestions();
        return;
      }

      currentSuggestions = products;
      searchSuggestions.innerHTML = products.map(product => `
        <div class="suggestion-item" data-url="/products/${product.handle}">
          <img src="${product.featured_image || '/assets/no-image.png'}" alt="${product.title}" class="suggestion-image" loading="lazy">
          <div class="suggestion-content">
            <div class="suggestion-title">${product.title}</div>
            <div class="suggestion-price">${new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(product.price / 100)}</div>
          </div>
        </div>
      `).join('');

      searchSuggestions.classList.add('active');
    }

    // Hide suggestions
    function hideSuggestions() {
      searchSuggestions.classList.remove('active');
      searchSuggestions.innerHTML = '';
      currentSuggestions = [];
    }
  }
});
</script>

{% schema %}
{
  "name": "Header",
  "settings": [
    { 
      "type": "image_picker", 
      "id": "logo", 
      "label": "Upload Your Logo",
      "info": "Recommended size: 400px wide. PNG with transparent background works best."
    },
    { 
      "type": "text", 
      "id": "logo_text", 
      "label": "Logo text (fallback)", 
      "default": "New Thrifts",
      "info": "Used when no logo image is uploaded"
    },
    { "type": "link_list", "id": "menu", "label": "Main menu" }
  ]
}
{% endschema %}
