<!-- Wishlist Section -->
<div class="wishlist-container" id="wishlist-container">
  <!-- Wishlist Toggle Button (Heart Icon) -->
  <div class="wishlist-toggle" id="wishlist-toggle" aria-label="Toggle wishlist">
    <svg class="wishlist-icon" width="24" height="24" viewBox="0 0 24 24" fill="none">
      <path class="heart-outline" d="M20.84 4.61C20.32 4.09 19.69 3.69 19 3.44C18.31 3.19 17.58 3.09 16.85 3.15C16.12 3.21 15.42 3.42 14.78 3.78C14.14 4.14 13.58 4.64 13.14 5.25L12 6.75L10.86 5.25C10.42 4.64 9.86 4.14 9.22 3.78C8.58 3.42 7.88 3.21 7.15 3.15C6.42 3.09 5.69 3.19 5 3.44C4.31 3.69 3.68 4.09 3.16 4.61C2.11 5.66 1.5 7.13 1.5 8.66C1.5 10.19 2.11 11.66 3.16 12.71L12 21.55L20.84 12.71C21.89 11.66 22.5 10.19 22.5 8.66C22.5 7.13 21.89 5.66 20.84 4.61Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      <path class="heart-filled" d="M20.84 4.61C20.32 4.09 19.69 3.69 19 3.44C18.31 3.19 17.58 3.09 16.85 3.15C16.12 3.21 15.42 3.42 14.78 3.78C14.14 4.14 13.58 4.64 13.14 5.25L12 6.75L10.86 5.25C10.42 4.64 9.86 4.14 9.22 3.78C8.58 3.42 7.88 3.21 7.15 3.15C6.42 3.09 5.69 3.19 5 3.44C4.31 3.69 3.68 4.09 3.16 4.61C2.11 5.66 1.5 7.13 1.5 8.66C1.5 10.19 2.11 11.66 3.16 12.71L12 21.55L20.84 12.71C21.89 11.66 22.5 10.19 22.5 8.66C22.5 7.13 21.89 5.66 20.84 4.61Z" fill="currentColor" style="display: none;"/>
    </svg>
    <span class="wishlist-count" id="wishlist-count">0</span>
  </div>

  <!-- Wishlist Dropdown -->
  <div class="wishlist-dropdown" id="wishlist-dropdown">
    <div class="wishlist-header">
      <h3>My Wishlist</h3>
      <button class="wishlist-close" id="wishlist-close" aria-label="Close wishlist">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
          <path d="M15 5L5 15M5 5L15 15" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
        </svg>
      </button>
    </div>
    
    <div class="wishlist-content" id="wishlist-content">
      <div class="wishlist-empty" id="wishlist-empty">
        <div class="empty-heart">üíù</div>
        <h4>Your wishlist is empty</h4>
        <p>Save your favorite products to view them here</p>
      </div>
      
      <div class="wishlist-items" id="wishlist-items">
        <!-- Wishlist items will be populated by JavaScript -->
      </div>
    </div>
    
    <div class="wishlist-footer">
      <button class="wishlist-clear" id="wishlist-clear">Clear All</button>
      <button class="wishlist-share" id="wishlist-share">Share Wishlist</button>
    </div>
  </div>
</div>

<style>
  .wishlist-container {
    position: relative;
    display: inline-block;
  }

  .wishlist-toggle {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    background: white;
    border: 2px solid #e5e7eb;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .wishlist-toggle:hover {
    border-color: #dc2626;
    transform: scale(1.05);
    box-shadow: 0 4px 16px rgba(220, 38, 38, 0.2);
  }

  .wishlist-toggle.has-items {
    border-color: #dc2626;
    background: #fef2f2;
  }

  .wishlist-icon {
    color: #6b7280;
    transition: color 0.3s ease;
  }

  .wishlist-toggle:hover .wishlist-icon,
  .wishlist-toggle.has-items .wishlist-icon {
    color: #dc2626;
  }

  .wishlist-toggle.has-items .heart-outline {
    display: none;
  }

  .wishlist-toggle.has-items .heart-filled {
    display: block !important;
  }

  .wishlist-count {
    position: absolute;
    top: -8px;
    right: -8px;
    background: #dc2626;
    color: white;
    font-size: 12px;
    font-weight: 600;
    padding: 2px 6px;
    border-radius: 10px;
    min-width: 18px;
    text-align: center;
    opacity: 0;
    transform: scale(0);
    transition: all 0.3s ease;
  }

  .wishlist-count.visible {
    opacity: 1;
    transform: scale(1);
  }

  .wishlist-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    width: 400px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 12px 48px rgba(0, 0, 0, 0.15);
    border: 1px solid #e5e7eb;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    z-index: 1000;
    margin-top: 8px;
    max-height: 500px;
    overflow: hidden;
  }

  .wishlist-dropdown.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .wishlist-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px 24px;
    border-bottom: 1px solid #f3f4f6;
    background: #f9fafb;
    border-radius: 12px 12px 0 0;
  }

  .wishlist-header h3 {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
    color: #111827;
  }

  .wishlist-close {
    background: none;
    border: none;
    color: #6b7280;
    cursor: pointer;
    padding: 4px;
    border-radius: 4px;
    transition: all 0.2s ease;
  }

  .wishlist-close:hover {
    background: #e5e7eb;
    color: #374151;
  }

  .wishlist-content {
    max-height: 350px;
    overflow-y: auto;
  }

  .wishlist-empty {
    text-align: center;
    padding: 40px 20px;
    color: #6b7280;
  }

  .empty-heart {
    font-size: 48px;
    margin-bottom: 16px;
  }

  .wishlist-empty h4 {
    margin: 0 0 8px 0;
    color: #374151;
    font-size: 16px;
  }

  .wishlist-empty p {
    margin: 0;
    font-size: 14px;
  }

  .wishlist-items {
    padding: 16px;
  }

  .wishlist-item {
    display: flex;
    align-items: center;
    padding: 12px;
    border-radius: 8px;
    transition: background 0.2s ease;
    margin-bottom: 8px;
    position: relative;
  }

  .wishlist-item:hover {
    background: #f9fafb;
  }

  .wishlist-item:last-child {
    margin-bottom: 0;
  }

  .wishlist-item-image {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border-radius: 6px;
    margin-right: 12px;
  }

  .wishlist-item-info {
    flex: 1;
  }

  .wishlist-item-title {
    font-size: 14px;
    font-weight: 500;
    color: #111827;
    margin: 0 0 4px 0;
    line-height: 1.3;
  }

  .wishlist-item-price {
    font-size: 14px;
    color: #dc2626;
    font-weight: 600;
    margin: 0 0 4px 0;
  }

  .wishlist-item-availability {
    font-size: 12px;
    color: #6b7280;
  }

  .wishlist-item-availability.in-stock {
    color: #059669;
  }

  .wishlist-item-availability.out-of-stock {
    color: #dc2626;
  }

  .wishlist-item-actions {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .wishlist-add-to-cart {
    padding: 6px 12px;
    background: var(--color-accent);
    color: white;
    border: none;
    border-radius: 6px;
    font-size: 12px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .wishlist-add-to-cart:hover {
    background: var(--color-accent-2);
  }

  .wishlist-add-to-cart:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .wishlist-remove {
    background: none;
    border: none;
    color: #6b7280;
    cursor: pointer;
    padding: 4px;
    border-radius: 4px;
    transition: all 0.2s ease;
    font-size: 12px;
  }

  .wishlist-remove:hover {
    background: #fee2e2;
    color: #dc2626;
  }

  .wishlist-footer {
    display: flex;
    gap: 8px;
    padding: 16px 20px;
    border-top: 1px solid #f3f4f6;
    background: #f9fafb;
    border-radius: 0 0 12px 12px;
  }

  .wishlist-clear,
  .wishlist-share {
    flex: 1;
    padding: 8px 16px;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    background: white;
    color: #374151;
  }

  .wishlist-clear:hover {
    background: #fee2e2;
    border-color: #fca5a5;
    color: #dc2626;
  }

  .wishlist-share:hover {
    background: #eff6ff;
    border-color: #93c5fd;
    color: #2563eb;
  }

  /* Wishlist Heart Button for Product Cards */
  .wishlist-heart-btn {
    position: absolute;
    top: 12px;
    right: 12px;
    width: 36px;
    height: 36px;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(4px);
    border: none;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10;
  }

  .wishlist-heart-btn:hover {
    background: white;
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .wishlist-heart-btn.in-wishlist {
    background: #fef2f2;
    color: #dc2626;
  }

  .wishlist-heart-btn.in-wishlist .heart-outline {
    display: none;
  }

  .wishlist-heart-btn.in-wishlist .heart-filled {
    display: block !important;
  }

  .wishlist-heart-btn .wishlist-icon {
    width: 18px;
    height: 18px;
    color: #6b7280;
  }

  .wishlist-heart-btn.in-wishlist .wishlist-icon {
    color: #dc2626;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .wishlist-dropdown {
      width: 90vw;
      max-width: 350px;
      right: -50px;
    }

    .wishlist-header {
      padding: 16px 20px;
    }

    .wishlist-items {
      padding: 12px;
    }

    .wishlist-item {
      padding: 8px;
    }

    .wishlist-item-image {
      width: 50px;
      height: 50px;
    }

    .wishlist-footer {
      padding: 12px 16px;
    }
  }

  @media (max-width: 480px) {
    .wishlist-dropdown {
      right: -100px;
    }

    .wishlist-item-title {
      font-size: 13px;
    }

    .wishlist-item-price {
      font-size: 13px;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const wishlistToggle = document.getElementById('wishlist-toggle');
  const wishlistDropdown = document.getElementById('wishlist-dropdown');
  const wishlistClose = document.getElementById('wishlist-close');
  const wishlistCount = document.getElementById('wishlist-count');
  const wishlistEmpty = document.getElementById('wishlist-empty');
  const wishlistItems = document.getElementById('wishlist-items');
  const wishlistClear = document.getElementById('wishlist-clear');
  const wishlistShare = document.getElementById('wishlist-share');
  
  let wishlist = JSON.parse(localStorage.getItem('newthrifts_wishlist') || '[]');
  
  // Initialize wishlist
  function initWishlist() {
    updateWishlistUI();
    addWishlistButtons();
  }
  
  // Update wishlist UI
  function updateWishlistUI() {
    const count = wishlist.length;
    
    // Update count
    wishlistCount.textContent = count;
    if (count > 0) {
      wishlistCount.classList.add('visible');
      wishlistToggle.classList.add('has-items');
    } else {
      wishlistCount.classList.remove('visible');
      wishlistToggle.classList.remove('has-items');
    }
    
    // Update dropdown content
    if (count === 0) {
      wishlistEmpty.style.display = 'block';
      wishlistItems.style.display = 'none';
    } else {
      wishlistEmpty.style.display = 'none';
      wishlistItems.style.display = 'block';
      renderWishlistItems();
    }
  }
  
  // Render wishlist items
  function renderWishlistItems() {
    wishlistItems.innerHTML = wishlist.map(item => `
      <div class="wishlist-item" data-product-id="${item.id}">
        <img src="${item.image}" alt="${item.title}" class="wishlist-item-image" loading="lazy">
        <div class="wishlist-item-info">
          <h4 class="wishlist-item-title">${item.title}</h4>
          <div class="wishlist-item-price">${item.price}</div>
          <div class="wishlist-item-availability ${item.available ? 'in-stock' : 'out-of-stock'}">
            ${item.available ? 'In Stock' : 'Out of Stock'}
          </div>
        </div>
        <div class="wishlist-item-actions">
          <button class="wishlist-add-to-cart" data-variant-id="${item.variantId}" ${!item.available ? 'disabled' : ''}>
            ${item.available ? 'Add to Cart' : 'Sold Out'}
          </button>
          <button class="wishlist-remove" data-product-id="${item.id}">Remove</button>
        </div>
      </div>
    `).join('');
    
    // Add event listeners to new buttons
    wishlistItems.querySelectorAll('.wishlist-add-to-cart').forEach(btn => {
      btn.addEventListener('click', function() {
        const variantId = this.dataset.variantId;
        addToCartFromWishlist(variantId, this);
      });
    });
    
    wishlistItems.querySelectorAll('.wishlist-remove').forEach(btn => {
      btn.addEventListener('click', function() {
        const productId = this.dataset.productId;
        removeFromWishlist(productId);
      });
    });
  }
  
  // Add to wishlist
  function addToWishlist(productData) {
    // Check if already in wishlist
    if (wishlist.find(item => item.id === productData.id)) {
      return false;
    }
    
    wishlist.push(productData);
    localStorage.setItem('newthrifts_wishlist', JSON.stringify(wishlist));
    updateWishlistUI();
    updateWishlistButtons();
    
    // Show success message
    showWishlistMessage(`${productData.title} added to wishlist!`, 'success');
    return true;
  }
  
  // Remove from wishlist
  function removeFromWishlist(productId) {
    const index = wishlist.findIndex(item => item.id === productId);
    if (index > -1) {
      const removedItem = wishlist.splice(index, 1)[0];
      localStorage.setItem('newthrifts_wishlist', JSON.stringify(wishlist));
      updateWishlistUI();
      updateWishlistButtons();
      
      // Show success message
      showWishlistMessage(`${removedItem.title} removed from wishlist!`, 'info');
    }
  }
  
  // Clear wishlist
  function clearWishlist() {
    if (wishlist.length === 0) return;
    
    if (confirm('Are you sure you want to clear your entire wishlist?')) {
      wishlist = [];
      localStorage.setItem('newthrifts_wishlist', JSON.stringify(wishlist));
      updateWishlistUI();
      updateWishlistButtons();
      showWishlistMessage('Wishlist cleared!', 'info');
    }
  }
  
  // Add to cart from wishlist
  async function addToCartFromWishlist(variantId, button) {
    const originalText = button.textContent;
    
    try {
      button.textContent = 'Adding...';
      button.disabled = true;
      
      const response = await fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          id: variantId,
          quantity: 1
        })
      });
      
      if (response.ok) {
        button.textContent = '‚úì Added!';
        
        // Update cart count if exists
        if (window.updateCartCount) {
          window.updateCartCount();
        }
        
        setTimeout(() => {
          button.textContent = originalText;
          button.disabled = false;
        }, 2000);
        
      } else {
        throw new Error('Failed to add to cart');
      }
      
    } catch (error) {
      console.error('Add to cart error:', error);
      button.textContent = 'Error';
      
      setTimeout(() => {
        button.textContent = originalText;
        button.disabled = false;
      }, 2000);
    }
  }
  
  // Show wishlist message
  function showWishlistMessage(message, type = 'info') {
    // Create message element
    const messageEl = document.createElement('div');
    messageEl.className = `wishlist-message wishlist-message-${type}`;
    messageEl.textContent = message;
    
    // Style the message
    Object.assign(messageEl.style, {
      position: 'fixed',
      top: '20px',
      right: '20px',
      background: type === 'success' ? '#10b981' : '#6b7280',
      color: 'white',
      padding: '12px 20px',
      borderRadius: '8px',
      fontSize: '14px',
      fontWeight: '500',
      zIndex: '10000',
      boxShadow: '0 4px 16px rgba(0, 0, 0, 0.15)',
      transform: 'translateX(100%)',
      transition: 'transform 0.3s ease'
    });
    
    document.body.appendChild(messageEl);
    
    // Animate in
    setTimeout(() => {
      messageEl.style.transform = 'translateX(0)';
    }, 100);
    
    // Remove after delay
    setTimeout(() => {
      messageEl.style.transform = 'translateX(100%)';
      setTimeout(() => {
        document.body.removeChild(messageEl);
      }, 300);
    }, 3000);
  }
  
  // Automatic wishlist button generation disabled to prevent conflicts
  // Wishlist buttons are now manually added in collection sections
  
  // Update wishlist buttons
  function updateWishlistButtons() {
    const wishlistButtons = document.querySelectorAll('.wishlist-heart-btn');
    
    wishlistButtons.forEach(btn => {
      const card = btn.closest('[data-product-id]');
      if (card) {
        const productId = card.dataset.productId;
        const isInWishlist = wishlist.find(item => item.id === productId);
        
        if (isInWishlist) {
          btn.classList.add('in-wishlist');
        } else {
          btn.classList.remove('in-wishlist');
        }
      }
    });
  }
  
  // Format price
  function formatPrice(price) {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD'
    }).format(price / 100);
  }
  
  // Share wishlist
  function shareWishlist() {
    if (wishlist.length === 0) {
      showWishlistMessage('Your wishlist is empty!', 'info');
      return;
    }
    
    const wishlistText = `Check out my wishlist from New Thrifts:\n\n${wishlist.map(item => `‚Ä¢ ${item.title} - ${item.price}`).join('\n')}`;
    
    if (navigator.share) {
      navigator.share({
        title: 'My New Thrifts Wishlist',
        text: wishlistText,
        url: window.location.origin
      });
    } else {
      // Fallback: copy to clipboard
      navigator.clipboard.writeText(wishlistText).then(() => {
        showWishlistMessage('Wishlist copied to clipboard!', 'success');
      }).catch(() => {
        showWishlistMessage('Unable to share wishlist', 'error');
      });
    }
  }
  
  // Event listeners
  wishlistToggle.addEventListener('click', function() {
    wishlistDropdown.classList.toggle('active');
  });
  
  wishlistClose.addEventListener('click', function() {
    wishlistDropdown.classList.remove('active');
  });
  
  wishlistClear.addEventListener('click', clearWishlist);
  wishlistShare.addEventListener('click', shareWishlist);
  
  // Close dropdown when clicking outside
  document.addEventListener('click', function(e) {
    if (!e.target.closest('.wishlist-container')) {
      wishlistDropdown.classList.remove('active');
    }
  });
  
  // Initialize wishlist without automatic button generation
  updateWishlistUI();
  
  // Make functions globally available
  window.addToWishlist = addToWishlist;
  window.removeFromWishlist = removeFromWishlist;
});
</script>

{% schema %}
{
  "name": "Wishlist",
  "settings": [],
  "presets": [
    {
      "name": "Wishlist"
    }
  ]
}
{% endschema %}
