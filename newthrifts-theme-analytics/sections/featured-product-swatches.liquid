{% comment %}
Featured Product (with swatches) â€” use on any page (Home)
- Uses product picker (section.settings.fp_product)
- Reuses your swatch snippet + swatch.js behavior
- Fully valid add-to-cart form (passes the picked product to the form)
{% endcomment %}

{% liquid
  assign picked = section.settings.fp_product
%}

<section id="fpw-{{ section.id }}" class="container" style="padding:28px 0;">
  {% if picked == blank %}
    <div class="card">
      <h3 style="margin:0 0 8px 0;">Pick a product</h3>
      <p style="opacity:.85;">Open the section settings and choose a product to feature here.</p>
    </div>
  {% else %}
    <div class="grid grid--2">
      <div>
        {% if picked.featured_image %}
          <img id="MainProductImage-{{ section.id }}"
               src="{{ picked.featured_image | image_url: width: 1200 }}"
               alt="{{ picked.title | escape }}"
               style="width:100%; border-radius: var(--radius-xl); border:1px solid rgba(0,0,0,.08);">
        {% endif %}
      </div>

      <div class="card">
        <h2 style="margin-top:0; font-family:'Bebas Neue', sans-serif; font-size:38px;">{{ picked.title }}</h2>

        <div class="product__price" data-product-price style="font-size:1.05rem; margin:8px 0 16px 0;">
          {{ picked.selected_or_first_available_variant.price | money }}
        </div>

        <div class="product__description" style="opacity:.9; margin-bottom:16px;">
          {{ picked.description | strip_html | truncate: 300 }}
        </div>

        {% assign product_form_id = 'fpw-form-' | append: section.id %}

        {% form 'product', picked, id: product_form_id, action: routes.cart_add_url %}
          {%- comment -%} swatches for Color {%- endcomment -%}
          {% render 'swatch', product: picked, option_name: 'Color', section_id: section.id %}

          {%- unless picked.has_only_default_variant -%}
            {%- for option in picked.options_with_values -%}
              <label for="FPWOption{{ forloop.index }}-{{ section.id }}" class="vp-legend" style="font-weight:700; display:block; margin:10px 0 6px;">
                {{ option.name }}
              </label>

              {%- assign opt_lc = option.name | downcase -%}
              <select
                id="FPWOption{{ forloop.index }}-{{ section.id }}"
                class="single-option-selector nice-select{% if opt_lc == 'color' %} is-color{% endif %}"
                data-index="option{{ forloop.index }}">
                {%- for value in option.values -%}
                  <option value="{{ value | escape }}" {% if option.selected_value == value %}selected{% endif %}>{{ value }}</option>
                {%- endfor -%}
              </select>
            {%- endfor -%}
          {%- endunless -%}

          <!-- Hidden variant id Shopify reads on submit -->
          <input type="hidden"
                 name="id"
                 id="FPWVariantId-{{ section.id }}"
                 value="{{ picked.selected_or_first_available_variant.id }}">

          <button class="button button--primary btn-glow" type="submit"
            {% unless picked.selected_or_first_available_variant.available %}disabled{% endunless %}>
            {% if picked.selected_or_first_available_variant.available %}Add to cart{% else %}Sold out{% endif %}
          </button>
        {% endform %}

        <script>
        (function(){
          var form       = document.getElementById('{{ product_form_id }}');
          if(!form) return;

          var productData = {{ picked | json }};
          var selectors   = form.querySelectorAll('.single-option-selector');
          var idInput     = document.getElementById('FPWVariantId-{{ section.id }}');
          var priceEl     = form.closest('.card').querySelector('[data-product-price]');
          var submitBtn   = form.querySelector('button[type="submit"]');

          function syncVariant(){
            if(!selectors.length) return; // single-variant products
            var chosen  = Array.from(selectors).map(function(s){ return s.value; }).join(' / ');
            var variant = productData.variants.find(function(v){ return v.options.join(' / ') === chosen; });

            if(variant){
              idInput.value = String(variant.id);

              if(priceEl){
                try {
                  priceEl.textContent = (variant.price/100).toLocaleString(undefined, {style:'currency',currency:'{{ shop.currency }}'});
                } catch(e) { priceEl.textContent = (variant.price/100).toFixed(2); }
              }
              if(submitBtn){
                submitBtn.disabled = !variant.available;
                submitBtn.textContent = variant.available ? 'Add to cart' : 'Sold out';
              }

              var url = new URL(window.location.href);
              url.searchParams.set('variant', variant.id);
              history.replaceState({}, '', url);
            }
          }

          selectors.forEach(function(s){ s.addEventListener('change', syncVariant); });
        })();
        </script>
      </div>
    </div>
  {% endif %}
</section>

<style>
  /* Hide ONLY the Color select here as well (JS adds .swatch-ready on <html>) */
  html.swatch-ready .single-option-selector.is-color {
    position: absolute !important;
    width: 1px; height: 1px;
    padding: 0; margin: 0;
    overflow: hidden; clip: rect(0 0 0 0);
    white-space: nowrap; clip-path: inset(50%);
    border: 0;
  }
</style>

{% schema %}
{
  "name": "Featured with swatches",
  "settings": [
    { "type": "product", "id": "fp_product", "label": "Product to feature" }
  ],
  "presets": [{ "name": "Featured product (with swatches)" }]
}
{% endschema %}
