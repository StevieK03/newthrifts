<!doctype html>
<html lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover">
    <title>{% if page_title %}{{ page_title }} ‚Äì {% endif %}{{ shop.name }}</title>

    {%- comment -%} Use Primary accent for browser UI color (falls back if not set) {%- endcomment -%}
    <meta name="theme-color" content="{{ settings.accent | default: '#27e1c1' }}">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Inter:wght@300;400;500;600;700;800&family=Playfair+Display:wght@400;500;600;700&family=Space+Grotesk:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    {{ 'base.css' | asset_url | stylesheet_tag }}

    {%- comment -%} ‚úÖ Halloween styles (global include) {%- endcomment -%}
    {{ 'halloween.css' | asset_url | stylesheet_tag }}

    {%- comment -%}
      Moved the ‚Äúforce-brand-teal‚Äù block into <head> (valid HTML)
    {%- endcomment -%}
     <style id="force-brand-teal">
      :root{ --brand-teal: rgb(0, 0, 0); } /* your teal */

      /* Higher specificity + !important so it beats any earlier .brand-line rules */
      html body header.header .brand-title .brand-line{
        color: var(--brand-teal) !important;

      /* Make sure pills stay red-glow too (even if --accent is pink) */
      html body header.header .nav a{
        box-shadow: 0 4px 14px rgba(241, 20, 31, 0.18), 0 0 10px rgba(242, 10, 2, 0.94) !important;
        border: 1px solid rgba(246, 5, 5, 0.25) !important;
      }
      html body header.header .nav a:hover{
        background: rgba(39,225,193,.10) !important;
        border-color: rgba(39,225,193,.45) !important;
        box-shadow: 0 8px 20px rgba(39,225,193,.28), 0 0 18px rgba(39,225,193,.35) !important;
      }
    </style>

    {%- comment -%} Theme variables + header/nav styling {%- endcomment -%}
    <style>
      :root{
        --bg-deep: {{ settings.bg_deep | default: '#0B1220' }};
        --bg-mid: {{ settings.bg_mid | default: '#1A1031' }};
        --neon-teal: {{ settings.neon_teal | default: '#00F5D4' }};
        --neon-pink: {{ settings.neon_pink | default: '#FFFFFF' }};
        --neon-purple: {{ settings.neon_purple | default: '#9D4EDD' }};
        --accent: {{ settings.accent | default: '#27e1c1' }};
        --accent-2: {{ settings.accent_2 | default: '#ff4fa3' }};
      }

      /* ===== HEADER: force white + neon brand + pill nav ===== */
      body > header.header,
      .header{
        background:#fff !important;
        color:#0f172a;
        border-bottom:1px solid rgba(0,0,0,.06);
        position:relative; z-index:50;
      }
      .header::before, .header::after{ background:transparent !important; }

      .header__inner{ display:flex; align-items:center; justify-content:space-between; padding:14px 20px; }

      /* Logo image styling */
      .brand-logo-link{ display:flex; align-items:center; justify-content:center; text-decoration:none; margin:0; }
      .brand-logo-img{ 
        max-height:50px; 
        width:auto; 
        display:block;
        transition: transform 0.3s ease;
      }
      .brand-logo-img:hover{ transform:scale(1.05); }
      @media (min-width:768px){ .brand-logo-img{ max-height:60px; } }

      /* Fallback text brand (teal + glow) */
      .brand-title{ display:flex; flex-direction:column; align-items:center; justify-content:center; text-decoration:none; margin:0; }
      .brand-line{
        font-family:'Bebas Neue', sans-serif; line-height:0.95; letter-spacing:.08em; text-align:center;
        color: var(--accent,rgba(39,225,193,.70)) !important;
        text-shadow:
          0 0 6px rgba(39,225,193,.70),
          0 0 14px rgba(39,225,193,.50),
          0 0 24px rgba(39,225,193,.35);
        font-size:26px;
      }
      @media (min-width:768px){ .brand-line{ font-size:32px; } }

      /* Menu layout: horizontal, no bullets */
      .nav{ display:flex; align-items:center; }
      .nav .menu, .nav ul{
        display:flex !important; flex-wrap:wrap; gap:10px; align-items:center;
        margin:0 !important; padding:0 !important; list-style:none !important;
      }
      .nav li{ list-style:none !important; }

      /* Pill links + black glow */
.nav .menu a,
.nav ul a,
.nav a {
  display:inline-flex; align-items:center; justify-content:center;
  padding:9px 16px; border-radius:9999px; text-decoration:none;
  background:#fff; color:#0f172a; font-weight:700; letter-spacing:.01em;
  border:1px solid rgba(0,0,0,.10);
  /* changed teal glow to black glow */
  box-shadow: 0 4px 14px rgba(0,0,0,.18), 0 0 10px rgba(0,0,0,.22);
  transition:transform .15s ease, box-shadow .22s ease, background .22s ease, border-color .22s ease;
}
.nav .menu a:hover,
.nav ul a:hover,
.nav a:hover {
  /* changed hover teal to black */
  background: rgba(0,0,0,.05); /* subtle black tint on hover */
  border-color: rgba(0,0,0,.45);
  transform: translateY(-1px);
  box-shadow: 0 8px 20px rgba(0,0,0,.28), 0 0 18px rgba(0,0,0,.35);
}

    </style>

    <script>document.documentElement.classList.add('no-js');</script>
    {{ content_for_header }}
  </head>

  <body>
    {% section 'header' %}

    <!-- Quick View Modal (Global) -->
    <div class="quick-view-modal" id="quick-view-modal" role="dialog" aria-hidden="true">
      <div class="quick-view-overlay" id="quick-view-overlay"></div>
      <div class="quick-view-container">
        <div class="quick-view-header">
          <h2 id="quick-view-title">Quick View</h2>
          <button class="quick-view-close" id="quick-view-close" aria-label="Close">√ó</button>
        </div>
        <div class="quick-view-content" id="quick-view-content">
          <div class="quick-view-loading">Loading...</div>
        </div>
      </div>
    </div>

    <!-- Wishlist Dropdown (Global) -->
    <div class="wishlist-dropdown" id="wishlist-dropdown">
      <div class="wishlist-header">
        <h3>My Wishlist</h3>
        <button class="wishlist-close" id="wishlist-close" aria-label="Close wishlist">√ó</button>
      </div>
      
      <div class="wishlist-content" id="wishlist-content">
        <div class="wishlist-empty" id="wishlist-empty">
          <div class="empty-heart">üíù</div>
          <h4>Your wishlist is empty</h4>
          <p>Save your favorite products to view them here</p>
        </div>
        
        <div class="wishlist-items" id="wishlist-items">
          <!-- Wishlist items will be populated by JavaScript -->
        </div>
      </div>
      
      <div class="wishlist-footer">
        <button class="wishlist-clear" id="wishlist-clear">Clear All</button>
        <button class="wishlist-share" id="wishlist-share">Share Wishlist</button>
      </div>
    </div>

    <main role="main">
      {{ content_for_layout }}
    </main>

    <footer class="footer">
      <div class="container grid grid--3">
        <div>
          <h4 style="margin:0 0 10px 0;">About</h4>
          <p style="opacity:.85;">{{ settings.footer_about | default: "Sunset palettes, neon nights, and beach-breeze basics." }}</p>
        </div>
        <div>
          <h4 style="margin:0 0 10px 0;">Links</h4>
          {% render 'menu', menu: settings.footer_menu %}
        </div>
        <div>
          <h4 style="margin:0 0 10px 0;">Newsletter</h4>
          {% form 'customer' %}
            <input type="email" name="contact[email]" placeholder="Your email" style="padding:12px; border-radius:12px; border:1px solid rgba(0,0,0,.2); background:#fff; color:#0f172a; width:100%; margin-bottom:10px;" required>
            <button class="button button--primary" type="submit">Subscribe</button>
          {% endform %}
        </div>
      </div>
      <div class="container" style="margin-top:20px;">
        <small>¬© {{ 'now' | date: '%Y' }} {{ shop.name }}. All rights reserved.</small>
      </div>
    </footer>

    <!-- Mobile Navigation -->

    {%- comment -%} ‚úÖ Halloween script (global include, non-module) {%- endcomment -%}
    {{ 'halloween.js' | asset_url | script_tag }}

    <!-- Global Interactive Elements -->
    <div id="cursor-trail"></div>
    <div id="floating-particles"></div>
    
    <script src="{{ 'theme.js' | asset_url }}" defer></script>
    <script src="{{ 'swatch.js' | asset_url }}" defer></script>
    <script src="{{ 'visitor-counter.js' | asset_url }}" defer></script>
    
    <!-- Enhanced Homepage Features -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Custom Cursor Trail Effect
      const cursorTrail = document.getElementById('cursor-trail');
      let mouseX = 0, mouseY = 0;
      let trailX = 0, trailY = 0;
      
      document.addEventListener('mousemove', function(e) {
        mouseX = e.clientX;
        mouseY = e.clientY;
      });
      
      function animateTrail() {
        trailX += (mouseX - trailX) * 0.1;
        trailY += (mouseY - trailY) * 0.1;
        
        cursorTrail.style.left = trailX + 'px';
        cursorTrail.style.top = trailY + 'px';
        
        requestAnimationFrame(animateTrail);
      }
      animateTrail();
      
      // Floating Particles System
      const particlesContainer = document.getElementById('floating-particles');
      const particleCount = 10;
      
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.className = 'floating-particle';
        particle.style.position = 'fixed';
        particle.style.width = Math.random() * 4 + 2 + 'px';
        particle.style.height = particle.style.width;
        particle.style.background = Math.random() > 0.5 ? 'rgba(0,0,0,0.1)' : 'rgba(0,0,0,0.05)';
        particle.style.borderRadius = '50%';
        particle.style.left = Math.random() * 100 + '%';
        particle.style.top = Math.random() * 100 + '%';
        particle.style.pointerEvents = 'none';
        particle.style.zIndex = '1';
        particle.style.animation = `particleFloat ${Math.random() * 20 + 10}s linear infinite`;
        particle.style.animationDelay = Math.random() * 10 + 's';
        particlesContainer.appendChild(particle);
      }
      
      // Parallax Scrolling Effect
      const parallaxElements = document.querySelectorAll('[data-parallax]');
      
      function updateParallax() {
        const scrolled = window.pageYOffset;
        const rate = scrolled * -0.5;
        
        parallaxElements.forEach(element => {
          const speed = element.dataset.parallax || 0.5;
          element.style.transform = `translateY(${scrolled * speed}px)`;
        });
      }
      
      window.addEventListener('scroll', updateParallax);
      
      // Smooth Scroll for Anchor Links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });
      
      // Intersection Observer for Fade-in Animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-in');
          }
        });
      }, observerOptions);
      
      // Observe all sections for animations
      document.querySelectorAll('section').forEach(section => {
        section.classList.add('fade-in-section');
        observer.observe(section);
      });
    });
    </script>
    
    <style>
    /* Global Interactive Styles */
    #cursor-trail {
      position: fixed;
      width: 12px;
      height: 12px;
      background: radial-gradient(circle, rgba(0,0,0,0.1), transparent);
      border-radius: 50%;
      pointer-events: none;
      z-index: 9999;
      transition: opacity 0.3s ease;
    }
    
    #floating-particles {
      position: fixed;
      inset: 0;
      pointer-events: none;
      z-index: 1;
    }
    
    @keyframes particleFloat {
      0% { transform: translateY(100vh) rotate(0deg); opacity: 0; }
      10% { opacity: 1; }
      90% { opacity: 1; }
      100% { transform: translateY(-100px) rotate(360deg); opacity: 0; }
    }
    
    /* Fade-in Section Animations */
    .fade-in-section {
      opacity: 0;
      transform: translateY(30px);
      transition: all 0.6s ease;
    }
    
    .fade-in-section.animate-in {
      opacity: 1;
      transform: translateY(0);
    }
    
    /* Enhanced Scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
    }
    
    ::-webkit-scrollbar-track {
      background: #0f172a;
    }
    
    ::-webkit-scrollbar-thumb {
      background: linear-gradient(45deg, #27e1c1, #ff4fa3);
      border-radius: 4px;
    }
    
    ::-webkit-scrollbar-thumb:hover {
      background: linear-gradient(45deg, #ff4fa3, #27e1c1);
    }
    
    /* Smooth scrolling */
    html {
      scroll-behavior: smooth;
    }
    
    /* Mobile optimizations */
    @media (max-width: 768px) {
      #cursor-trail {
        display: none;
      }
      
      #floating-particles {
        display: none;
      }
    }
    
    /* Global Quick View Modal Styles */
    .quick-view-modal {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 9999;
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .quick-view-modal.active {
      opacity: 1;
      visibility: visible;
    }

    .quick-view-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.7);
      backdrop-filter: blur(4px);
    }

    .quick-view-container {
      position: relative;
      background: white;
      border-radius: 16px;
      max-width: 90vw;
      max-height: 90vh;
      width: 800px;
      overflow: hidden;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
      transform: scale(0.9);
      transition: transform 0.3s ease;
    }

    .quick-view-modal.active .quick-view-container {
      transform: scale(1);
    }

    .quick-view-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 20px 24px;
      border-bottom: 1px solid #e5e7eb;
      background: #f9fafb;
    }

    .quick-view-header h2 {
      margin: 0;
      font-size: 18px;
      font-weight: 600;
      color: #111827;
    }

    .quick-view-close {
      background: none;
      border: none;
      color: #6b7280;
      cursor: pointer;
      padding: 8px;
      border-radius: 8px;
      transition: all 0.2s ease;
      font-size: 24px;
    }

    .quick-view-close:hover {
      background: #e5e7eb;
      color: #374151;
    }

    .quick-view-content {
      padding: 24px;
      max-height: calc(90vh - 80px);
      overflow-y: auto;
    }

    .quick-view-loading {
      text-align: center;
      padding: 40px;
      color: #6b7280;
    }

    /* Global Wishlist Dropdown Styles */
    .wishlist-dropdown {
      position: fixed;
      top: 80px;
      right: 20px;
      width: 400px;
      background: white;
      border-radius: 12px;
      box-shadow: 0 12px 48px rgba(0, 0, 0, 0.15);
      border: 1px solid #e5e7eb;
      opacity: 0;
      visibility: hidden;
      transform: translateY(-10px);
      transition: all 0.3s ease;
      z-index: 1000;
      max-height: 500px;
      overflow: hidden;
    }

    .wishlist-dropdown.active {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }

    .wishlist-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 20px 24px;
      border-bottom: 1px solid #f3f4f6;
      background: #f9fafb;
      border-radius: 12px 12px 0 0;
    }

    .wishlist-header h3 {
      margin: 0;
      font-size: 18px;
      font-weight: 600;
      color: #111827;
    }

    .wishlist-close {
      background: none;
      border: none;
      color: #6b7280;
      cursor: pointer;
      padding: 4px 8px;
      border-radius: 4px;
      transition: all 0.2s ease;
      font-size: 20px;
    }

    .wishlist-close:hover {
      background: #e5e7eb;
      color: #374151;
    }

    .wishlist-content {
      max-height: 350px;
      overflow-y: auto;
    }

    .wishlist-empty {
      text-align: center;
      padding: 40px 20px;
      color: #6b7280;
    }

    .empty-heart {
      font-size: 48px;
      margin-bottom: 16px;
    }

    .wishlist-empty h4 {
      margin: 0 0 8px 0;
      color: #374151;
      font-size: 16px;
    }

    .wishlist-empty p {
      margin: 0;
      font-size: 14px;
    }

    .wishlist-footer {
      display: flex;
      gap: 8px;
      padding: 16px 20px;
      border-top: 1px solid #f3f4f6;
      background: #f9fafb;
      border-radius: 0 0 12px 12px;
    }

    .wishlist-clear,
    .wishlist-share {
      flex: 1;
      padding: 8px 16px;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
      background: white;
      color: #374151;
    }

    .wishlist-clear:hover {
      background: #fee2e2;
      border-color: #fca5a5;
      color: #dc2626;
    }

    .wishlist-share:hover {
      background: #eff6ff;
      border-color: #93c5fd;
      color: #2563eb;
    }

    @media (max-width: 768px) {
      .wishlist-dropdown {
        width: 90vw;
        max-width: 350px;
        right: 5vw;
      }
    }
    </style>
    
    <!-- Global Wishlist JavaScript -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Global wishlist functionality
      let wishlist = JSON.parse(localStorage.getItem('newthrifts_wishlist') || '[]');
      
      const headerWishlistToggle = document.getElementById('header-wishlist-toggle');
      const headerWishlistCount = document.getElementById('header-wishlist-count');
      const wishlistDropdown = document.getElementById('wishlist-dropdown');
      const wishlistClose = document.getElementById('wishlist-close');
      const wishlistEmpty = document.getElementById('wishlist-empty');
      const wishlistItems = document.getElementById('wishlist-items');
      
      // Update wishlist UI
      function updateWishlistUI() {
        const count = wishlist.length;
        
        if (headerWishlistCount) {
          headerWishlistCount.textContent = count;
          if (count > 0) {
            headerWishlistCount.classList.add('visible');
            headerWishlistToggle?.classList.add('has-items');
          } else {
            headerWishlistCount.classList.remove('visible');
            headerWishlistToggle?.classList.remove('has-items');
          }
        }
        
        // Update dropdown content
        if (wishlistEmpty && wishlistItems) {
          if (count === 0) {
            wishlistEmpty.style.display = 'block';
            wishlistItems.style.display = 'none';
          } else {
            wishlistEmpty.style.display = 'none';
            wishlistItems.style.display = 'block';
            renderWishlistItems();
          }
        }
      }
      
      // Render wishlist items
      function renderWishlistItems() {
        if (!wishlistItems) return;
        
        wishlistItems.innerHTML = wishlist.map(item => `
          <div class="wishlist-item" style="display: flex; align-items: center; padding: 12px; border-bottom: 1px solid #f3f4f6;">
            <img src="${item.image}" alt="${item.title}" style="width: 50px; height: 50px; object-fit: cover; border-radius: 6px; margin-right: 12px;">
            <div style="flex: 1;">
              <h4 style="margin: 0 0 4px 0; font-size: 14px; color: #111827;">${item.title}</h4>
              <div style="font-size: 14px; color: #dc2626; font-weight: 600;">${item.price}</div>
            </div>
            <button onclick="removeFromWishlist('${item.id}')" style="background: none; border: none; color: #6b7280; cursor: pointer; padding: 4px;">√ó</button>
          </div>
        `).join('');
      }
      
      // Add to wishlist function
      window.addToWishlist = function(productData) {
        if (wishlist.find(item => item.id === productData.id)) {
          showMessage('Already in wishlist!', 'info');
          return false;
        }
        
        wishlist.push(productData);
        localStorage.setItem('newthrifts_wishlist', JSON.stringify(wishlist));
        updateWishlistUI();
        showMessage(`${productData.title} added to wishlist!`, 'success');
        return true;
      };
      
      // Remove from wishlist function
      window.removeFromWishlist = function(productId) {
        const index = wishlist.findIndex(item => item.id === productId);
        if (index > -1) {
          const removedItem = wishlist.splice(index, 1)[0];
          localStorage.setItem('newthrifts_wishlist', JSON.stringify(wishlist));
          updateWishlistUI();
          showMessage(`${removedItem.title} removed from wishlist!`, 'info');
        }
      };
      
      // Show message function
      function showMessage(message, type = 'info') {
        const messageEl = document.createElement('div');
        messageEl.textContent = message;
        Object.assign(messageEl.style, {
          position: 'fixed',
          top: '20px',
          right: '20px',
          background: type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#6b7280',
          color: 'white',
          padding: '12px 20px',
          borderRadius: '8px',
          fontSize: '14px',
          fontWeight: '500',
          zIndex: '10000',
          boxShadow: '0 4px 16px rgba(0, 0, 0, 0.15)',
          transform: 'translateX(100%)',
          transition: 'transform 0.3s ease'
        });
        
        document.body.appendChild(messageEl);
        
        setTimeout(() => messageEl.style.transform = 'translateX(0)', 100);
        setTimeout(() => {
          messageEl.style.transform = 'translateX(100%)';
          setTimeout(() => {
            if (document.body.contains(messageEl)) {
              document.body.removeChild(messageEl);
            }
          }, 300);
        }, 3000);
      }
      
      // Toggle wishlist dropdown
      if (headerWishlistToggle) {
        headerWishlistToggle.addEventListener('click', function() {
          wishlistDropdown.classList.toggle('active');
        });
      }
      
      if (wishlistClose) {
        wishlistClose.addEventListener('click', function() {
          wishlistDropdown.classList.remove('active');
        });
      }
      
      // Close dropdown when clicking outside
      document.addEventListener('click', function(e) {
        if (!e.target.closest('.wishlist-dropdown') && !e.target.closest('#header-wishlist-toggle')) {
          wishlistDropdown.classList.remove('active');
        }
      });
      
      // Initialize
      updateWishlistUI();
      
      console.log('Global wishlist initialized with', wishlist.length, 'items');
      
      // Global Quick View functionality
      const quickViewModal = document.getElementById('quick-view-modal');
      const quickViewOverlay = document.getElementById('quick-view-overlay');
      const quickViewClose = document.getElementById('quick-view-close');
      const quickViewContent = document.getElementById('quick-view-content');
      const quickViewTitle = document.getElementById('quick-view-title');
      
      // Open Quick View function
      window.openQuickView = function(productHandle) {
        showQuickViewModal();
        loadQuickViewProduct(productHandle);
      };
      
      function showQuickViewModal() {
        quickViewModal.classList.add('active');
        document.body.style.overflow = 'hidden';
        quickViewModal.setAttribute('aria-hidden', 'false');
      }
      
      function hideQuickViewModal() {
        quickViewModal.classList.remove('active');
        document.body.style.overflow = '';
        quickViewModal.setAttribute('aria-hidden', 'true');
      }
      
      async function loadQuickViewProduct(productHandle) {
        try {
          quickViewContent.innerHTML = '<div class="quick-view-loading">Loading product...</div>';
          
          const response = await fetch(`/products/${productHandle}.js`);
          const product = await response.json();
          
          quickViewTitle.textContent = product.title;
          
          const firstVariant = product.variants[0];
          
          quickViewContent.innerHTML = `
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 24px;">
              <div>
                <img src="${product.images[0]}" alt="${product.title}" style="width: 100%; border-radius: 8px;">
              </div>
              <div>
                <h3 style="margin: 0 0 12px 0; font-size: 24px;">${product.title}</h3>
                <div style="font-size: 20px; color: #dc2626; font-weight: 600; margin-bottom: 16px;">
                  ${new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(firstVariant.price / 100)}
                </div>
                <div style="color: #6b7280; margin-bottom: 24px; line-height: 1.6;">
                  ${product.description || 'No description available.'}
                </div>
                <button onclick="addToCartFromQuickView('${firstVariant.id}')" 
                        style="width: 100%; padding: 16px; background: #27e1c1; color: white; border: none; border-radius: 8px; font-size: 16px; font-weight: 600; cursor: pointer;"
                        ${!firstVariant.available ? 'disabled' : ''}>
                  ${firstVariant.available ? 'Add to Cart' : 'Sold Out'}
                </button>
                <a href="${product.url}" style="display: block; text-align: center; margin-top: 12px; color: #6b7280; text-decoration: none;">
                  View Full Details
                </a>
              </div>
            </div>
          `;
          
        } catch (error) {
          console.error('Error loading product:', error);
          quickViewContent.innerHTML = '<div class="quick-view-loading">Error loading product</div>';
        }
      }
      
      // Add to cart from quick view
      window.addToCartFromQuickView = async function(variantId) {
        try {
          const response = await fetch('/cart/add.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: variantId, quantity: 1 })
          });
          
          if (response.ok) {
            showMessage('Added to cart!', 'success');
            hideQuickViewModal();
          } else {
            showMessage('Failed to add to cart', 'error');
          }
        } catch (error) {
          console.error('Add to cart error:', error);
          showMessage('Error adding to cart', 'error');
        }
      };
      
      // Quick View event listeners
      if (quickViewClose) {
        quickViewClose.addEventListener('click', hideQuickViewModal);
      }
      
      if (quickViewOverlay) {
        quickViewOverlay.addEventListener('click', hideQuickViewModal);
      }
      
      // Keyboard navigation
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && quickViewModal.classList.contains('active')) {
          hideQuickViewModal();
        }
      });
      
      console.log('Global Quick View initialized');
    });
    </script>
  </body>
</html>
